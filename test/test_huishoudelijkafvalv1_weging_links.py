# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from huishoudelijkafval_api_client.models.huishoudelijkafvalv1_weging_links import Huishoudelijkafvalv1WegingLinks

class TestHuishoudelijkafvalv1WegingLinks(unittest.TestCase):
    """Huishoudelijkafvalv1WegingLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Huishoudelijkafvalv1WegingLinks:
        """Test Huishoudelijkafvalv1WegingLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Huishoudelijkafvalv1WegingLinks`
        """
        model = Huishoudelijkafvalv1WegingLinks()
        if include_optional:
            return Huishoudelijkafvalv1WegingLinks(
                var_schema = '',
                var_self = huishoudelijkafval_api_client.models.huishoudelijkafvalweging_link.HuishoudelijkafvalwegingLink(
                    href = '', 
                    title = '', 
                    id = '', ),
                bag_hoofdadres_verblijfsobject = huishoudelijkafval_api_client.models.bag_verblijfsobjecten_raw_identifier.BagVerblijfsobjectenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                gbd_buurt = huishoudelijkafval_api_client.models.gebieden_buurten_raw_identifier.GebiedenBuurtenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                bag_openbareruimte = huishoudelijkafval_api_client.models.bag_openbareruimtes_raw_identifier.BagOpenbareruimtesRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                bag_nummeraanduiding = huishoudelijkafval_api_client.models.bag_nummeraanduidingen_raw_identifier.BagNummeraanduidingenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', )
            )
        else:
            return Huishoudelijkafvalv1WegingLinks(
                var_schema = '',
                var_self = huishoudelijkafval_api_client.models.huishoudelijkafvalweging_link.HuishoudelijkafvalwegingLink(
                    href = '', 
                    title = '', 
                    id = '', ),
                bag_hoofdadres_verblijfsobject = huishoudelijkafval_api_client.models.bag_verblijfsobjecten_raw_identifier.BagVerblijfsobjectenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                gbd_buurt = huishoudelijkafval_api_client.models.gebieden_buurten_raw_identifier.GebiedenBuurtenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                bag_openbareruimte = huishoudelijkafval_api_client.models.bag_openbareruimtes_raw_identifier.BagOpenbareruimtesRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
                bag_nummeraanduiding = huishoudelijkafval_api_client.models.bag_nummeraanduidingen_raw_identifier.BagNummeraanduidingenRawIdentifier(
                    href = '', 
                    title = '', 
                    identificatie = '', ),
        )
        """

    def testHuishoudelijkafvalv1WegingLinks(self):
        """Test Huishoudelijkafvalv1WegingLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
