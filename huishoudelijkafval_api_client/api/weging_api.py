# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import date, datetime
from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr, field_validator
from typing import List, Optional, Union
from typing_extensions import Annotated
from huishoudelijkafval_api_client.models.huishoudelijkafvalweging import Huishoudelijkafvalweging
from huishoudelijkafval_api_client.models.paginated_huishoudelijkafvalweging_list import PaginatedHuishoudelijkafvalwegingList

from huishoudelijkafval_api_client.api_client import ApiClient, RequestSerialized
from huishoudelijkafval_api_client.api_response import ApiResponse
from huishoudelijkafval_api_client.rest import RESTResponseType


class WegingApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    async def huishoudelijkafval_weging_list_slash(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedHuishoudelijkafvalwegingList:
        """huishoudelijkafval_weging_list_slash


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param page: A page number within the paginated result set.
        :type page: int
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id=id,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            page=page,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalwegingList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_weging_list_slash_with_http_info(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedHuishoudelijkafvalwegingList]:
        """huishoudelijkafval_weging_list_slash


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param page: A page number within the paginated result set.
        :type page: int
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id=id,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            page=page,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalwegingList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_weging_list_slash_without_preload_content(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_weging_list_slash


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param page: A page number within the paginated result set.
        :type page: int
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id=id,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            page=page,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalwegingList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_weging_list_slash_serialize(
        self,
        accept_crs,
        content_crs,
        x_api_key,
        count,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        page_size,
        sort,
        bag_hoofdadres_verblijfsobject_identificatie,
        bag_hoofdadres_verblijfsobject_identificatie_in,
        bag_hoofdadres_verblijfsobject_identificatie_isempty,
        bag_hoofdadres_verblijfsobject_identificatie_isnull,
        bag_hoofdadres_verblijfsobject_identificatie_like,
        bag_hoofdadres_verblijfsobject_identificatie_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_openbareruimte_identificatie,
        bag_openbareruimte_identificatie_in,
        bag_openbareruimte_identificatie_isempty,
        bag_openbareruimte_identificatie_isnull,
        bag_openbareruimte_identificatie_like,
        bag_openbareruimte_identificatie_not,
        bediening_code,
        bediening_code_gt,
        bediening_code_gte,
        bediening_code_in,
        bediening_code_isnull,
        bediening_code_lt,
        bediening_code_lte,
        bediening_code_not,
        bediening_omschrijving,
        bediening_omschrijving_in,
        bediening_omschrijving_isempty,
        bediening_omschrijving_isnull,
        bediening_omschrijving_like,
        bediening_omschrijving_not,
        cluster_id,
        cluster_id_in,
        cluster_id_isempty,
        cluster_id_isnull,
        cluster_id_like,
        cluster_id_not,
        cluster_subcluster_indicatie,
        cluster_subcluster_indicatie_isnull,
        datum_weging,
        datum_weging_gt,
        datum_weging_gte,
        datum_weging_in,
        datum_weging_isnull,
        datum_weging_lt,
        datum_weging_lte,
        datum_weging_not,
        eerste_weging,
        eerste_weging_gt,
        eerste_weging_gte,
        eerste_weging_in,
        eerste_weging_isnull,
        eerste_weging_lt,
        eerste_weging_lte,
        eerste_weging_not,
        fractie_code,
        fractie_code_gt,
        fractie_code_gte,
        fractie_code_in,
        fractie_code_isnull,
        fractie_code_lt,
        fractie_code_lte,
        fractie_code_not,
        fractie_omschrijving,
        fractie_omschrijving_in,
        fractie_omschrijving_isempty,
        fractie_omschrijving_isnull,
        fractie_omschrijving_like,
        fractie_omschrijving_not,
        gbd_buurt_identificatie,
        gbd_buurt_identificatie_in,
        gbd_buurt_identificatie_isempty,
        gbd_buurt_identificatie_isnull,
        gbd_buurt_identificatie_like,
        gbd_buurt_identificatie_not,
        geometrie,
        geometrie_intersects,
        geometrie_isnull,
        geometrie_not,
        id,
        id_in,
        id_isempty,
        id_isnull,
        id_like,
        id_not,
        locatienummer,
        locatienummer_in,
        locatienummer_isempty,
        locatienummer_isnull,
        locatienummer_like,
        locatienummer_not,
        netto_gewicht,
        netto_gewicht_gt,
        netto_gewicht_gte,
        netto_gewicht_in,
        netto_gewicht_isnull,
        netto_gewicht_lt,
        netto_gewicht_lte,
        netto_gewicht_not,
        page,
        tijdstip_weging,
        tijdstip_weging_gt,
        tijdstip_weging_gte,
        tijdstip_weging_in,
        tijdstip_weging_isnull,
        tijdstip_weging_lt,
        tijdstip_weging_lte,
        tijdstip_weging_not,
        tweede_weging,
        tweede_weging_gt,
        tweede_weging_gte,
        tweede_weging_in,
        tweede_weging_isnull,
        tweede_weging_lt,
        tweede_weging_lte,
        tweede_weging_not,
        verwijderd_dp,
        verwijderd_dp_isnull,
        volgnummer,
        volgnummer_gt,
        volgnummer_gte,
        volgnummer_in,
        volgnummer_isnull,
        volgnummer_lt,
        volgnummer_lte,
        volgnummer_not,
        weegsysteem_id,
        weegsysteem_id_gt,
        weegsysteem_id_gte,
        weegsysteem_id_in,
        weegsysteem_id_isnull,
        weegsysteem_id_lt,
        weegsysteem_id_lte,
        weegsysteem_id_not,
        weegsysteem_omschrijving,
        weegsysteem_omschrijving_in,
        weegsysteem_omschrijving_isempty,
        weegsysteem_omschrijving_isnull,
        weegsysteem_omschrijving_like,
        weegsysteem_omschrijving_not,
        weging_kenteken,
        weging_kenteken_in,
        weging_kenteken_isempty,
        weging_kenteken_isnull,
        weging_kenteken_like,
        weging_kenteken_not,
        wijzigingsdatum_dp,
        wijzigingsdatum_dp_gt,
        wijzigingsdatum_dp_gte,
        wijzigingsdatum_dp_in,
        wijzigingsdatum_dp_isnull,
        wijzigingsdatum_dp_lt,
        wijzigingsdatum_dp_lte,
        wijzigingsdatum_dp_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'bagHoofdadresVerblijfsobject.identificatie[in]': 'csv',
            'bagHoofdadresVerblijfsobject.identificatie[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagOpenbareruimte.identificatie[in]': 'csv',
            'bagOpenbareruimte.identificatie[not]': 'multi',
            'bedieningCode[in]': 'csv',
            'bedieningCode[not]': 'multi',
            'bedieningOmschrijving[in]': 'csv',
            'bedieningOmschrijving[not]': 'multi',
            'clusterId[in]': 'csv',
            'clusterId[not]': 'multi',
            'datumWeging[in]': 'csv',
            'datumWeging[not]': 'multi',
            'eersteWeging[in]': 'csv',
            'eersteWeging[not]': 'multi',
            'fractieCode[in]': 'csv',
            'fractieCode[not]': 'multi',
            'fractieOmschrijving[in]': 'csv',
            'fractieOmschrijving[not]': 'multi',
            'gbdBuurt.identificatie[in]': 'csv',
            'gbdBuurt.identificatie[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'locatienummer[in]': 'csv',
            'locatienummer[not]': 'multi',
            'nettoGewicht[in]': 'csv',
            'nettoGewicht[not]': 'multi',
            'tijdstipWeging[in]': 'csv',
            'tijdstipWeging[not]': 'multi',
            'tweedeWeging[in]': 'csv',
            'tweedeWeging[not]': 'multi',
            'volgnummer[in]': 'csv',
            'volgnummer[not]': 'multi',
            'weegsysteemId[in]': 'csv',
            'weegsysteemId[not]': 'multi',
            'weegsysteemOmschrijving[in]': 'csv',
            'weegsysteemOmschrijving[not]': 'multi',
            'wegingKenteken[in]': 'csv',
            'wegingKenteken[not]': 'multi',
            'wijzigingsdatumDp[in]': 'csv',
            'wijzigingsdatumDp[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if count is not None:
            
            _query_params.append(('_count', count))
            
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if page_size is not None:
            
            _query_params.append(('_pageSize', page_size))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if bag_hoofdadres_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie', bag_hoofdadres_verblijfsobject_identificatie))
            
        if bag_hoofdadres_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[in]', bag_hoofdadres_verblijfsobject_identificatie_in))
            
        if bag_hoofdadres_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[isempty]', bag_hoofdadres_verblijfsobject_identificatie_isempty))
            
        if bag_hoofdadres_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[isnull]', bag_hoofdadres_verblijfsobject_identificatie_isnull))
            
        if bag_hoofdadres_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[like]', bag_hoofdadres_verblijfsobject_identificatie_like))
            
        if bag_hoofdadres_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[not]', bag_hoofdadres_verblijfsobject_identificatie_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_openbareruimte_identificatie is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie', bag_openbareruimte_identificatie))
            
        if bag_openbareruimte_identificatie_in is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[in]', bag_openbareruimte_identificatie_in))
            
        if bag_openbareruimte_identificatie_isempty is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isempty]', bag_openbareruimte_identificatie_isempty))
            
        if bag_openbareruimte_identificatie_isnull is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isnull]', bag_openbareruimte_identificatie_isnull))
            
        if bag_openbareruimte_identificatie_like is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[like]', bag_openbareruimte_identificatie_like))
            
        if bag_openbareruimte_identificatie_not is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[not]', bag_openbareruimte_identificatie_not))
            
        if bediening_code is not None:
            
            _query_params.append(('bedieningCode', bediening_code))
            
        if bediening_code_gt is not None:
            
            _query_params.append(('bedieningCode[gt]', bediening_code_gt))
            
        if bediening_code_gte is not None:
            
            _query_params.append(('bedieningCode[gte]', bediening_code_gte))
            
        if bediening_code_in is not None:
            
            _query_params.append(('bedieningCode[in]', bediening_code_in))
            
        if bediening_code_isnull is not None:
            
            _query_params.append(('bedieningCode[isnull]', bediening_code_isnull))
            
        if bediening_code_lt is not None:
            
            _query_params.append(('bedieningCode[lt]', bediening_code_lt))
            
        if bediening_code_lte is not None:
            
            _query_params.append(('bedieningCode[lte]', bediening_code_lte))
            
        if bediening_code_not is not None:
            
            _query_params.append(('bedieningCode[not]', bediening_code_not))
            
        if bediening_omschrijving is not None:
            
            _query_params.append(('bedieningOmschrijving', bediening_omschrijving))
            
        if bediening_omschrijving_in is not None:
            
            _query_params.append(('bedieningOmschrijving[in]', bediening_omschrijving_in))
            
        if bediening_omschrijving_isempty is not None:
            
            _query_params.append(('bedieningOmschrijving[isempty]', bediening_omschrijving_isempty))
            
        if bediening_omschrijving_isnull is not None:
            
            _query_params.append(('bedieningOmschrijving[isnull]', bediening_omschrijving_isnull))
            
        if bediening_omschrijving_like is not None:
            
            _query_params.append(('bedieningOmschrijving[like]', bediening_omschrijving_like))
            
        if bediening_omschrijving_not is not None:
            
            _query_params.append(('bedieningOmschrijving[not]', bediening_omschrijving_not))
            
        if cluster_id is not None:
            
            _query_params.append(('clusterId', cluster_id))
            
        if cluster_id_in is not None:
            
            _query_params.append(('clusterId[in]', cluster_id_in))
            
        if cluster_id_isempty is not None:
            
            _query_params.append(('clusterId[isempty]', cluster_id_isempty))
            
        if cluster_id_isnull is not None:
            
            _query_params.append(('clusterId[isnull]', cluster_id_isnull))
            
        if cluster_id_like is not None:
            
            _query_params.append(('clusterId[like]', cluster_id_like))
            
        if cluster_id_not is not None:
            
            _query_params.append(('clusterId[not]', cluster_id_not))
            
        if cluster_subcluster_indicatie is not None:
            
            _query_params.append(('clusterSubclusterIndicatie', cluster_subcluster_indicatie))
            
        if cluster_subcluster_indicatie_isnull is not None:
            
            _query_params.append(('clusterSubclusterIndicatie[isnull]', cluster_subcluster_indicatie_isnull))
            
        if datum_weging is not None:
            if isinstance(datum_weging, date):
                _query_params.append(
                    (
                        'datumWeging',
                        datum_weging.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging', datum_weging))
            
        if datum_weging_gt is not None:
            if isinstance(datum_weging_gt, date):
                _query_params.append(
                    (
                        'datumWeging[gt]',
                        datum_weging_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[gt]', datum_weging_gt))
            
        if datum_weging_gte is not None:
            if isinstance(datum_weging_gte, date):
                _query_params.append(
                    (
                        'datumWeging[gte]',
                        datum_weging_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[gte]', datum_weging_gte))
            
        if datum_weging_in is not None:
            
            _query_params.append(('datumWeging[in]', datum_weging_in))
            
        if datum_weging_isnull is not None:
            
            _query_params.append(('datumWeging[isnull]', datum_weging_isnull))
            
        if datum_weging_lt is not None:
            if isinstance(datum_weging_lt, date):
                _query_params.append(
                    (
                        'datumWeging[lt]',
                        datum_weging_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[lt]', datum_weging_lt))
            
        if datum_weging_lte is not None:
            if isinstance(datum_weging_lte, date):
                _query_params.append(
                    (
                        'datumWeging[lte]',
                        datum_weging_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[lte]', datum_weging_lte))
            
        if datum_weging_not is not None:
            
            _query_params.append(('datumWeging[not]', datum_weging_not))
            
        if eerste_weging is not None:
            
            _query_params.append(('eersteWeging', eerste_weging))
            
        if eerste_weging_gt is not None:
            
            _query_params.append(('eersteWeging[gt]', eerste_weging_gt))
            
        if eerste_weging_gte is not None:
            
            _query_params.append(('eersteWeging[gte]', eerste_weging_gte))
            
        if eerste_weging_in is not None:
            
            _query_params.append(('eersteWeging[in]', eerste_weging_in))
            
        if eerste_weging_isnull is not None:
            
            _query_params.append(('eersteWeging[isnull]', eerste_weging_isnull))
            
        if eerste_weging_lt is not None:
            
            _query_params.append(('eersteWeging[lt]', eerste_weging_lt))
            
        if eerste_weging_lte is not None:
            
            _query_params.append(('eersteWeging[lte]', eerste_weging_lte))
            
        if eerste_weging_not is not None:
            
            _query_params.append(('eersteWeging[not]', eerste_weging_not))
            
        if fractie_code is not None:
            
            _query_params.append(('fractieCode', fractie_code))
            
        if fractie_code_gt is not None:
            
            _query_params.append(('fractieCode[gt]', fractie_code_gt))
            
        if fractie_code_gte is not None:
            
            _query_params.append(('fractieCode[gte]', fractie_code_gte))
            
        if fractie_code_in is not None:
            
            _query_params.append(('fractieCode[in]', fractie_code_in))
            
        if fractie_code_isnull is not None:
            
            _query_params.append(('fractieCode[isnull]', fractie_code_isnull))
            
        if fractie_code_lt is not None:
            
            _query_params.append(('fractieCode[lt]', fractie_code_lt))
            
        if fractie_code_lte is not None:
            
            _query_params.append(('fractieCode[lte]', fractie_code_lte))
            
        if fractie_code_not is not None:
            
            _query_params.append(('fractieCode[not]', fractie_code_not))
            
        if fractie_omschrijving is not None:
            
            _query_params.append(('fractieOmschrijving', fractie_omschrijving))
            
        if fractie_omschrijving_in is not None:
            
            _query_params.append(('fractieOmschrijving[in]', fractie_omschrijving_in))
            
        if fractie_omschrijving_isempty is not None:
            
            _query_params.append(('fractieOmschrijving[isempty]', fractie_omschrijving_isempty))
            
        if fractie_omschrijving_isnull is not None:
            
            _query_params.append(('fractieOmschrijving[isnull]', fractie_omschrijving_isnull))
            
        if fractie_omschrijving_like is not None:
            
            _query_params.append(('fractieOmschrijving[like]', fractie_omschrijving_like))
            
        if fractie_omschrijving_not is not None:
            
            _query_params.append(('fractieOmschrijving[not]', fractie_omschrijving_not))
            
        if gbd_buurt_identificatie is not None:
            
            _query_params.append(('gbdBuurt.identificatie', gbd_buurt_identificatie))
            
        if gbd_buurt_identificatie_in is not None:
            
            _query_params.append(('gbdBuurt.identificatie[in]', gbd_buurt_identificatie_in))
            
        if gbd_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isempty]', gbd_buurt_identificatie_isempty))
            
        if gbd_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isnull]', gbd_buurt_identificatie_isnull))
            
        if gbd_buurt_identificatie_like is not None:
            
            _query_params.append(('gbdBuurt.identificatie[like]', gbd_buurt_identificatie_like))
            
        if gbd_buurt_identificatie_not is not None:
            
            _query_params.append(('gbdBuurt.identificatie[not]', gbd_buurt_identificatie_not))
            
        if geometrie is not None:
            
            _query_params.append(('geometrie', geometrie))
            
        if geometrie_intersects is not None:
            
            _query_params.append(('geometrie[intersects]', geometrie_intersects))
            
        if geometrie_isnull is not None:
            
            _query_params.append(('geometrie[isnull]', geometrie_isnull))
            
        if geometrie_not is not None:
            
            _query_params.append(('geometrie[not]', geometrie_not))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isempty is not None:
            
            _query_params.append(('id[isempty]', id_isempty))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_like is not None:
            
            _query_params.append(('id[like]', id_like))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if locatienummer is not None:
            
            _query_params.append(('locatienummer', locatienummer))
            
        if locatienummer_in is not None:
            
            _query_params.append(('locatienummer[in]', locatienummer_in))
            
        if locatienummer_isempty is not None:
            
            _query_params.append(('locatienummer[isempty]', locatienummer_isempty))
            
        if locatienummer_isnull is not None:
            
            _query_params.append(('locatienummer[isnull]', locatienummer_isnull))
            
        if locatienummer_like is not None:
            
            _query_params.append(('locatienummer[like]', locatienummer_like))
            
        if locatienummer_not is not None:
            
            _query_params.append(('locatienummer[not]', locatienummer_not))
            
        if netto_gewicht is not None:
            
            _query_params.append(('nettoGewicht', netto_gewicht))
            
        if netto_gewicht_gt is not None:
            
            _query_params.append(('nettoGewicht[gt]', netto_gewicht_gt))
            
        if netto_gewicht_gte is not None:
            
            _query_params.append(('nettoGewicht[gte]', netto_gewicht_gte))
            
        if netto_gewicht_in is not None:
            
            _query_params.append(('nettoGewicht[in]', netto_gewicht_in))
            
        if netto_gewicht_isnull is not None:
            
            _query_params.append(('nettoGewicht[isnull]', netto_gewicht_isnull))
            
        if netto_gewicht_lt is not None:
            
            _query_params.append(('nettoGewicht[lt]', netto_gewicht_lt))
            
        if netto_gewicht_lte is not None:
            
            _query_params.append(('nettoGewicht[lte]', netto_gewicht_lte))
            
        if netto_gewicht_not is not None:
            
            _query_params.append(('nettoGewicht[not]', netto_gewicht_not))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if tijdstip_weging is not None:
            
            _query_params.append(('tijdstipWeging', tijdstip_weging))
            
        if tijdstip_weging_gt is not None:
            
            _query_params.append(('tijdstipWeging[gt]', tijdstip_weging_gt))
            
        if tijdstip_weging_gte is not None:
            
            _query_params.append(('tijdstipWeging[gte]', tijdstip_weging_gte))
            
        if tijdstip_weging_in is not None:
            
            _query_params.append(('tijdstipWeging[in]', tijdstip_weging_in))
            
        if tijdstip_weging_isnull is not None:
            
            _query_params.append(('tijdstipWeging[isnull]', tijdstip_weging_isnull))
            
        if tijdstip_weging_lt is not None:
            
            _query_params.append(('tijdstipWeging[lt]', tijdstip_weging_lt))
            
        if tijdstip_weging_lte is not None:
            
            _query_params.append(('tijdstipWeging[lte]', tijdstip_weging_lte))
            
        if tijdstip_weging_not is not None:
            
            _query_params.append(('tijdstipWeging[not]', tijdstip_weging_not))
            
        if tweede_weging is not None:
            
            _query_params.append(('tweedeWeging', tweede_weging))
            
        if tweede_weging_gt is not None:
            
            _query_params.append(('tweedeWeging[gt]', tweede_weging_gt))
            
        if tweede_weging_gte is not None:
            
            _query_params.append(('tweedeWeging[gte]', tweede_weging_gte))
            
        if tweede_weging_in is not None:
            
            _query_params.append(('tweedeWeging[in]', tweede_weging_in))
            
        if tweede_weging_isnull is not None:
            
            _query_params.append(('tweedeWeging[isnull]', tweede_weging_isnull))
            
        if tweede_weging_lt is not None:
            
            _query_params.append(('tweedeWeging[lt]', tweede_weging_lt))
            
        if tweede_weging_lte is not None:
            
            _query_params.append(('tweedeWeging[lte]', tweede_weging_lte))
            
        if tweede_weging_not is not None:
            
            _query_params.append(('tweedeWeging[not]', tweede_weging_not))
            
        if verwijderd_dp is not None:
            
            _query_params.append(('verwijderdDp', verwijderd_dp))
            
        if verwijderd_dp_isnull is not None:
            
            _query_params.append(('verwijderdDp[isnull]', verwijderd_dp_isnull))
            
        if volgnummer is not None:
            
            _query_params.append(('volgnummer', volgnummer))
            
        if volgnummer_gt is not None:
            
            _query_params.append(('volgnummer[gt]', volgnummer_gt))
            
        if volgnummer_gte is not None:
            
            _query_params.append(('volgnummer[gte]', volgnummer_gte))
            
        if volgnummer_in is not None:
            
            _query_params.append(('volgnummer[in]', volgnummer_in))
            
        if volgnummer_isnull is not None:
            
            _query_params.append(('volgnummer[isnull]', volgnummer_isnull))
            
        if volgnummer_lt is not None:
            
            _query_params.append(('volgnummer[lt]', volgnummer_lt))
            
        if volgnummer_lte is not None:
            
            _query_params.append(('volgnummer[lte]', volgnummer_lte))
            
        if volgnummer_not is not None:
            
            _query_params.append(('volgnummer[not]', volgnummer_not))
            
        if weegsysteem_id is not None:
            
            _query_params.append(('weegsysteemId', weegsysteem_id))
            
        if weegsysteem_id_gt is not None:
            
            _query_params.append(('weegsysteemId[gt]', weegsysteem_id_gt))
            
        if weegsysteem_id_gte is not None:
            
            _query_params.append(('weegsysteemId[gte]', weegsysteem_id_gte))
            
        if weegsysteem_id_in is not None:
            
            _query_params.append(('weegsysteemId[in]', weegsysteem_id_in))
            
        if weegsysteem_id_isnull is not None:
            
            _query_params.append(('weegsysteemId[isnull]', weegsysteem_id_isnull))
            
        if weegsysteem_id_lt is not None:
            
            _query_params.append(('weegsysteemId[lt]', weegsysteem_id_lt))
            
        if weegsysteem_id_lte is not None:
            
            _query_params.append(('weegsysteemId[lte]', weegsysteem_id_lte))
            
        if weegsysteem_id_not is not None:
            
            _query_params.append(('weegsysteemId[not]', weegsysteem_id_not))
            
        if weegsysteem_omschrijving is not None:
            
            _query_params.append(('weegsysteemOmschrijving', weegsysteem_omschrijving))
            
        if weegsysteem_omschrijving_in is not None:
            
            _query_params.append(('weegsysteemOmschrijving[in]', weegsysteem_omschrijving_in))
            
        if weegsysteem_omschrijving_isempty is not None:
            
            _query_params.append(('weegsysteemOmschrijving[isempty]', weegsysteem_omschrijving_isempty))
            
        if weegsysteem_omschrijving_isnull is not None:
            
            _query_params.append(('weegsysteemOmschrijving[isnull]', weegsysteem_omschrijving_isnull))
            
        if weegsysteem_omschrijving_like is not None:
            
            _query_params.append(('weegsysteemOmschrijving[like]', weegsysteem_omschrijving_like))
            
        if weegsysteem_omschrijving_not is not None:
            
            _query_params.append(('weegsysteemOmschrijving[not]', weegsysteem_omschrijving_not))
            
        if weging_kenteken is not None:
            
            _query_params.append(('wegingKenteken', weging_kenteken))
            
        if weging_kenteken_in is not None:
            
            _query_params.append(('wegingKenteken[in]', weging_kenteken_in))
            
        if weging_kenteken_isempty is not None:
            
            _query_params.append(('wegingKenteken[isempty]', weging_kenteken_isempty))
            
        if weging_kenteken_isnull is not None:
            
            _query_params.append(('wegingKenteken[isnull]', weging_kenteken_isnull))
            
        if weging_kenteken_like is not None:
            
            _query_params.append(('wegingKenteken[like]', weging_kenteken_like))
            
        if weging_kenteken_not is not None:
            
            _query_params.append(('wegingKenteken[not]', weging_kenteken_not))
            
        if wijzigingsdatum_dp is not None:
            if isinstance(wijzigingsdatum_dp, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp',
                        wijzigingsdatum_dp.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp', wijzigingsdatum_dp))
            
        if wijzigingsdatum_dp_gt is not None:
            if isinstance(wijzigingsdatum_dp_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[gt]',
                        wijzigingsdatum_dp_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[gt]', wijzigingsdatum_dp_gt))
            
        if wijzigingsdatum_dp_gte is not None:
            if isinstance(wijzigingsdatum_dp_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[gte]',
                        wijzigingsdatum_dp_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[gte]', wijzigingsdatum_dp_gte))
            
        if wijzigingsdatum_dp_in is not None:
            
            _query_params.append(('wijzigingsdatumDp[in]', wijzigingsdatum_dp_in))
            
        if wijzigingsdatum_dp_isnull is not None:
            
            _query_params.append(('wijzigingsdatumDp[isnull]', wijzigingsdatum_dp_isnull))
            
        if wijzigingsdatum_dp_lt is not None:
            if isinstance(wijzigingsdatum_dp_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[lt]',
                        wijzigingsdatum_dp_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[lt]', wijzigingsdatum_dp_lt))
            
        if wijzigingsdatum_dp_lte is not None:
            if isinstance(wijzigingsdatum_dp_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[lte]',
                        wijzigingsdatum_dp_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[lte]', wijzigingsdatum_dp_lte))
            
        if wijzigingsdatum_dp_not is not None:
            
            _query_params.append(('wijzigingsdatumDp[not]', wijzigingsdatum_dp_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/weging',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    async def huishoudelijkafval_weging_retrieve_slash(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id2: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Huishoudelijkafvalweging:
        """huishoudelijkafval_weging_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id2: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id2: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id2=id2,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalweging",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_weging_retrieve_slash_with_http_info(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id2: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Huishoudelijkafvalweging]:
        """huishoudelijkafval_weging_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id2: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id2: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id2=id2,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalweging",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_weging_retrieve_slash_without_preload_content(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_hoofdadres_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bediening_code: Annotated[Optional[StrictInt], Field(description="Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.")] = None,
        bediening_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bediening_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bediening_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bediening_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bediening_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        bediening_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden")] = None,
        bediening_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bediening_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bediening_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bediening_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bediening_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_id: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd")] = None,
        cluster_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        cluster_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        cluster_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        cluster_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        cluster_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        cluster_subcluster_indicatie: Annotated[Optional[StrictBool], Field(description="Indicatie of het een cluster betreft dat is gesplitst door een weg")] = None,
        cluster_subcluster_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging: Annotated[Optional[date], Field(description="Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)")] = None,
        datum_weging_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        datum_weging_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_weging_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        datum_weging_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        datum_weging_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        eerste_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Eerste weging container: gewicht vol in Kg")] = None,
        eerste_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        eerste_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        eerste_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eerste_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eerste_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        eerste_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        eerste_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        fractie_code: Annotated[Optional[StrictInt], Field(description="Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend")] = None,
        fractie_code_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        fractie_code_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        fractie_code_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_code_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        fractie_code_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        fractie_code_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving afvalfractie zoals door Welvaarts is aangeleverd")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        id2: Annotated[Optional[StrictStr], Field(description="Uniek identificerend kenmerk weging. Deze is per container vastgelegd")] = None,
        id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        locatienummer: Annotated[Optional[StrictStr], Field(description="Locatienummer (cluster) zoals door Welvaarts is aangeleverd")] = None,
        locatienummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        locatienummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        locatienummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        locatienummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        locatienummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        netto_gewicht: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto gewicht van het ingezamelde afval van de container in Kg")] = None,
        netto_gewicht_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        netto_gewicht_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        netto_gewicht_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        netto_gewicht_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        netto_gewicht_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        netto_gewicht_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        netto_gewicht_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        tijdstip_weging: Annotated[Optional[StrictStr], Field(description="Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)")] = None,
        tijdstip_weging_gt: Annotated[Optional[StrictStr], Field(description="Greater than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_gte: Annotated[Optional[StrictStr], Field(description="Greater than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tijdstip_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tijdstip_weging_lt: Annotated[Optional[StrictStr], Field(description="Less than; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_lte: Annotated[Optional[StrictStr], Field(description="Less than or equal to; use hh:mm[:ss[.ms]]")] = None,
        tijdstip_weging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; use hh:mm[:ss[.ms]]")] = None,
        tweede_weging: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Tweede weging container: gewicht vol in Kg")] = None,
        tweede_weging_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        tweede_weging_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        tweede_weging_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tweede_weging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tweede_weging_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        tweede_weging_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        tweede_weging_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        verwijderd_dp: Annotated[Optional[StrictBool], Field(description="Indicatie of het object verwijderd is bij de bronhouder")] = None,
        verwijderd_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer: Annotated[Optional[StrictInt], Field(description="Oplopende nummering wegingen per weegsysteem")] = None,
        volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk weegsysteem (behorend bij voertuig)")] = None,
        weegsysteem_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        weegsysteem_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        weegsysteem_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        weegsysteem_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        weegsysteem_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        weegsysteem_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving van weegsysteem")] = None,
        weegsysteem_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weegsysteem_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weegsysteem_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weegsysteem_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weegsysteem_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        weging_kenteken: Annotated[Optional[StrictStr], Field(description="Het kenteken van het voertuig")] = None,
        weging_kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        weging_kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        weging_kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        weging_kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        weging_kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum_dp: Annotated[Optional[datetime], Field(description="Datum waarop het object is gewijzigd")] = None,
        wijzigingsdatum_dp_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_dp_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_dp_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_dp_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_weging_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param bag_hoofdadres_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_hoofdadres_verblijfsobject_identificatie: str
        :param bag_hoofdadres_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_hoofdadres_verblijfsobject_identificatie_in: List[str]
        :param bag_hoofdadres_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isempty: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_hoofdadres_verblijfsobject_identificatie_isnull: bool
        :param bag_hoofdadres_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_hoofdadres_verblijfsobject_identificatie_like: str
        :param bag_hoofdadres_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_hoofdadres_verblijfsobject_identificatie_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bediening_code: Code van de wijze waarop de bediening van de weging heeft plaatsgevonden. Mogelijke waarden: 0 - Handmatig, 1 - Automatisch, 3 - onbekend.
        :type bediening_code: int
        :param bediening_code_gt: Greater than; number
        :type bediening_code_gt: int
        :param bediening_code_gte: Greater than or equal to; number
        :type bediening_code_gte: int
        :param bediening_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_code_in: List[int]
        :param bediening_code_isnull: Whether the field has a NULL value or not.
        :type bediening_code_isnull: bool
        :param bediening_code_lt: Less than; number
        :type bediening_code_lt: int
        :param bediening_code_lte: Less than or equal to; number
        :type bediening_code_lte: int
        :param bediening_code_not: Exclude matches; number
        :type bediening_code_not: List[int]
        :param bediening_omschrijving: Omschrijving van de wijze waarop de bediening van de weging heeft plaatsgevonden
        :type bediening_omschrijving: str
        :param bediening_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bediening_omschrijving_in: List[str]
        :param bediening_omschrijving_isempty: Whether the field is empty or not.
        :type bediening_omschrijving_isempty: bool
        :param bediening_omschrijving_isnull: Whether the field has a NULL value or not.
        :type bediening_omschrijving_isnull: bool
        :param bediening_omschrijving_like: Matches text using wildcards (? and *).
        :type bediening_omschrijving_like: str
        :param bediening_omschrijving_not: Exclude matches; text
        :type bediening_omschrijving_not: List[str]
        :param cluster_id: Uniek identificerend kenmerk van cluster waaraan de container is gerelateerd
        :type cluster_id: str
        :param cluster_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type cluster_id_in: List[str]
        :param cluster_id_isempty: Whether the field is empty or not.
        :type cluster_id_isempty: bool
        :param cluster_id_isnull: Whether the field has a NULL value or not.
        :type cluster_id_isnull: bool
        :param cluster_id_like: Matches text using wildcards (? and *).
        :type cluster_id_like: str
        :param cluster_id_not: Exclude matches; text
        :type cluster_id_not: List[str]
        :param cluster_subcluster_indicatie: Indicatie of het een cluster betreft dat is gesplitst door een weg
        :type cluster_subcluster_indicatie: bool
        :param cluster_subcluster_indicatie_isnull: Whether the field has a NULL value or not.
        :type cluster_subcluster_indicatie_isnull: bool
        :param datum_weging: Datum wanneer de weging is uitgevoerd (yyyy-mm-dd)
        :type datum_weging: date
        :param datum_weging_gt: Greater than; use yyyy-mm-dd
        :type datum_weging_gt: date
        :param datum_weging_gte: Greater than or equal to; use yyyy-mm-dd
        :type datum_weging_gte: date
        :param datum_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_weging_in: List[date]
        :param datum_weging_isnull: Whether the field has a NULL value or not.
        :type datum_weging_isnull: bool
        :param datum_weging_lt: Less than; use yyyy-mm-dd
        :type datum_weging_lt: date
        :param datum_weging_lte: Less than or equal to; use yyyy-mm-dd
        :type datum_weging_lte: date
        :param datum_weging_not: Exclude matches; use yyyy-mm-dd
        :type datum_weging_not: List[date]
        :param eerste_weging: Eerste weging container: gewicht vol in Kg
        :type eerste_weging: float
        :param eerste_weging_gt: Greater than; number
        :type eerste_weging_gt: float
        :param eerste_weging_gte: Greater than or equal to; number
        :type eerste_weging_gte: float
        :param eerste_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eerste_weging_in: List[float]
        :param eerste_weging_isnull: Whether the field has a NULL value or not.
        :type eerste_weging_isnull: bool
        :param eerste_weging_lt: Less than; number
        :type eerste_weging_lt: float
        :param eerste_weging_lte: Less than or equal to; number
        :type eerste_weging_lte: float
        :param eerste_weging_not: Exclude matches; number
        :type eerste_weging_not: List[float]
        :param fractie_code: Code afvalfractie zoals door Welvaarts is aangeleverd, 1: Rest, 2: Glas, 3: Papier, 4: Plastic, 5: Textiel, 6: GFT, 7: Grof, 8: PMD, 9: Brood, -99: Onbekend
        :type fractie_code: int
        :param fractie_code_gt: Greater than; number
        :type fractie_code_gt: int
        :param fractie_code_gte: Greater than or equal to; number
        :type fractie_code_gte: int
        :param fractie_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_code_in: List[int]
        :param fractie_code_isnull: Whether the field has a NULL value or not.
        :type fractie_code_isnull: bool
        :param fractie_code_lt: Less than; number
        :type fractie_code_lt: int
        :param fractie_code_lte: Less than or equal to; number
        :type fractie_code_lte: int
        :param fractie_code_not: Exclude matches; number
        :type fractie_code_not: List[int]
        :param fractie_omschrijving: Omschrijving afvalfractie zoals door Welvaarts is aangeleverd
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param geometrie: Puntgeometrie in RD (epsg:28992) van de weging zoals door Welvaarts aangeleverd
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param id2: Uniek identificerend kenmerk weging. Deze is per container vastgelegd
        :type id2: str
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[str]
        :param id_isempty: Whether the field is empty or not.
        :type id_isempty: bool
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_like: Matches text using wildcards (? and *).
        :type id_like: str
        :param id_not: Exclude matches; text
        :type id_not: List[str]
        :param locatienummer: Locatienummer (cluster) zoals door Welvaarts is aangeleverd
        :type locatienummer: str
        :param locatienummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type locatienummer_in: List[str]
        :param locatienummer_isempty: Whether the field is empty or not.
        :type locatienummer_isempty: bool
        :param locatienummer_isnull: Whether the field has a NULL value or not.
        :type locatienummer_isnull: bool
        :param locatienummer_like: Matches text using wildcards (? and *).
        :type locatienummer_like: str
        :param locatienummer_not: Exclude matches; text
        :type locatienummer_not: List[str]
        :param netto_gewicht: Netto gewicht van het ingezamelde afval van de container in Kg
        :type netto_gewicht: float
        :param netto_gewicht_gt: Greater than; number
        :type netto_gewicht_gt: float
        :param netto_gewicht_gte: Greater than or equal to; number
        :type netto_gewicht_gte: float
        :param netto_gewicht_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type netto_gewicht_in: List[float]
        :param netto_gewicht_isnull: Whether the field has a NULL value or not.
        :type netto_gewicht_isnull: bool
        :param netto_gewicht_lt: Less than; number
        :type netto_gewicht_lt: float
        :param netto_gewicht_lte: Less than or equal to; number
        :type netto_gewicht_lte: float
        :param netto_gewicht_not: Exclude matches; number
        :type netto_gewicht_not: List[float]
        :param tijdstip_weging: Tijdstip wanneer de weging is uitgevoerd (HH24:MI:SS)
        :type tijdstip_weging: str
        :param tijdstip_weging_gt: Greater than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gt: str
        :param tijdstip_weging_gte: Greater than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_gte: str
        :param tijdstip_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tijdstip_weging_in: List[str]
        :param tijdstip_weging_isnull: Whether the field has a NULL value or not.
        :type tijdstip_weging_isnull: bool
        :param tijdstip_weging_lt: Less than; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lt: str
        :param tijdstip_weging_lte: Less than or equal to; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_lte: str
        :param tijdstip_weging_not: Exclude matches; use hh:mm[:ss[.ms]]
        :type tijdstip_weging_not: List[str]
        :param tweede_weging: Tweede weging container: gewicht vol in Kg
        :type tweede_weging: float
        :param tweede_weging_gt: Greater than; number
        :type tweede_weging_gt: float
        :param tweede_weging_gte: Greater than or equal to; number
        :type tweede_weging_gte: float
        :param tweede_weging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tweede_weging_in: List[float]
        :param tweede_weging_isnull: Whether the field has a NULL value or not.
        :type tweede_weging_isnull: bool
        :param tweede_weging_lt: Less than; number
        :type tweede_weging_lt: float
        :param tweede_weging_lte: Less than or equal to; number
        :type tweede_weging_lte: float
        :param tweede_weging_not: Exclude matches; number
        :type tweede_weging_not: List[float]
        :param verwijderd_dp: Indicatie of het object verwijderd is bij de bronhouder
        :type verwijderd_dp: bool
        :param verwijderd_dp_isnull: Whether the field has a NULL value or not.
        :type verwijderd_dp_isnull: bool
        :param volgnummer: Oplopende nummering wegingen per weegsysteem
        :type volgnummer: int
        :param volgnummer_gt: Greater than; number
        :type volgnummer_gt: int
        :param volgnummer_gte: Greater than or equal to; number
        :type volgnummer_gte: int
        :param volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type volgnummer_in: List[int]
        :param volgnummer_isnull: Whether the field has a NULL value or not.
        :type volgnummer_isnull: bool
        :param volgnummer_lt: Less than; number
        :type volgnummer_lt: int
        :param volgnummer_lte: Less than or equal to; number
        :type volgnummer_lte: int
        :param volgnummer_not: Exclude matches; number
        :type volgnummer_not: List[int]
        :param weegsysteem_id: Identificerend kenmerk weegsysteem (behorend bij voertuig)
        :type weegsysteem_id: int
        :param weegsysteem_id_gt: Greater than; number
        :type weegsysteem_id_gt: int
        :param weegsysteem_id_gte: Greater than or equal to; number
        :type weegsysteem_id_gte: int
        :param weegsysteem_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_id_in: List[int]
        :param weegsysteem_id_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_id_isnull: bool
        :param weegsysteem_id_lt: Less than; number
        :type weegsysteem_id_lt: int
        :param weegsysteem_id_lte: Less than or equal to; number
        :type weegsysteem_id_lte: int
        :param weegsysteem_id_not: Exclude matches; number
        :type weegsysteem_id_not: List[int]
        :param weegsysteem_omschrijving: Omschrijving van weegsysteem
        :type weegsysteem_omschrijving: str
        :param weegsysteem_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weegsysteem_omschrijving_in: List[str]
        :param weegsysteem_omschrijving_isempty: Whether the field is empty or not.
        :type weegsysteem_omschrijving_isempty: bool
        :param weegsysteem_omschrijving_isnull: Whether the field has a NULL value or not.
        :type weegsysteem_omschrijving_isnull: bool
        :param weegsysteem_omschrijving_like: Matches text using wildcards (? and *).
        :type weegsysteem_omschrijving_like: str
        :param weegsysteem_omschrijving_not: Exclude matches; text
        :type weegsysteem_omschrijving_not: List[str]
        :param weging_kenteken: Het kenteken van het voertuig
        :type weging_kenteken: str
        :param weging_kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type weging_kenteken_in: List[str]
        :param weging_kenteken_isempty: Whether the field is empty or not.
        :type weging_kenteken_isempty: bool
        :param weging_kenteken_isnull: Whether the field has a NULL value or not.
        :type weging_kenteken_isnull: bool
        :param weging_kenteken_like: Matches text using wildcards (? and *).
        :type weging_kenteken_like: str
        :param weging_kenteken_not: Exclude matches; text
        :type weging_kenteken_not: List[str]
        :param wijzigingsdatum_dp: Datum waarop het object is gewijzigd
        :type wijzigingsdatum_dp: datetime
        :param wijzigingsdatum_dp_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gt: datetime
        :param wijzigingsdatum_dp_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_gte: datetime
        :param wijzigingsdatum_dp_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_dp_in: List[datetime]
        :param wijzigingsdatum_dp_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_dp_isnull: bool
        :param wijzigingsdatum_dp_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lt: datetime
        :param wijzigingsdatum_dp_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_lte: datetime
        :param wijzigingsdatum_dp_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_dp_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_weging_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            bag_hoofdadres_verblijfsobject_identificatie=bag_hoofdadres_verblijfsobject_identificatie,
            bag_hoofdadres_verblijfsobject_identificatie_in=bag_hoofdadres_verblijfsobject_identificatie_in,
            bag_hoofdadres_verblijfsobject_identificatie_isempty=bag_hoofdadres_verblijfsobject_identificatie_isempty,
            bag_hoofdadres_verblijfsobject_identificatie_isnull=bag_hoofdadres_verblijfsobject_identificatie_isnull,
            bag_hoofdadres_verblijfsobject_identificatie_like=bag_hoofdadres_verblijfsobject_identificatie_like,
            bag_hoofdadres_verblijfsobject_identificatie_not=bag_hoofdadres_verblijfsobject_identificatie_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bediening_code=bediening_code,
            bediening_code_gt=bediening_code_gt,
            bediening_code_gte=bediening_code_gte,
            bediening_code_in=bediening_code_in,
            bediening_code_isnull=bediening_code_isnull,
            bediening_code_lt=bediening_code_lt,
            bediening_code_lte=bediening_code_lte,
            bediening_code_not=bediening_code_not,
            bediening_omschrijving=bediening_omschrijving,
            bediening_omschrijving_in=bediening_omschrijving_in,
            bediening_omschrijving_isempty=bediening_omschrijving_isempty,
            bediening_omschrijving_isnull=bediening_omschrijving_isnull,
            bediening_omschrijving_like=bediening_omschrijving_like,
            bediening_omschrijving_not=bediening_omschrijving_not,
            cluster_id=cluster_id,
            cluster_id_in=cluster_id_in,
            cluster_id_isempty=cluster_id_isempty,
            cluster_id_isnull=cluster_id_isnull,
            cluster_id_like=cluster_id_like,
            cluster_id_not=cluster_id_not,
            cluster_subcluster_indicatie=cluster_subcluster_indicatie,
            cluster_subcluster_indicatie_isnull=cluster_subcluster_indicatie_isnull,
            datum_weging=datum_weging,
            datum_weging_gt=datum_weging_gt,
            datum_weging_gte=datum_weging_gte,
            datum_weging_in=datum_weging_in,
            datum_weging_isnull=datum_weging_isnull,
            datum_weging_lt=datum_weging_lt,
            datum_weging_lte=datum_weging_lte,
            datum_weging_not=datum_weging_not,
            eerste_weging=eerste_weging,
            eerste_weging_gt=eerste_weging_gt,
            eerste_weging_gte=eerste_weging_gte,
            eerste_weging_in=eerste_weging_in,
            eerste_weging_isnull=eerste_weging_isnull,
            eerste_weging_lt=eerste_weging_lt,
            eerste_weging_lte=eerste_weging_lte,
            eerste_weging_not=eerste_weging_not,
            fractie_code=fractie_code,
            fractie_code_gt=fractie_code_gt,
            fractie_code_gte=fractie_code_gte,
            fractie_code_in=fractie_code_in,
            fractie_code_isnull=fractie_code_isnull,
            fractie_code_lt=fractie_code_lt,
            fractie_code_lte=fractie_code_lte,
            fractie_code_not=fractie_code_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            id2=id2,
            id_in=id_in,
            id_isempty=id_isempty,
            id_isnull=id_isnull,
            id_like=id_like,
            id_not=id_not,
            locatienummer=locatienummer,
            locatienummer_in=locatienummer_in,
            locatienummer_isempty=locatienummer_isempty,
            locatienummer_isnull=locatienummer_isnull,
            locatienummer_like=locatienummer_like,
            locatienummer_not=locatienummer_not,
            netto_gewicht=netto_gewicht,
            netto_gewicht_gt=netto_gewicht_gt,
            netto_gewicht_gte=netto_gewicht_gte,
            netto_gewicht_in=netto_gewicht_in,
            netto_gewicht_isnull=netto_gewicht_isnull,
            netto_gewicht_lt=netto_gewicht_lt,
            netto_gewicht_lte=netto_gewicht_lte,
            netto_gewicht_not=netto_gewicht_not,
            tijdstip_weging=tijdstip_weging,
            tijdstip_weging_gt=tijdstip_weging_gt,
            tijdstip_weging_gte=tijdstip_weging_gte,
            tijdstip_weging_in=tijdstip_weging_in,
            tijdstip_weging_isnull=tijdstip_weging_isnull,
            tijdstip_weging_lt=tijdstip_weging_lt,
            tijdstip_weging_lte=tijdstip_weging_lte,
            tijdstip_weging_not=tijdstip_weging_not,
            tweede_weging=tweede_weging,
            tweede_weging_gt=tweede_weging_gt,
            tweede_weging_gte=tweede_weging_gte,
            tweede_weging_in=tweede_weging_in,
            tweede_weging_isnull=tweede_weging_isnull,
            tweede_weging_lt=tweede_weging_lt,
            tweede_weging_lte=tweede_weging_lte,
            tweede_weging_not=tweede_weging_not,
            verwijderd_dp=verwijderd_dp,
            verwijderd_dp_isnull=verwijderd_dp_isnull,
            volgnummer=volgnummer,
            volgnummer_gt=volgnummer_gt,
            volgnummer_gte=volgnummer_gte,
            volgnummer_in=volgnummer_in,
            volgnummer_isnull=volgnummer_isnull,
            volgnummer_lt=volgnummer_lt,
            volgnummer_lte=volgnummer_lte,
            volgnummer_not=volgnummer_not,
            weegsysteem_id=weegsysteem_id,
            weegsysteem_id_gt=weegsysteem_id_gt,
            weegsysteem_id_gte=weegsysteem_id_gte,
            weegsysteem_id_in=weegsysteem_id_in,
            weegsysteem_id_isnull=weegsysteem_id_isnull,
            weegsysteem_id_lt=weegsysteem_id_lt,
            weegsysteem_id_lte=weegsysteem_id_lte,
            weegsysteem_id_not=weegsysteem_id_not,
            weegsysteem_omschrijving=weegsysteem_omschrijving,
            weegsysteem_omschrijving_in=weegsysteem_omschrijving_in,
            weegsysteem_omschrijving_isempty=weegsysteem_omschrijving_isempty,
            weegsysteem_omschrijving_isnull=weegsysteem_omschrijving_isnull,
            weegsysteem_omschrijving_like=weegsysteem_omschrijving_like,
            weegsysteem_omschrijving_not=weegsysteem_omschrijving_not,
            weging_kenteken=weging_kenteken,
            weging_kenteken_in=weging_kenteken_in,
            weging_kenteken_isempty=weging_kenteken_isempty,
            weging_kenteken_isnull=weging_kenteken_isnull,
            weging_kenteken_like=weging_kenteken_like,
            weging_kenteken_not=weging_kenteken_not,
            wijzigingsdatum_dp=wijzigingsdatum_dp,
            wijzigingsdatum_dp_gt=wijzigingsdatum_dp_gt,
            wijzigingsdatum_dp_gte=wijzigingsdatum_dp_gte,
            wijzigingsdatum_dp_in=wijzigingsdatum_dp_in,
            wijzigingsdatum_dp_isnull=wijzigingsdatum_dp_isnull,
            wijzigingsdatum_dp_lt=wijzigingsdatum_dp_lt,
            wijzigingsdatum_dp_lte=wijzigingsdatum_dp_lte,
            wijzigingsdatum_dp_not=wijzigingsdatum_dp_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalweging",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_weging_retrieve_slash_serialize(
        self,
        id,
        accept_crs,
        content_crs,
        x_api_key,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        sort,
        bag_hoofdadres_verblijfsobject_identificatie,
        bag_hoofdadres_verblijfsobject_identificatie_in,
        bag_hoofdadres_verblijfsobject_identificatie_isempty,
        bag_hoofdadres_verblijfsobject_identificatie_isnull,
        bag_hoofdadres_verblijfsobject_identificatie_like,
        bag_hoofdadres_verblijfsobject_identificatie_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_openbareruimte_identificatie,
        bag_openbareruimte_identificatie_in,
        bag_openbareruimte_identificatie_isempty,
        bag_openbareruimte_identificatie_isnull,
        bag_openbareruimte_identificatie_like,
        bag_openbareruimte_identificatie_not,
        bediening_code,
        bediening_code_gt,
        bediening_code_gte,
        bediening_code_in,
        bediening_code_isnull,
        bediening_code_lt,
        bediening_code_lte,
        bediening_code_not,
        bediening_omschrijving,
        bediening_omschrijving_in,
        bediening_omschrijving_isempty,
        bediening_omschrijving_isnull,
        bediening_omschrijving_like,
        bediening_omschrijving_not,
        cluster_id,
        cluster_id_in,
        cluster_id_isempty,
        cluster_id_isnull,
        cluster_id_like,
        cluster_id_not,
        cluster_subcluster_indicatie,
        cluster_subcluster_indicatie_isnull,
        datum_weging,
        datum_weging_gt,
        datum_weging_gte,
        datum_weging_in,
        datum_weging_isnull,
        datum_weging_lt,
        datum_weging_lte,
        datum_weging_not,
        eerste_weging,
        eerste_weging_gt,
        eerste_weging_gte,
        eerste_weging_in,
        eerste_weging_isnull,
        eerste_weging_lt,
        eerste_weging_lte,
        eerste_weging_not,
        fractie_code,
        fractie_code_gt,
        fractie_code_gte,
        fractie_code_in,
        fractie_code_isnull,
        fractie_code_lt,
        fractie_code_lte,
        fractie_code_not,
        fractie_omschrijving,
        fractie_omschrijving_in,
        fractie_omschrijving_isempty,
        fractie_omschrijving_isnull,
        fractie_omschrijving_like,
        fractie_omschrijving_not,
        gbd_buurt_identificatie,
        gbd_buurt_identificatie_in,
        gbd_buurt_identificatie_isempty,
        gbd_buurt_identificatie_isnull,
        gbd_buurt_identificatie_like,
        gbd_buurt_identificatie_not,
        geometrie,
        geometrie_intersects,
        geometrie_isnull,
        geometrie_not,
        id2,
        id_in,
        id_isempty,
        id_isnull,
        id_like,
        id_not,
        locatienummer,
        locatienummer_in,
        locatienummer_isempty,
        locatienummer_isnull,
        locatienummer_like,
        locatienummer_not,
        netto_gewicht,
        netto_gewicht_gt,
        netto_gewicht_gte,
        netto_gewicht_in,
        netto_gewicht_isnull,
        netto_gewicht_lt,
        netto_gewicht_lte,
        netto_gewicht_not,
        tijdstip_weging,
        tijdstip_weging_gt,
        tijdstip_weging_gte,
        tijdstip_weging_in,
        tijdstip_weging_isnull,
        tijdstip_weging_lt,
        tijdstip_weging_lte,
        tijdstip_weging_not,
        tweede_weging,
        tweede_weging_gt,
        tweede_weging_gte,
        tweede_weging_in,
        tweede_weging_isnull,
        tweede_weging_lt,
        tweede_weging_lte,
        tweede_weging_not,
        verwijderd_dp,
        verwijderd_dp_isnull,
        volgnummer,
        volgnummer_gt,
        volgnummer_gte,
        volgnummer_in,
        volgnummer_isnull,
        volgnummer_lt,
        volgnummer_lte,
        volgnummer_not,
        weegsysteem_id,
        weegsysteem_id_gt,
        weegsysteem_id_gte,
        weegsysteem_id_in,
        weegsysteem_id_isnull,
        weegsysteem_id_lt,
        weegsysteem_id_lte,
        weegsysteem_id_not,
        weegsysteem_omschrijving,
        weegsysteem_omschrijving_in,
        weegsysteem_omschrijving_isempty,
        weegsysteem_omschrijving_isnull,
        weegsysteem_omschrijving_like,
        weegsysteem_omschrijving_not,
        weging_kenteken,
        weging_kenteken_in,
        weging_kenteken_isempty,
        weging_kenteken_isnull,
        weging_kenteken_like,
        weging_kenteken_not,
        wijzigingsdatum_dp,
        wijzigingsdatum_dp_gt,
        wijzigingsdatum_dp_gte,
        wijzigingsdatum_dp_in,
        wijzigingsdatum_dp_isnull,
        wijzigingsdatum_dp_lt,
        wijzigingsdatum_dp_lte,
        wijzigingsdatum_dp_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'bagHoofdadresVerblijfsobject.identificatie[in]': 'csv',
            'bagHoofdadresVerblijfsobject.identificatie[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagOpenbareruimte.identificatie[in]': 'csv',
            'bagOpenbareruimte.identificatie[not]': 'multi',
            'bedieningCode[in]': 'csv',
            'bedieningCode[not]': 'multi',
            'bedieningOmschrijving[in]': 'csv',
            'bedieningOmschrijving[not]': 'multi',
            'clusterId[in]': 'csv',
            'clusterId[not]': 'multi',
            'datumWeging[in]': 'csv',
            'datumWeging[not]': 'multi',
            'eersteWeging[in]': 'csv',
            'eersteWeging[not]': 'multi',
            'fractieCode[in]': 'csv',
            'fractieCode[not]': 'multi',
            'fractieOmschrijving[in]': 'csv',
            'fractieOmschrijving[not]': 'multi',
            'gbdBuurt.identificatie[in]': 'csv',
            'gbdBuurt.identificatie[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'locatienummer[in]': 'csv',
            'locatienummer[not]': 'multi',
            'nettoGewicht[in]': 'csv',
            'nettoGewicht[not]': 'multi',
            'tijdstipWeging[in]': 'csv',
            'tijdstipWeging[not]': 'multi',
            'tweedeWeging[in]': 'csv',
            'tweedeWeging[not]': 'multi',
            'volgnummer[in]': 'csv',
            'volgnummer[not]': 'multi',
            'weegsysteemId[in]': 'csv',
            'weegsysteemId[not]': 'multi',
            'weegsysteemOmschrijving[in]': 'csv',
            'weegsysteemOmschrijving[not]': 'multi',
            'wegingKenteken[in]': 'csv',
            'wegingKenteken[not]': 'multi',
            'wijzigingsdatumDp[in]': 'csv',
            'wijzigingsdatumDp[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if bag_hoofdadres_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie', bag_hoofdadres_verblijfsobject_identificatie))
            
        if bag_hoofdadres_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[in]', bag_hoofdadres_verblijfsobject_identificatie_in))
            
        if bag_hoofdadres_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[isempty]', bag_hoofdadres_verblijfsobject_identificatie_isempty))
            
        if bag_hoofdadres_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[isnull]', bag_hoofdadres_verblijfsobject_identificatie_isnull))
            
        if bag_hoofdadres_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[like]', bag_hoofdadres_verblijfsobject_identificatie_like))
            
        if bag_hoofdadres_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagHoofdadresVerblijfsobject.identificatie[not]', bag_hoofdadres_verblijfsobject_identificatie_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_openbareruimte_identificatie is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie', bag_openbareruimte_identificatie))
            
        if bag_openbareruimte_identificatie_in is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[in]', bag_openbareruimte_identificatie_in))
            
        if bag_openbareruimte_identificatie_isempty is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isempty]', bag_openbareruimte_identificatie_isempty))
            
        if bag_openbareruimte_identificatie_isnull is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isnull]', bag_openbareruimte_identificatie_isnull))
            
        if bag_openbareruimte_identificatie_like is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[like]', bag_openbareruimte_identificatie_like))
            
        if bag_openbareruimte_identificatie_not is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[not]', bag_openbareruimte_identificatie_not))
            
        if bediening_code is not None:
            
            _query_params.append(('bedieningCode', bediening_code))
            
        if bediening_code_gt is not None:
            
            _query_params.append(('bedieningCode[gt]', bediening_code_gt))
            
        if bediening_code_gte is not None:
            
            _query_params.append(('bedieningCode[gte]', bediening_code_gte))
            
        if bediening_code_in is not None:
            
            _query_params.append(('bedieningCode[in]', bediening_code_in))
            
        if bediening_code_isnull is not None:
            
            _query_params.append(('bedieningCode[isnull]', bediening_code_isnull))
            
        if bediening_code_lt is not None:
            
            _query_params.append(('bedieningCode[lt]', bediening_code_lt))
            
        if bediening_code_lte is not None:
            
            _query_params.append(('bedieningCode[lte]', bediening_code_lte))
            
        if bediening_code_not is not None:
            
            _query_params.append(('bedieningCode[not]', bediening_code_not))
            
        if bediening_omschrijving is not None:
            
            _query_params.append(('bedieningOmschrijving', bediening_omschrijving))
            
        if bediening_omschrijving_in is not None:
            
            _query_params.append(('bedieningOmschrijving[in]', bediening_omschrijving_in))
            
        if bediening_omschrijving_isempty is not None:
            
            _query_params.append(('bedieningOmschrijving[isempty]', bediening_omschrijving_isempty))
            
        if bediening_omschrijving_isnull is not None:
            
            _query_params.append(('bedieningOmschrijving[isnull]', bediening_omschrijving_isnull))
            
        if bediening_omschrijving_like is not None:
            
            _query_params.append(('bedieningOmschrijving[like]', bediening_omschrijving_like))
            
        if bediening_omschrijving_not is not None:
            
            _query_params.append(('bedieningOmschrijving[not]', bediening_omschrijving_not))
            
        if cluster_id is not None:
            
            _query_params.append(('clusterId', cluster_id))
            
        if cluster_id_in is not None:
            
            _query_params.append(('clusterId[in]', cluster_id_in))
            
        if cluster_id_isempty is not None:
            
            _query_params.append(('clusterId[isempty]', cluster_id_isempty))
            
        if cluster_id_isnull is not None:
            
            _query_params.append(('clusterId[isnull]', cluster_id_isnull))
            
        if cluster_id_like is not None:
            
            _query_params.append(('clusterId[like]', cluster_id_like))
            
        if cluster_id_not is not None:
            
            _query_params.append(('clusterId[not]', cluster_id_not))
            
        if cluster_subcluster_indicatie is not None:
            
            _query_params.append(('clusterSubclusterIndicatie', cluster_subcluster_indicatie))
            
        if cluster_subcluster_indicatie_isnull is not None:
            
            _query_params.append(('clusterSubclusterIndicatie[isnull]', cluster_subcluster_indicatie_isnull))
            
        if datum_weging is not None:
            if isinstance(datum_weging, date):
                _query_params.append(
                    (
                        'datumWeging',
                        datum_weging.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging', datum_weging))
            
        if datum_weging_gt is not None:
            if isinstance(datum_weging_gt, date):
                _query_params.append(
                    (
                        'datumWeging[gt]',
                        datum_weging_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[gt]', datum_weging_gt))
            
        if datum_weging_gte is not None:
            if isinstance(datum_weging_gte, date):
                _query_params.append(
                    (
                        'datumWeging[gte]',
                        datum_weging_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[gte]', datum_weging_gte))
            
        if datum_weging_in is not None:
            
            _query_params.append(('datumWeging[in]', datum_weging_in))
            
        if datum_weging_isnull is not None:
            
            _query_params.append(('datumWeging[isnull]', datum_weging_isnull))
            
        if datum_weging_lt is not None:
            if isinstance(datum_weging_lt, date):
                _query_params.append(
                    (
                        'datumWeging[lt]',
                        datum_weging_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[lt]', datum_weging_lt))
            
        if datum_weging_lte is not None:
            if isinstance(datum_weging_lte, date):
                _query_params.append(
                    (
                        'datumWeging[lte]',
                        datum_weging_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWeging[lte]', datum_weging_lte))
            
        if datum_weging_not is not None:
            
            _query_params.append(('datumWeging[not]', datum_weging_not))
            
        if eerste_weging is not None:
            
            _query_params.append(('eersteWeging', eerste_weging))
            
        if eerste_weging_gt is not None:
            
            _query_params.append(('eersteWeging[gt]', eerste_weging_gt))
            
        if eerste_weging_gte is not None:
            
            _query_params.append(('eersteWeging[gte]', eerste_weging_gte))
            
        if eerste_weging_in is not None:
            
            _query_params.append(('eersteWeging[in]', eerste_weging_in))
            
        if eerste_weging_isnull is not None:
            
            _query_params.append(('eersteWeging[isnull]', eerste_weging_isnull))
            
        if eerste_weging_lt is not None:
            
            _query_params.append(('eersteWeging[lt]', eerste_weging_lt))
            
        if eerste_weging_lte is not None:
            
            _query_params.append(('eersteWeging[lte]', eerste_weging_lte))
            
        if eerste_weging_not is not None:
            
            _query_params.append(('eersteWeging[not]', eerste_weging_not))
            
        if fractie_code is not None:
            
            _query_params.append(('fractieCode', fractie_code))
            
        if fractie_code_gt is not None:
            
            _query_params.append(('fractieCode[gt]', fractie_code_gt))
            
        if fractie_code_gte is not None:
            
            _query_params.append(('fractieCode[gte]', fractie_code_gte))
            
        if fractie_code_in is not None:
            
            _query_params.append(('fractieCode[in]', fractie_code_in))
            
        if fractie_code_isnull is not None:
            
            _query_params.append(('fractieCode[isnull]', fractie_code_isnull))
            
        if fractie_code_lt is not None:
            
            _query_params.append(('fractieCode[lt]', fractie_code_lt))
            
        if fractie_code_lte is not None:
            
            _query_params.append(('fractieCode[lte]', fractie_code_lte))
            
        if fractie_code_not is not None:
            
            _query_params.append(('fractieCode[not]', fractie_code_not))
            
        if fractie_omschrijving is not None:
            
            _query_params.append(('fractieOmschrijving', fractie_omschrijving))
            
        if fractie_omschrijving_in is not None:
            
            _query_params.append(('fractieOmschrijving[in]', fractie_omschrijving_in))
            
        if fractie_omschrijving_isempty is not None:
            
            _query_params.append(('fractieOmschrijving[isempty]', fractie_omschrijving_isempty))
            
        if fractie_omschrijving_isnull is not None:
            
            _query_params.append(('fractieOmschrijving[isnull]', fractie_omschrijving_isnull))
            
        if fractie_omschrijving_like is not None:
            
            _query_params.append(('fractieOmschrijving[like]', fractie_omschrijving_like))
            
        if fractie_omschrijving_not is not None:
            
            _query_params.append(('fractieOmschrijving[not]', fractie_omschrijving_not))
            
        if gbd_buurt_identificatie is not None:
            
            _query_params.append(('gbdBuurt.identificatie', gbd_buurt_identificatie))
            
        if gbd_buurt_identificatie_in is not None:
            
            _query_params.append(('gbdBuurt.identificatie[in]', gbd_buurt_identificatie_in))
            
        if gbd_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isempty]', gbd_buurt_identificatie_isempty))
            
        if gbd_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isnull]', gbd_buurt_identificatie_isnull))
            
        if gbd_buurt_identificatie_like is not None:
            
            _query_params.append(('gbdBuurt.identificatie[like]', gbd_buurt_identificatie_like))
            
        if gbd_buurt_identificatie_not is not None:
            
            _query_params.append(('gbdBuurt.identificatie[not]', gbd_buurt_identificatie_not))
            
        if geometrie is not None:
            
            _query_params.append(('geometrie', geometrie))
            
        if geometrie_intersects is not None:
            
            _query_params.append(('geometrie[intersects]', geometrie_intersects))
            
        if geometrie_isnull is not None:
            
            _query_params.append(('geometrie[isnull]', geometrie_isnull))
            
        if geometrie_not is not None:
            
            _query_params.append(('geometrie[not]', geometrie_not))
            
        if id2 is not None:
            
            _query_params.append(('id', id2))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isempty is not None:
            
            _query_params.append(('id[isempty]', id_isempty))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_like is not None:
            
            _query_params.append(('id[like]', id_like))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if locatienummer is not None:
            
            _query_params.append(('locatienummer', locatienummer))
            
        if locatienummer_in is not None:
            
            _query_params.append(('locatienummer[in]', locatienummer_in))
            
        if locatienummer_isempty is not None:
            
            _query_params.append(('locatienummer[isempty]', locatienummer_isempty))
            
        if locatienummer_isnull is not None:
            
            _query_params.append(('locatienummer[isnull]', locatienummer_isnull))
            
        if locatienummer_like is not None:
            
            _query_params.append(('locatienummer[like]', locatienummer_like))
            
        if locatienummer_not is not None:
            
            _query_params.append(('locatienummer[not]', locatienummer_not))
            
        if netto_gewicht is not None:
            
            _query_params.append(('nettoGewicht', netto_gewicht))
            
        if netto_gewicht_gt is not None:
            
            _query_params.append(('nettoGewicht[gt]', netto_gewicht_gt))
            
        if netto_gewicht_gte is not None:
            
            _query_params.append(('nettoGewicht[gte]', netto_gewicht_gte))
            
        if netto_gewicht_in is not None:
            
            _query_params.append(('nettoGewicht[in]', netto_gewicht_in))
            
        if netto_gewicht_isnull is not None:
            
            _query_params.append(('nettoGewicht[isnull]', netto_gewicht_isnull))
            
        if netto_gewicht_lt is not None:
            
            _query_params.append(('nettoGewicht[lt]', netto_gewicht_lt))
            
        if netto_gewicht_lte is not None:
            
            _query_params.append(('nettoGewicht[lte]', netto_gewicht_lte))
            
        if netto_gewicht_not is not None:
            
            _query_params.append(('nettoGewicht[not]', netto_gewicht_not))
            
        if tijdstip_weging is not None:
            
            _query_params.append(('tijdstipWeging', tijdstip_weging))
            
        if tijdstip_weging_gt is not None:
            
            _query_params.append(('tijdstipWeging[gt]', tijdstip_weging_gt))
            
        if tijdstip_weging_gte is not None:
            
            _query_params.append(('tijdstipWeging[gte]', tijdstip_weging_gte))
            
        if tijdstip_weging_in is not None:
            
            _query_params.append(('tijdstipWeging[in]', tijdstip_weging_in))
            
        if tijdstip_weging_isnull is not None:
            
            _query_params.append(('tijdstipWeging[isnull]', tijdstip_weging_isnull))
            
        if tijdstip_weging_lt is not None:
            
            _query_params.append(('tijdstipWeging[lt]', tijdstip_weging_lt))
            
        if tijdstip_weging_lte is not None:
            
            _query_params.append(('tijdstipWeging[lte]', tijdstip_weging_lte))
            
        if tijdstip_weging_not is not None:
            
            _query_params.append(('tijdstipWeging[not]', tijdstip_weging_not))
            
        if tweede_weging is not None:
            
            _query_params.append(('tweedeWeging', tweede_weging))
            
        if tweede_weging_gt is not None:
            
            _query_params.append(('tweedeWeging[gt]', tweede_weging_gt))
            
        if tweede_weging_gte is not None:
            
            _query_params.append(('tweedeWeging[gte]', tweede_weging_gte))
            
        if tweede_weging_in is not None:
            
            _query_params.append(('tweedeWeging[in]', tweede_weging_in))
            
        if tweede_weging_isnull is not None:
            
            _query_params.append(('tweedeWeging[isnull]', tweede_weging_isnull))
            
        if tweede_weging_lt is not None:
            
            _query_params.append(('tweedeWeging[lt]', tweede_weging_lt))
            
        if tweede_weging_lte is not None:
            
            _query_params.append(('tweedeWeging[lte]', tweede_weging_lte))
            
        if tweede_weging_not is not None:
            
            _query_params.append(('tweedeWeging[not]', tweede_weging_not))
            
        if verwijderd_dp is not None:
            
            _query_params.append(('verwijderdDp', verwijderd_dp))
            
        if verwijderd_dp_isnull is not None:
            
            _query_params.append(('verwijderdDp[isnull]', verwijderd_dp_isnull))
            
        if volgnummer is not None:
            
            _query_params.append(('volgnummer', volgnummer))
            
        if volgnummer_gt is not None:
            
            _query_params.append(('volgnummer[gt]', volgnummer_gt))
            
        if volgnummer_gte is not None:
            
            _query_params.append(('volgnummer[gte]', volgnummer_gte))
            
        if volgnummer_in is not None:
            
            _query_params.append(('volgnummer[in]', volgnummer_in))
            
        if volgnummer_isnull is not None:
            
            _query_params.append(('volgnummer[isnull]', volgnummer_isnull))
            
        if volgnummer_lt is not None:
            
            _query_params.append(('volgnummer[lt]', volgnummer_lt))
            
        if volgnummer_lte is not None:
            
            _query_params.append(('volgnummer[lte]', volgnummer_lte))
            
        if volgnummer_not is not None:
            
            _query_params.append(('volgnummer[not]', volgnummer_not))
            
        if weegsysteem_id is not None:
            
            _query_params.append(('weegsysteemId', weegsysteem_id))
            
        if weegsysteem_id_gt is not None:
            
            _query_params.append(('weegsysteemId[gt]', weegsysteem_id_gt))
            
        if weegsysteem_id_gte is not None:
            
            _query_params.append(('weegsysteemId[gte]', weegsysteem_id_gte))
            
        if weegsysteem_id_in is not None:
            
            _query_params.append(('weegsysteemId[in]', weegsysteem_id_in))
            
        if weegsysteem_id_isnull is not None:
            
            _query_params.append(('weegsysteemId[isnull]', weegsysteem_id_isnull))
            
        if weegsysteem_id_lt is not None:
            
            _query_params.append(('weegsysteemId[lt]', weegsysteem_id_lt))
            
        if weegsysteem_id_lte is not None:
            
            _query_params.append(('weegsysteemId[lte]', weegsysteem_id_lte))
            
        if weegsysteem_id_not is not None:
            
            _query_params.append(('weegsysteemId[not]', weegsysteem_id_not))
            
        if weegsysteem_omschrijving is not None:
            
            _query_params.append(('weegsysteemOmschrijving', weegsysteem_omschrijving))
            
        if weegsysteem_omschrijving_in is not None:
            
            _query_params.append(('weegsysteemOmschrijving[in]', weegsysteem_omschrijving_in))
            
        if weegsysteem_omschrijving_isempty is not None:
            
            _query_params.append(('weegsysteemOmschrijving[isempty]', weegsysteem_omschrijving_isempty))
            
        if weegsysteem_omschrijving_isnull is not None:
            
            _query_params.append(('weegsysteemOmschrijving[isnull]', weegsysteem_omschrijving_isnull))
            
        if weegsysteem_omschrijving_like is not None:
            
            _query_params.append(('weegsysteemOmschrijving[like]', weegsysteem_omschrijving_like))
            
        if weegsysteem_omschrijving_not is not None:
            
            _query_params.append(('weegsysteemOmschrijving[not]', weegsysteem_omschrijving_not))
            
        if weging_kenteken is not None:
            
            _query_params.append(('wegingKenteken', weging_kenteken))
            
        if weging_kenteken_in is not None:
            
            _query_params.append(('wegingKenteken[in]', weging_kenteken_in))
            
        if weging_kenteken_isempty is not None:
            
            _query_params.append(('wegingKenteken[isempty]', weging_kenteken_isempty))
            
        if weging_kenteken_isnull is not None:
            
            _query_params.append(('wegingKenteken[isnull]', weging_kenteken_isnull))
            
        if weging_kenteken_like is not None:
            
            _query_params.append(('wegingKenteken[like]', weging_kenteken_like))
            
        if weging_kenteken_not is not None:
            
            _query_params.append(('wegingKenteken[not]', weging_kenteken_not))
            
        if wijzigingsdatum_dp is not None:
            if isinstance(wijzigingsdatum_dp, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp',
                        wijzigingsdatum_dp.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp', wijzigingsdatum_dp))
            
        if wijzigingsdatum_dp_gt is not None:
            if isinstance(wijzigingsdatum_dp_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[gt]',
                        wijzigingsdatum_dp_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[gt]', wijzigingsdatum_dp_gt))
            
        if wijzigingsdatum_dp_gte is not None:
            if isinstance(wijzigingsdatum_dp_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[gte]',
                        wijzigingsdatum_dp_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[gte]', wijzigingsdatum_dp_gte))
            
        if wijzigingsdatum_dp_in is not None:
            
            _query_params.append(('wijzigingsdatumDp[in]', wijzigingsdatum_dp_in))
            
        if wijzigingsdatum_dp_isnull is not None:
            
            _query_params.append(('wijzigingsdatumDp[isnull]', wijzigingsdatum_dp_isnull))
            
        if wijzigingsdatum_dp_lt is not None:
            if isinstance(wijzigingsdatum_dp_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[lt]',
                        wijzigingsdatum_dp_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[lt]', wijzigingsdatum_dp_lt))
            
        if wijzigingsdatum_dp_lte is not None:
            if isinstance(wijzigingsdatum_dp_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatumDp[lte]',
                        wijzigingsdatum_dp_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatumDp[lte]', wijzigingsdatum_dp_lte))
            
        if wijzigingsdatum_dp_not is not None:
            
            _query_params.append(('wijzigingsdatumDp[not]', wijzigingsdatum_dp_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/weging/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


