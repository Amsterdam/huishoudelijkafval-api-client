# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from huishoudelijkafval_api_client.models.huishoudelijkafvalrolcontainer_actie import HuishoudelijkafvalrolcontainerActie
from huishoudelijkafval_api_client.models.paginated_huishoudelijkafvalrolcontainer_actie_list import PaginatedHuishoudelijkafvalrolcontainerActieList

from huishoudelijkafval_api_client.api_client import ApiClient, RequestSerialized
from huishoudelijkafval_api_client.api_response import ApiResponse
from huishoudelijkafval_api_client.rest import RESTResponseType


class RolcontainerActieApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_list_slash(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedHuishoudelijkafvalrolcontainerActieList:
        """huishoudelijkafval_rolcontainer_actie_list_slash

        Deze tabel bevat informatie over onderhoud handelingen.

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id: Unieke aanduiding van een onderhoudsactie
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            page=page,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerActieList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_list_slash_with_http_info(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedHuishoudelijkafvalrolcontainerActieList]:
        """huishoudelijkafval_rolcontainer_actie_list_slash

        Deze tabel bevat informatie over onderhoud handelingen.

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id: Unieke aanduiding van een onderhoudsactie
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            page=page,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerActieList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_list_slash_without_preload_content(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_rolcontainer_actie_list_slash

        Deze tabel bevat informatie over onderhoud handelingen.

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id: Unieke aanduiding van een onderhoudsactie
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            page=page,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerActieList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_rolcontainer_actie_list_slash_serialize(
        self,
        accept_crs,
        content_crs,
        x_api_key,
        count,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        page_size,
        sort,
        aanmaakdatum,
        aanmaakdatum_gt,
        aanmaakdatum_gte,
        aanmaakdatum_in,
        aanmaakdatum_isnull,
        aanmaakdatum_lt,
        aanmaakdatum_lte,
        aanmaakdatum_not,
        actie_type_code,
        actie_type_code_in,
        actie_type_code_isempty,
        actie_type_code_isnull,
        actie_type_code_like,
        actie_type_code_not,
        actie_type_naam,
        actie_type_naam_in,
        actie_type_naam_isempty,
        actie_type_naam_isnull,
        actie_type_naam_like,
        actie_type_naam_not,
        afkomst_verzoek,
        afkomst_verzoek_in,
        afkomst_verzoek_isempty,
        afkomst_verzoek_isnull,
        afkomst_verzoek_like,
        afkomst_verzoek_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_verblijfsobject_identificatie,
        bag_verblijfsobject_identificatie_in,
        bag_verblijfsobject_identificatie_isempty,
        bag_verblijfsobject_identificatie_isnull,
        bag_verblijfsobject_identificatie_like,
        bag_verblijfsobject_identificatie_not,
        bezoek,
        bezoek_gt,
        bezoek_gte,
        bezoek_in,
        bezoek_isnull,
        bezoek_lt,
        bezoek_lte,
        bezoek_not,
        chip_nummer,
        chip_nummer_in,
        chip_nummer_isempty,
        chip_nummer_isnull,
        chip_nummer_like,
        chip_nummer_not,
        id,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        interventie_datum,
        interventie_datum_in,
        interventie_datum_isempty,
        interventie_datum_isnull,
        interventie_datum_like,
        interventie_datum_not,
        page,
        rolcontainer_id,
        rolcontainer_id_gt,
        rolcontainer_id_gte,
        rolcontainer_id_in,
        rolcontainer_id_isnull,
        rolcontainer_id_lt,
        rolcontainer_id_lte,
        rolcontainer_id_not,
        ronde,
        ronde_in,
        ronde_isempty,
        ronde_isnull,
        ronde_like,
        ronde_not,
        soort_container,
        soort_container_in,
        soort_container_isempty,
        soort_container_isnull,
        soort_container_like,
        soort_container_not,
        soort_verzoek,
        soort_verzoek_in,
        soort_verzoek_isempty,
        soort_verzoek_isnull,
        soort_verzoek_like,
        soort_verzoek_not,
        status,
        status_in,
        status_isempty,
        status_isnull,
        status_like,
        status_not,
        team,
        team_in,
        team_isempty,
        team_isnull,
        team_like,
        team_not,
        wijzigingsdatum,
        wijzigingsdatum_gt,
        wijzigingsdatum_gte,
        wijzigingsdatum_in,
        wijzigingsdatum_isnull,
        wijzigingsdatum_lt,
        wijzigingsdatum_lte,
        wijzigingsdatum_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aanmaakdatum[in]': 'csv',
            'aanmaakdatum[not]': 'multi',
            'actieTypeCode[in]': 'csv',
            'actieTypeCode[not]': 'multi',
            'actieTypeNaam[in]': 'csv',
            'actieTypeNaam[not]': 'multi',
            'afkomstVerzoek[in]': 'csv',
            'afkomstVerzoek[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagVerblijfsobject.identificatie[in]': 'csv',
            'bagVerblijfsobject.identificatie[not]': 'multi',
            'bezoek[in]': 'csv',
            'bezoek[not]': 'multi',
            'chipNummer[in]': 'csv',
            'chipNummer[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'interventieDatum[in]': 'csv',
            'interventieDatum[not]': 'multi',
            'rolcontainer.id[in]': 'csv',
            'rolcontainer.id[not]': 'multi',
            'ronde[in]': 'csv',
            'ronde[not]': 'multi',
            'soortContainer[in]': 'csv',
            'soortContainer[not]': 'multi',
            'soortVerzoek[in]': 'csv',
            'soortVerzoek[not]': 'multi',
            'status[in]': 'csv',
            'status[not]': 'multi',
            'team[in]': 'csv',
            'team[not]': 'multi',
            'wijzigingsdatum[in]': 'csv',
            'wijzigingsdatum[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if count is not None:
            
            _query_params.append(('_count', count))
            
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if page_size is not None:
            
            _query_params.append(('_pageSize', page_size))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aanmaakdatum is not None:
            if isinstance(aanmaakdatum, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum',
                        aanmaakdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum', aanmaakdatum))
            
        if aanmaakdatum_gt is not None:
            if isinstance(aanmaakdatum_gt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gt]',
                        aanmaakdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gt]', aanmaakdatum_gt))
            
        if aanmaakdatum_gte is not None:
            if isinstance(aanmaakdatum_gte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gte]',
                        aanmaakdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gte]', aanmaakdatum_gte))
            
        if aanmaakdatum_in is not None:
            
            _query_params.append(('aanmaakdatum[in]', aanmaakdatum_in))
            
        if aanmaakdatum_isnull is not None:
            
            _query_params.append(('aanmaakdatum[isnull]', aanmaakdatum_isnull))
            
        if aanmaakdatum_lt is not None:
            if isinstance(aanmaakdatum_lt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lt]',
                        aanmaakdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lt]', aanmaakdatum_lt))
            
        if aanmaakdatum_lte is not None:
            if isinstance(aanmaakdatum_lte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lte]',
                        aanmaakdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lte]', aanmaakdatum_lte))
            
        if aanmaakdatum_not is not None:
            
            _query_params.append(('aanmaakdatum[not]', aanmaakdatum_not))
            
        if actie_type_code is not None:
            
            _query_params.append(('actieTypeCode', actie_type_code))
            
        if actie_type_code_in is not None:
            
            _query_params.append(('actieTypeCode[in]', actie_type_code_in))
            
        if actie_type_code_isempty is not None:
            
            _query_params.append(('actieTypeCode[isempty]', actie_type_code_isempty))
            
        if actie_type_code_isnull is not None:
            
            _query_params.append(('actieTypeCode[isnull]', actie_type_code_isnull))
            
        if actie_type_code_like is not None:
            
            _query_params.append(('actieTypeCode[like]', actie_type_code_like))
            
        if actie_type_code_not is not None:
            
            _query_params.append(('actieTypeCode[not]', actie_type_code_not))
            
        if actie_type_naam is not None:
            
            _query_params.append(('actieTypeNaam', actie_type_naam))
            
        if actie_type_naam_in is not None:
            
            _query_params.append(('actieTypeNaam[in]', actie_type_naam_in))
            
        if actie_type_naam_isempty is not None:
            
            _query_params.append(('actieTypeNaam[isempty]', actie_type_naam_isempty))
            
        if actie_type_naam_isnull is not None:
            
            _query_params.append(('actieTypeNaam[isnull]', actie_type_naam_isnull))
            
        if actie_type_naam_like is not None:
            
            _query_params.append(('actieTypeNaam[like]', actie_type_naam_like))
            
        if actie_type_naam_not is not None:
            
            _query_params.append(('actieTypeNaam[not]', actie_type_naam_not))
            
        if afkomst_verzoek is not None:
            
            _query_params.append(('afkomstVerzoek', afkomst_verzoek))
            
        if afkomst_verzoek_in is not None:
            
            _query_params.append(('afkomstVerzoek[in]', afkomst_verzoek_in))
            
        if afkomst_verzoek_isempty is not None:
            
            _query_params.append(('afkomstVerzoek[isempty]', afkomst_verzoek_isempty))
            
        if afkomst_verzoek_isnull is not None:
            
            _query_params.append(('afkomstVerzoek[isnull]', afkomst_verzoek_isnull))
            
        if afkomst_verzoek_like is not None:
            
            _query_params.append(('afkomstVerzoek[like]', afkomst_verzoek_like))
            
        if afkomst_verzoek_not is not None:
            
            _query_params.append(('afkomstVerzoek[not]', afkomst_verzoek_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie', bag_verblijfsobject_identificatie))
            
        if bag_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[in]', bag_verblijfsobject_identificatie_in))
            
        if bag_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isempty]', bag_verblijfsobject_identificatie_isempty))
            
        if bag_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isnull]', bag_verblijfsobject_identificatie_isnull))
            
        if bag_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[like]', bag_verblijfsobject_identificatie_like))
            
        if bag_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[not]', bag_verblijfsobject_identificatie_not))
            
        if bezoek is not None:
            
            _query_params.append(('bezoek', bezoek))
            
        if bezoek_gt is not None:
            
            _query_params.append(('bezoek[gt]', bezoek_gt))
            
        if bezoek_gte is not None:
            
            _query_params.append(('bezoek[gte]', bezoek_gte))
            
        if bezoek_in is not None:
            
            _query_params.append(('bezoek[in]', bezoek_in))
            
        if bezoek_isnull is not None:
            
            _query_params.append(('bezoek[isnull]', bezoek_isnull))
            
        if bezoek_lt is not None:
            
            _query_params.append(('bezoek[lt]', bezoek_lt))
            
        if bezoek_lte is not None:
            
            _query_params.append(('bezoek[lte]', bezoek_lte))
            
        if bezoek_not is not None:
            
            _query_params.append(('bezoek[not]', bezoek_not))
            
        if chip_nummer is not None:
            
            _query_params.append(('chipNummer', chip_nummer))
            
        if chip_nummer_in is not None:
            
            _query_params.append(('chipNummer[in]', chip_nummer_in))
            
        if chip_nummer_isempty is not None:
            
            _query_params.append(('chipNummer[isempty]', chip_nummer_isempty))
            
        if chip_nummer_isnull is not None:
            
            _query_params.append(('chipNummer[isnull]', chip_nummer_isnull))
            
        if chip_nummer_like is not None:
            
            _query_params.append(('chipNummer[like]', chip_nummer_like))
            
        if chip_nummer_not is not None:
            
            _query_params.append(('chipNummer[not]', chip_nummer_not))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if interventie_datum is not None:
            
            _query_params.append(('interventieDatum', interventie_datum))
            
        if interventie_datum_in is not None:
            
            _query_params.append(('interventieDatum[in]', interventie_datum_in))
            
        if interventie_datum_isempty is not None:
            
            _query_params.append(('interventieDatum[isempty]', interventie_datum_isempty))
            
        if interventie_datum_isnull is not None:
            
            _query_params.append(('interventieDatum[isnull]', interventie_datum_isnull))
            
        if interventie_datum_like is not None:
            
            _query_params.append(('interventieDatum[like]', interventie_datum_like))
            
        if interventie_datum_not is not None:
            
            _query_params.append(('interventieDatum[not]', interventie_datum_not))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if rolcontainer_id is not None:
            
            _query_params.append(('rolcontainer.id', rolcontainer_id))
            
        if rolcontainer_id_gt is not None:
            
            _query_params.append(('rolcontainer.id[gt]', rolcontainer_id_gt))
            
        if rolcontainer_id_gte is not None:
            
            _query_params.append(('rolcontainer.id[gte]', rolcontainer_id_gte))
            
        if rolcontainer_id_in is not None:
            
            _query_params.append(('rolcontainer.id[in]', rolcontainer_id_in))
            
        if rolcontainer_id_isnull is not None:
            
            _query_params.append(('rolcontainer.id[isnull]', rolcontainer_id_isnull))
            
        if rolcontainer_id_lt is not None:
            
            _query_params.append(('rolcontainer.id[lt]', rolcontainer_id_lt))
            
        if rolcontainer_id_lte is not None:
            
            _query_params.append(('rolcontainer.id[lte]', rolcontainer_id_lte))
            
        if rolcontainer_id_not is not None:
            
            _query_params.append(('rolcontainer.id[not]', rolcontainer_id_not))
            
        if ronde is not None:
            
            _query_params.append(('ronde', ronde))
            
        if ronde_in is not None:
            
            _query_params.append(('ronde[in]', ronde_in))
            
        if ronde_isempty is not None:
            
            _query_params.append(('ronde[isempty]', ronde_isempty))
            
        if ronde_isnull is not None:
            
            _query_params.append(('ronde[isnull]', ronde_isnull))
            
        if ronde_like is not None:
            
            _query_params.append(('ronde[like]', ronde_like))
            
        if ronde_not is not None:
            
            _query_params.append(('ronde[not]', ronde_not))
            
        if soort_container is not None:
            
            _query_params.append(('soortContainer', soort_container))
            
        if soort_container_in is not None:
            
            _query_params.append(('soortContainer[in]', soort_container_in))
            
        if soort_container_isempty is not None:
            
            _query_params.append(('soortContainer[isempty]', soort_container_isempty))
            
        if soort_container_isnull is not None:
            
            _query_params.append(('soortContainer[isnull]', soort_container_isnull))
            
        if soort_container_like is not None:
            
            _query_params.append(('soortContainer[like]', soort_container_like))
            
        if soort_container_not is not None:
            
            _query_params.append(('soortContainer[not]', soort_container_not))
            
        if soort_verzoek is not None:
            
            _query_params.append(('soortVerzoek', soort_verzoek))
            
        if soort_verzoek_in is not None:
            
            _query_params.append(('soortVerzoek[in]', soort_verzoek_in))
            
        if soort_verzoek_isempty is not None:
            
            _query_params.append(('soortVerzoek[isempty]', soort_verzoek_isempty))
            
        if soort_verzoek_isnull is not None:
            
            _query_params.append(('soortVerzoek[isnull]', soort_verzoek_isnull))
            
        if soort_verzoek_like is not None:
            
            _query_params.append(('soortVerzoek[like]', soort_verzoek_like))
            
        if soort_verzoek_not is not None:
            
            _query_params.append(('soortVerzoek[not]', soort_verzoek_not))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if status_in is not None:
            
            _query_params.append(('status[in]', status_in))
            
        if status_isempty is not None:
            
            _query_params.append(('status[isempty]', status_isempty))
            
        if status_isnull is not None:
            
            _query_params.append(('status[isnull]', status_isnull))
            
        if status_like is not None:
            
            _query_params.append(('status[like]', status_like))
            
        if status_not is not None:
            
            _query_params.append(('status[not]', status_not))
            
        if team is not None:
            
            _query_params.append(('team', team))
            
        if team_in is not None:
            
            _query_params.append(('team[in]', team_in))
            
        if team_isempty is not None:
            
            _query_params.append(('team[isempty]', team_isempty))
            
        if team_isnull is not None:
            
            _query_params.append(('team[isnull]', team_isnull))
            
        if team_like is not None:
            
            _query_params.append(('team[like]', team_like))
            
        if team_not is not None:
            
            _query_params.append(('team[not]', team_not))
            
        if wijzigingsdatum is not None:
            if isinstance(wijzigingsdatum, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum',
                        wijzigingsdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum', wijzigingsdatum))
            
        if wijzigingsdatum_gt is not None:
            if isinstance(wijzigingsdatum_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gt]',
                        wijzigingsdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gt]', wijzigingsdatum_gt))
            
        if wijzigingsdatum_gte is not None:
            if isinstance(wijzigingsdatum_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gte]',
                        wijzigingsdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gte]', wijzigingsdatum_gte))
            
        if wijzigingsdatum_in is not None:
            
            _query_params.append(('wijzigingsdatum[in]', wijzigingsdatum_in))
            
        if wijzigingsdatum_isnull is not None:
            
            _query_params.append(('wijzigingsdatum[isnull]', wijzigingsdatum_isnull))
            
        if wijzigingsdatum_lt is not None:
            if isinstance(wijzigingsdatum_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lt]',
                        wijzigingsdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lt]', wijzigingsdatum_lt))
            
        if wijzigingsdatum_lte is not None:
            if isinstance(wijzigingsdatum_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lte]',
                        wijzigingsdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lte]', wijzigingsdatum_lte))
            
        if wijzigingsdatum_not is not None:
            
            _query_params.append(('wijzigingsdatum[not]', wijzigingsdatum_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/rolcontainer_actie',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_retrieve_slash(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HuishoudelijkafvalrolcontainerActie:
        """huishoudelijkafval_rolcontainer_actie_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id2: Unieke aanduiding van een onderhoudsactie
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalrolcontainerActie",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_retrieve_slash_with_http_info(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HuishoudelijkafvalrolcontainerActie]:
        """huishoudelijkafval_rolcontainer_actie_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id2: Unieke aanduiding van een onderhoudsactie
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalrolcontainerActie",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_rolcontainer_actie_retrieve_slash_without_preload_content(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        actie_type_code: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de code van de actie type")] = None,
        actie_type_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        actie_type_naam: Annotated[Optional[StrictStr], Field(description="Dit attribuut beschrijft de aard van de actie type")] = None,
        actie_type_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        actie_type_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        actie_type_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        actie_type_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        actie_type_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        afkomst_verzoek: Annotated[Optional[StrictStr], Field(description="Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.")] = None,
        afkomst_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        afkomst_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        afkomst_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        afkomst_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        afkomst_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bezoek: Annotated[Optional[StrictInt], Field(description="Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.")] = None,
        bezoek_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        bezoek_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        bezoek_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bezoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bezoek_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        bezoek_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        bezoek_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een onderhoudsactie")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        interventie_datum: Annotated[Optional[StrictStr], Field(description="De geplande datum voor een bepaalde actie.")] = None,
        interventie_datum_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        interventie_datum_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        interventie_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        interventie_datum_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        interventie_datum_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        rolcontainer_id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        rolcontainer_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rolcontainer_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rolcontainer_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rolcontainer_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rolcontainer_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rolcontainer_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rolcontainer_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        ronde: Annotated[Optional[StrictStr], Field(description="Exact; text")] = None,
        ronde_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ronde_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ronde_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ronde_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ronde_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_verzoek: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..")] = None,
        soort_verzoek_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_verzoek_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_verzoek_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_verzoek_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_verzoek_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Het team dat verantwoordelijk is voor het afhandelen van het verzoek.")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_rolcontainer_actie_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param actie_type_code: Dit attribuut beschrijft de code van de actie type
        :type actie_type_code: str
        :param actie_type_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_code_in: List[str]
        :param actie_type_code_isempty: Whether the field is empty or not.
        :type actie_type_code_isempty: bool
        :param actie_type_code_isnull: Whether the field has a NULL value or not.
        :type actie_type_code_isnull: bool
        :param actie_type_code_like: Matches text using wildcards (? and *).
        :type actie_type_code_like: str
        :param actie_type_code_not: Exclude matches; text
        :type actie_type_code_not: List[str]
        :param actie_type_naam: Dit attribuut beschrijft de aard van de actie type
        :type actie_type_naam: str
        :param actie_type_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type actie_type_naam_in: List[str]
        :param actie_type_naam_isempty: Whether the field is empty or not.
        :type actie_type_naam_isempty: bool
        :param actie_type_naam_isnull: Whether the field has a NULL value or not.
        :type actie_type_naam_isnull: bool
        :param actie_type_naam_like: Matches text using wildcards (? and *).
        :type actie_type_naam_like: str
        :param actie_type_naam_not: Exclude matches; text
        :type actie_type_naam_not: List[str]
        :param afkomst_verzoek: Deze attribuut geeft aan of de actie door intern of extern verzoek is tot stand gekomen.
        :type afkomst_verzoek: str
        :param afkomst_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type afkomst_verzoek_in: List[str]
        :param afkomst_verzoek_isempty: Whether the field is empty or not.
        :type afkomst_verzoek_isempty: bool
        :param afkomst_verzoek_isnull: Whether the field has a NULL value or not.
        :type afkomst_verzoek_isnull: bool
        :param afkomst_verzoek_like: Matches text using wildcards (? and *).
        :type afkomst_verzoek_like: str
        :param afkomst_verzoek_not: Exclude matches; text
        :type afkomst_verzoek_not: List[str]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bezoek: Het aantal bezoeken dat is afgelegd om het verzoek te realiseren.
        :type bezoek: int
        :param bezoek_gt: Greater than; number
        :type bezoek_gt: int
        :param bezoek_gte: Greater than or equal to; number
        :type bezoek_gte: int
        :param bezoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bezoek_in: List[int]
        :param bezoek_isnull: Whether the field has a NULL value or not.
        :type bezoek_isnull: bool
        :param bezoek_lt: Less than; number
        :type bezoek_lt: int
        :param bezoek_lte: Less than or equal to; number
        :type bezoek_lte: int
        :param bezoek_not: Exclude matches; number
        :type bezoek_not: List[int]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param id2: Unieke aanduiding van een onderhoudsactie
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param interventie_datum: De geplande datum voor een bepaalde actie.
        :type interventie_datum: str
        :param interventie_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type interventie_datum_in: List[str]
        :param interventie_datum_isempty: Whether the field is empty or not.
        :type interventie_datum_isempty: bool
        :param interventie_datum_isnull: Whether the field has a NULL value or not.
        :type interventie_datum_isnull: bool
        :param interventie_datum_like: Matches text using wildcards (? and *).
        :type interventie_datum_like: str
        :param interventie_datum_not: Exclude matches; text
        :type interventie_datum_not: List[str]
        :param rolcontainer_id: Unieke aanduiding van een rolcontainer
        :type rolcontainer_id: int
        :param rolcontainer_id_gt: Greater than; number
        :type rolcontainer_id_gt: int
        :param rolcontainer_id_gte: Greater than or equal to; number
        :type rolcontainer_id_gte: int
        :param rolcontainer_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rolcontainer_id_in: List[int]
        :param rolcontainer_id_isnull: Whether the field has a NULL value or not.
        :type rolcontainer_id_isnull: bool
        :param rolcontainer_id_lt: Less than; number
        :type rolcontainer_id_lt: int
        :param rolcontainer_id_lte: Less than or equal to; number
        :type rolcontainer_id_lte: int
        :param rolcontainer_id_not: Exclude matches; number
        :type rolcontainer_id_not: List[int]
        :param ronde: Exact; text
        :type ronde: str
        :param ronde_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ronde_in: List[str]
        :param ronde_isempty: Whether the field is empty or not.
        :type ronde_isempty: bool
        :param ronde_isnull: Whether the field has a NULL value or not.
        :type ronde_isnull: bool
        :param ronde_like: Matches text using wildcards (? and *).
        :type ronde_like: str
        :param ronde_not: Exclude matches; text
        :type ronde_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param soort_verzoek: Dit attribuut geeft aan welk communicatiemiddel is gebruikt om het verzoek te registreren..
        :type soort_verzoek: str
        :param soort_verzoek_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_verzoek_in: List[str]
        :param soort_verzoek_isempty: Whether the field is empty or not.
        :type soort_verzoek_isempty: bool
        :param soort_verzoek_isnull: Whether the field has a NULL value or not.
        :type soort_verzoek_isnull: bool
        :param soort_verzoek_like: Matches text using wildcards (? and *).
        :type soort_verzoek_like: str
        :param soort_verzoek_not: Exclude matches; text
        :type soort_verzoek_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param team: Het team dat verantwoordelijk is voor het afhandelen van het verzoek.
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_actie_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            actie_type_code=actie_type_code,
            actie_type_code_in=actie_type_code_in,
            actie_type_code_isempty=actie_type_code_isempty,
            actie_type_code_isnull=actie_type_code_isnull,
            actie_type_code_like=actie_type_code_like,
            actie_type_code_not=actie_type_code_not,
            actie_type_naam=actie_type_naam,
            actie_type_naam_in=actie_type_naam_in,
            actie_type_naam_isempty=actie_type_naam_isempty,
            actie_type_naam_isnull=actie_type_naam_isnull,
            actie_type_naam_like=actie_type_naam_like,
            actie_type_naam_not=actie_type_naam_not,
            afkomst_verzoek=afkomst_verzoek,
            afkomst_verzoek_in=afkomst_verzoek_in,
            afkomst_verzoek_isempty=afkomst_verzoek_isempty,
            afkomst_verzoek_isnull=afkomst_verzoek_isnull,
            afkomst_verzoek_like=afkomst_verzoek_like,
            afkomst_verzoek_not=afkomst_verzoek_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bezoek=bezoek,
            bezoek_gt=bezoek_gt,
            bezoek_gte=bezoek_gte,
            bezoek_in=bezoek_in,
            bezoek_isnull=bezoek_isnull,
            bezoek_lt=bezoek_lt,
            bezoek_lte=bezoek_lte,
            bezoek_not=bezoek_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            interventie_datum=interventie_datum,
            interventie_datum_in=interventie_datum_in,
            interventie_datum_isempty=interventie_datum_isempty,
            interventie_datum_isnull=interventie_datum_isnull,
            interventie_datum_like=interventie_datum_like,
            interventie_datum_not=interventie_datum_not,
            rolcontainer_id=rolcontainer_id,
            rolcontainer_id_gt=rolcontainer_id_gt,
            rolcontainer_id_gte=rolcontainer_id_gte,
            rolcontainer_id_in=rolcontainer_id_in,
            rolcontainer_id_isnull=rolcontainer_id_isnull,
            rolcontainer_id_lt=rolcontainer_id_lt,
            rolcontainer_id_lte=rolcontainer_id_lte,
            rolcontainer_id_not=rolcontainer_id_not,
            ronde=ronde,
            ronde_in=ronde_in,
            ronde_isempty=ronde_isempty,
            ronde_isnull=ronde_isnull,
            ronde_like=ronde_like,
            ronde_not=ronde_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            soort_verzoek=soort_verzoek,
            soort_verzoek_in=soort_verzoek_in,
            soort_verzoek_isempty=soort_verzoek_isempty,
            soort_verzoek_isnull=soort_verzoek_isnull,
            soort_verzoek_like=soort_verzoek_like,
            soort_verzoek_not=soort_verzoek_not,
            status=status,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalrolcontainerActie",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_rolcontainer_actie_retrieve_slash_serialize(
        self,
        id,
        accept_crs,
        content_crs,
        x_api_key,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        sort,
        aanmaakdatum,
        aanmaakdatum_gt,
        aanmaakdatum_gte,
        aanmaakdatum_in,
        aanmaakdatum_isnull,
        aanmaakdatum_lt,
        aanmaakdatum_lte,
        aanmaakdatum_not,
        actie_type_code,
        actie_type_code_in,
        actie_type_code_isempty,
        actie_type_code_isnull,
        actie_type_code_like,
        actie_type_code_not,
        actie_type_naam,
        actie_type_naam_in,
        actie_type_naam_isempty,
        actie_type_naam_isnull,
        actie_type_naam_like,
        actie_type_naam_not,
        afkomst_verzoek,
        afkomst_verzoek_in,
        afkomst_verzoek_isempty,
        afkomst_verzoek_isnull,
        afkomst_verzoek_like,
        afkomst_verzoek_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_verblijfsobject_identificatie,
        bag_verblijfsobject_identificatie_in,
        bag_verblijfsobject_identificatie_isempty,
        bag_verblijfsobject_identificatie_isnull,
        bag_verblijfsobject_identificatie_like,
        bag_verblijfsobject_identificatie_not,
        bezoek,
        bezoek_gt,
        bezoek_gte,
        bezoek_in,
        bezoek_isnull,
        bezoek_lt,
        bezoek_lte,
        bezoek_not,
        chip_nummer,
        chip_nummer_in,
        chip_nummer_isempty,
        chip_nummer_isnull,
        chip_nummer_like,
        chip_nummer_not,
        id2,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        interventie_datum,
        interventie_datum_in,
        interventie_datum_isempty,
        interventie_datum_isnull,
        interventie_datum_like,
        interventie_datum_not,
        rolcontainer_id,
        rolcontainer_id_gt,
        rolcontainer_id_gte,
        rolcontainer_id_in,
        rolcontainer_id_isnull,
        rolcontainer_id_lt,
        rolcontainer_id_lte,
        rolcontainer_id_not,
        ronde,
        ronde_in,
        ronde_isempty,
        ronde_isnull,
        ronde_like,
        ronde_not,
        soort_container,
        soort_container_in,
        soort_container_isempty,
        soort_container_isnull,
        soort_container_like,
        soort_container_not,
        soort_verzoek,
        soort_verzoek_in,
        soort_verzoek_isempty,
        soort_verzoek_isnull,
        soort_verzoek_like,
        soort_verzoek_not,
        status,
        status_in,
        status_isempty,
        status_isnull,
        status_like,
        status_not,
        team,
        team_in,
        team_isempty,
        team_isnull,
        team_like,
        team_not,
        wijzigingsdatum,
        wijzigingsdatum_gt,
        wijzigingsdatum_gte,
        wijzigingsdatum_in,
        wijzigingsdatum_isnull,
        wijzigingsdatum_lt,
        wijzigingsdatum_lte,
        wijzigingsdatum_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aanmaakdatum[in]': 'csv',
            'aanmaakdatum[not]': 'multi',
            'actieTypeCode[in]': 'csv',
            'actieTypeCode[not]': 'multi',
            'actieTypeNaam[in]': 'csv',
            'actieTypeNaam[not]': 'multi',
            'afkomstVerzoek[in]': 'csv',
            'afkomstVerzoek[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagVerblijfsobject.identificatie[in]': 'csv',
            'bagVerblijfsobject.identificatie[not]': 'multi',
            'bezoek[in]': 'csv',
            'bezoek[not]': 'multi',
            'chipNummer[in]': 'csv',
            'chipNummer[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'interventieDatum[in]': 'csv',
            'interventieDatum[not]': 'multi',
            'rolcontainer.id[in]': 'csv',
            'rolcontainer.id[not]': 'multi',
            'ronde[in]': 'csv',
            'ronde[not]': 'multi',
            'soortContainer[in]': 'csv',
            'soortContainer[not]': 'multi',
            'soortVerzoek[in]': 'csv',
            'soortVerzoek[not]': 'multi',
            'status[in]': 'csv',
            'status[not]': 'multi',
            'team[in]': 'csv',
            'team[not]': 'multi',
            'wijzigingsdatum[in]': 'csv',
            'wijzigingsdatum[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aanmaakdatum is not None:
            if isinstance(aanmaakdatum, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum',
                        aanmaakdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum', aanmaakdatum))
            
        if aanmaakdatum_gt is not None:
            if isinstance(aanmaakdatum_gt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gt]',
                        aanmaakdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gt]', aanmaakdatum_gt))
            
        if aanmaakdatum_gte is not None:
            if isinstance(aanmaakdatum_gte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gte]',
                        aanmaakdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gte]', aanmaakdatum_gte))
            
        if aanmaakdatum_in is not None:
            
            _query_params.append(('aanmaakdatum[in]', aanmaakdatum_in))
            
        if aanmaakdatum_isnull is not None:
            
            _query_params.append(('aanmaakdatum[isnull]', aanmaakdatum_isnull))
            
        if aanmaakdatum_lt is not None:
            if isinstance(aanmaakdatum_lt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lt]',
                        aanmaakdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lt]', aanmaakdatum_lt))
            
        if aanmaakdatum_lte is not None:
            if isinstance(aanmaakdatum_lte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lte]',
                        aanmaakdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lte]', aanmaakdatum_lte))
            
        if aanmaakdatum_not is not None:
            
            _query_params.append(('aanmaakdatum[not]', aanmaakdatum_not))
            
        if actie_type_code is not None:
            
            _query_params.append(('actieTypeCode', actie_type_code))
            
        if actie_type_code_in is not None:
            
            _query_params.append(('actieTypeCode[in]', actie_type_code_in))
            
        if actie_type_code_isempty is not None:
            
            _query_params.append(('actieTypeCode[isempty]', actie_type_code_isempty))
            
        if actie_type_code_isnull is not None:
            
            _query_params.append(('actieTypeCode[isnull]', actie_type_code_isnull))
            
        if actie_type_code_like is not None:
            
            _query_params.append(('actieTypeCode[like]', actie_type_code_like))
            
        if actie_type_code_not is not None:
            
            _query_params.append(('actieTypeCode[not]', actie_type_code_not))
            
        if actie_type_naam is not None:
            
            _query_params.append(('actieTypeNaam', actie_type_naam))
            
        if actie_type_naam_in is not None:
            
            _query_params.append(('actieTypeNaam[in]', actie_type_naam_in))
            
        if actie_type_naam_isempty is not None:
            
            _query_params.append(('actieTypeNaam[isempty]', actie_type_naam_isempty))
            
        if actie_type_naam_isnull is not None:
            
            _query_params.append(('actieTypeNaam[isnull]', actie_type_naam_isnull))
            
        if actie_type_naam_like is not None:
            
            _query_params.append(('actieTypeNaam[like]', actie_type_naam_like))
            
        if actie_type_naam_not is not None:
            
            _query_params.append(('actieTypeNaam[not]', actie_type_naam_not))
            
        if afkomst_verzoek is not None:
            
            _query_params.append(('afkomstVerzoek', afkomst_verzoek))
            
        if afkomst_verzoek_in is not None:
            
            _query_params.append(('afkomstVerzoek[in]', afkomst_verzoek_in))
            
        if afkomst_verzoek_isempty is not None:
            
            _query_params.append(('afkomstVerzoek[isempty]', afkomst_verzoek_isempty))
            
        if afkomst_verzoek_isnull is not None:
            
            _query_params.append(('afkomstVerzoek[isnull]', afkomst_verzoek_isnull))
            
        if afkomst_verzoek_like is not None:
            
            _query_params.append(('afkomstVerzoek[like]', afkomst_verzoek_like))
            
        if afkomst_verzoek_not is not None:
            
            _query_params.append(('afkomstVerzoek[not]', afkomst_verzoek_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie', bag_verblijfsobject_identificatie))
            
        if bag_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[in]', bag_verblijfsobject_identificatie_in))
            
        if bag_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isempty]', bag_verblijfsobject_identificatie_isempty))
            
        if bag_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isnull]', bag_verblijfsobject_identificatie_isnull))
            
        if bag_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[like]', bag_verblijfsobject_identificatie_like))
            
        if bag_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[not]', bag_verblijfsobject_identificatie_not))
            
        if bezoek is not None:
            
            _query_params.append(('bezoek', bezoek))
            
        if bezoek_gt is not None:
            
            _query_params.append(('bezoek[gt]', bezoek_gt))
            
        if bezoek_gte is not None:
            
            _query_params.append(('bezoek[gte]', bezoek_gte))
            
        if bezoek_in is not None:
            
            _query_params.append(('bezoek[in]', bezoek_in))
            
        if bezoek_isnull is not None:
            
            _query_params.append(('bezoek[isnull]', bezoek_isnull))
            
        if bezoek_lt is not None:
            
            _query_params.append(('bezoek[lt]', bezoek_lt))
            
        if bezoek_lte is not None:
            
            _query_params.append(('bezoek[lte]', bezoek_lte))
            
        if bezoek_not is not None:
            
            _query_params.append(('bezoek[not]', bezoek_not))
            
        if chip_nummer is not None:
            
            _query_params.append(('chipNummer', chip_nummer))
            
        if chip_nummer_in is not None:
            
            _query_params.append(('chipNummer[in]', chip_nummer_in))
            
        if chip_nummer_isempty is not None:
            
            _query_params.append(('chipNummer[isempty]', chip_nummer_isempty))
            
        if chip_nummer_isnull is not None:
            
            _query_params.append(('chipNummer[isnull]', chip_nummer_isnull))
            
        if chip_nummer_like is not None:
            
            _query_params.append(('chipNummer[like]', chip_nummer_like))
            
        if chip_nummer_not is not None:
            
            _query_params.append(('chipNummer[not]', chip_nummer_not))
            
        if id2 is not None:
            
            _query_params.append(('id', id2))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if interventie_datum is not None:
            
            _query_params.append(('interventieDatum', interventie_datum))
            
        if interventie_datum_in is not None:
            
            _query_params.append(('interventieDatum[in]', interventie_datum_in))
            
        if interventie_datum_isempty is not None:
            
            _query_params.append(('interventieDatum[isempty]', interventie_datum_isempty))
            
        if interventie_datum_isnull is not None:
            
            _query_params.append(('interventieDatum[isnull]', interventie_datum_isnull))
            
        if interventie_datum_like is not None:
            
            _query_params.append(('interventieDatum[like]', interventie_datum_like))
            
        if interventie_datum_not is not None:
            
            _query_params.append(('interventieDatum[not]', interventie_datum_not))
            
        if rolcontainer_id is not None:
            
            _query_params.append(('rolcontainer.id', rolcontainer_id))
            
        if rolcontainer_id_gt is not None:
            
            _query_params.append(('rolcontainer.id[gt]', rolcontainer_id_gt))
            
        if rolcontainer_id_gte is not None:
            
            _query_params.append(('rolcontainer.id[gte]', rolcontainer_id_gte))
            
        if rolcontainer_id_in is not None:
            
            _query_params.append(('rolcontainer.id[in]', rolcontainer_id_in))
            
        if rolcontainer_id_isnull is not None:
            
            _query_params.append(('rolcontainer.id[isnull]', rolcontainer_id_isnull))
            
        if rolcontainer_id_lt is not None:
            
            _query_params.append(('rolcontainer.id[lt]', rolcontainer_id_lt))
            
        if rolcontainer_id_lte is not None:
            
            _query_params.append(('rolcontainer.id[lte]', rolcontainer_id_lte))
            
        if rolcontainer_id_not is not None:
            
            _query_params.append(('rolcontainer.id[not]', rolcontainer_id_not))
            
        if ronde is not None:
            
            _query_params.append(('ronde', ronde))
            
        if ronde_in is not None:
            
            _query_params.append(('ronde[in]', ronde_in))
            
        if ronde_isempty is not None:
            
            _query_params.append(('ronde[isempty]', ronde_isempty))
            
        if ronde_isnull is not None:
            
            _query_params.append(('ronde[isnull]', ronde_isnull))
            
        if ronde_like is not None:
            
            _query_params.append(('ronde[like]', ronde_like))
            
        if ronde_not is not None:
            
            _query_params.append(('ronde[not]', ronde_not))
            
        if soort_container is not None:
            
            _query_params.append(('soortContainer', soort_container))
            
        if soort_container_in is not None:
            
            _query_params.append(('soortContainer[in]', soort_container_in))
            
        if soort_container_isempty is not None:
            
            _query_params.append(('soortContainer[isempty]', soort_container_isempty))
            
        if soort_container_isnull is not None:
            
            _query_params.append(('soortContainer[isnull]', soort_container_isnull))
            
        if soort_container_like is not None:
            
            _query_params.append(('soortContainer[like]', soort_container_like))
            
        if soort_container_not is not None:
            
            _query_params.append(('soortContainer[not]', soort_container_not))
            
        if soort_verzoek is not None:
            
            _query_params.append(('soortVerzoek', soort_verzoek))
            
        if soort_verzoek_in is not None:
            
            _query_params.append(('soortVerzoek[in]', soort_verzoek_in))
            
        if soort_verzoek_isempty is not None:
            
            _query_params.append(('soortVerzoek[isempty]', soort_verzoek_isempty))
            
        if soort_verzoek_isnull is not None:
            
            _query_params.append(('soortVerzoek[isnull]', soort_verzoek_isnull))
            
        if soort_verzoek_like is not None:
            
            _query_params.append(('soortVerzoek[like]', soort_verzoek_like))
            
        if soort_verzoek_not is not None:
            
            _query_params.append(('soortVerzoek[not]', soort_verzoek_not))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if status_in is not None:
            
            _query_params.append(('status[in]', status_in))
            
        if status_isempty is not None:
            
            _query_params.append(('status[isempty]', status_isempty))
            
        if status_isnull is not None:
            
            _query_params.append(('status[isnull]', status_isnull))
            
        if status_like is not None:
            
            _query_params.append(('status[like]', status_like))
            
        if status_not is not None:
            
            _query_params.append(('status[not]', status_not))
            
        if team is not None:
            
            _query_params.append(('team', team))
            
        if team_in is not None:
            
            _query_params.append(('team[in]', team_in))
            
        if team_isempty is not None:
            
            _query_params.append(('team[isempty]', team_isempty))
            
        if team_isnull is not None:
            
            _query_params.append(('team[isnull]', team_isnull))
            
        if team_like is not None:
            
            _query_params.append(('team[like]', team_like))
            
        if team_not is not None:
            
            _query_params.append(('team[not]', team_not))
            
        if wijzigingsdatum is not None:
            if isinstance(wijzigingsdatum, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum',
                        wijzigingsdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum', wijzigingsdatum))
            
        if wijzigingsdatum_gt is not None:
            if isinstance(wijzigingsdatum_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gt]',
                        wijzigingsdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gt]', wijzigingsdatum_gt))
            
        if wijzigingsdatum_gte is not None:
            if isinstance(wijzigingsdatum_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gte]',
                        wijzigingsdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gte]', wijzigingsdatum_gte))
            
        if wijzigingsdatum_in is not None:
            
            _query_params.append(('wijzigingsdatum[in]', wijzigingsdatum_in))
            
        if wijzigingsdatum_isnull is not None:
            
            _query_params.append(('wijzigingsdatum[isnull]', wijzigingsdatum_isnull))
            
        if wijzigingsdatum_lt is not None:
            if isinstance(wijzigingsdatum_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lt]',
                        wijzigingsdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lt]', wijzigingsdatum_lt))
            
        if wijzigingsdatum_lte is not None:
            if isinstance(wijzigingsdatum_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lte]',
                        wijzigingsdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lte]', wijzigingsdatum_lte))
            
        if wijzigingsdatum_not is not None:
            
            _query_params.append(('wijzigingsdatum[not]', wijzigingsdatum_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/rolcontainer_actie/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


