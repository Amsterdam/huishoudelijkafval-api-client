# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr, field_validator
from typing import List, Optional, Union
from typing_extensions import Annotated
from huishoudelijkafval_api_client.models.huishoudelijkafvalticket import Huishoudelijkafvalticket
from huishoudelijkafval_api_client.models.paginated_huishoudelijkafvalticket_list import PaginatedHuishoudelijkafvalticketList

from huishoudelijkafval_api_client.api_client import ApiClient, RequestSerialized
from huishoudelijkafval_api_client.api_response import ApiResponse
from huishoudelijkafval_api_client.rest import RESTResponseType


class TicketApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    async def huishoudelijkafval_ticket_list2(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedHuishoudelijkafvalticketList:
        """huishoudelijkafval_ticket_list2


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id: Identificerend kenmerk van het ticket.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_list2_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            page=page,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalticketList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_ticket_list2_with_http_info(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedHuishoudelijkafvalticketList]:
        """huishoudelijkafval_ticket_list2


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id: Identificerend kenmerk van het ticket.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_list2_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            page=page,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalticketList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_ticket_list2_without_preload_content(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_ticket_list2


        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id: Identificerend kenmerk van het ticket.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_list2_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            page=page,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalticketList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_ticket_list2_serialize(
        self,
        accept_crs,
        content_crs,
        x_api_key,
        count,
        expand,
        expand_scope,
        fields,
        format,
        page_size,
        sort,
        container_id,
        container_id_in,
        container_id_isempty,
        container_id_isnull,
        container_id_like,
        container_id_not,
        containerlocatie_id,
        containerlocatie_id_in,
        containerlocatie_id_isempty,
        containerlocatie_id_isnull,
        containerlocatie_id_like,
        containerlocatie_id_not,
        datum_afgerond,
        datum_afgerond_gt,
        datum_afgerond_gte,
        datum_afgerond_in,
        datum_afgerond_isnull,
        datum_afgerond_lt,
        datum_afgerond_lte,
        datum_afgerond_not,
        datum_afgewezen,
        datum_afgewezen_gt,
        datum_afgewezen_gte,
        datum_afgewezen_in,
        datum_afgewezen_isnull,
        datum_afgewezen_lt,
        datum_afgewezen_lte,
        datum_afgewezen_not,
        datum_creatie,
        datum_creatie_gt,
        datum_creatie_gte,
        datum_creatie_in,
        datum_creatie_isnull,
        datum_creatie_lt,
        datum_creatie_lte,
        datum_creatie_not,
        datum_factuur,
        datum_factuur_gt,
        datum_factuur_gte,
        datum_factuur_in,
        datum_factuur_isnull,
        datum_factuur_lt,
        datum_factuur_lte,
        datum_factuur_not,
        datum_financiele_goedkeuring,
        datum_financiele_goedkeuring_gt,
        datum_financiele_goedkeuring_gte,
        datum_financiele_goedkeuring_in,
        datum_financiele_goedkeuring_isnull,
        datum_financiele_goedkeuring_lt,
        datum_financiele_goedkeuring_lte,
        datum_financiele_goedkeuring_not,
        datum_geaccepteerd,
        datum_geaccepteerd_gt,
        datum_geaccepteerd_gte,
        datum_geaccepteerd_in,
        datum_geaccepteerd_isnull,
        datum_geaccepteerd_lt,
        datum_geaccepteerd_lte,
        datum_geaccepteerd_not,
        datum_gefactureerd,
        datum_gefactureerd_gt,
        datum_gefactureerd_gte,
        datum_gefactureerd_in,
        datum_gefactureerd_isnull,
        datum_gefactureerd_lt,
        datum_gefactureerd_lte,
        datum_gefactureerd_not,
        datum_gepland,
        datum_gepland_gt,
        datum_gepland_gte,
        datum_gepland_in,
        datum_gepland_isnull,
        datum_gepland_lt,
        datum_gepland_lte,
        datum_gepland_not,
        datum_gereed,
        datum_gereed_gt,
        datum_gereed_gte,
        datum_gereed_in,
        datum_gereed_isnull,
        datum_gereed_lt,
        datum_gereed_lte,
        datum_gereed_not,
        datum_offerte,
        datum_offerte_gt,
        datum_offerte_gte,
        datum_offerte_in,
        datum_offerte_isnull,
        datum_offerte_lt,
        datum_offerte_lte,
        datum_offerte_not,
        datum_technische_goedkeuring,
        datum_technische_goedkeuring_gt,
        datum_technische_goedkeuring_gte,
        datum_technische_goedkeuring_in,
        datum_technische_goedkeuring_isnull,
        datum_technische_goedkeuring_lt,
        datum_technische_goedkeuring_lte,
        datum_technische_goedkeuring_not,
        datum_wijziging,
        datum_wijziging_gt,
        datum_wijziging_gte,
        datum_wijziging_in,
        datum_wijziging_isnull,
        datum_wijziging_lt,
        datum_wijziging_lte,
        datum_wijziging_not,
        datum_workflow_start,
        datum_workflow_start_gt,
        datum_workflow_start_gte,
        datum_workflow_start_in,
        datum_workflow_start_isnull,
        datum_workflow_start_lt,
        datum_workflow_start_lte,
        datum_workflow_start_not,
        doorlooptijd,
        doorlooptijd_in,
        doorlooptijd_isempty,
        doorlooptijd_isnull,
        doorlooptijd_like,
        doorlooptijd_not,
        eigenaar,
        eigenaar_in,
        eigenaar_isempty,
        eigenaar_isnull,
        eigenaar_like,
        eigenaar_not,
        factuur_nummer,
        factuur_nummer_in,
        factuur_nummer_isempty,
        factuur_nummer_isnull,
        factuur_nummer_like,
        factuur_nummer_not,
        gbd_buurt_identificatie,
        gbd_buurt_identificatie_in,
        gbd_buurt_identificatie_isempty,
        gbd_buurt_identificatie_isnull,
        gbd_buurt_identificatie_like,
        gbd_buurt_identificatie_not,
        gbd_buurt_code,
        gbd_buurt_code_in,
        gbd_buurt_code_isempty,
        gbd_buurt_code_isnull,
        gbd_buurt_code_like,
        gbd_buurt_code_not,
        gbd_buurt_naam,
        gbd_buurt_naam_in,
        gbd_buurt_naam_isempty,
        gbd_buurt_naam_isnull,
        gbd_buurt_naam_like,
        gbd_buurt_naam_not,
        gbd_buurt_volgnummer,
        gbd_buurt_volgnummer_gt,
        gbd_buurt_volgnummer_gte,
        gbd_buurt_volgnummer_in,
        gbd_buurt_volgnummer_isnull,
        gbd_buurt_volgnummer_lt,
        gbd_buurt_volgnummer_lte,
        gbd_buurt_volgnummer_not,
        gbd_ggw_identificatie,
        gbd_ggw_identificatie_in,
        gbd_ggw_identificatie_isempty,
        gbd_ggw_identificatie_isnull,
        gbd_ggw_identificatie_like,
        gbd_ggw_identificatie_not,
        gbd_ggw_naam,
        gbd_ggw_naam_in,
        gbd_ggw_naam_isempty,
        gbd_ggw_naam_isnull,
        gbd_ggw_naam_like,
        gbd_ggw_naam_not,
        gbd_ggw_volgnummer,
        gbd_ggw_volgnummer_in,
        gbd_ggw_volgnummer_isempty,
        gbd_ggw_volgnummer_isnull,
        gbd_ggw_volgnummer_like,
        gbd_ggw_volgnummer_not,
        gbd_stadsdeel_identificatie,
        gbd_stadsdeel_identificatie_in,
        gbd_stadsdeel_identificatie_isempty,
        gbd_stadsdeel_identificatie_isnull,
        gbd_stadsdeel_identificatie_like,
        gbd_stadsdeel_identificatie_not,
        gbd_stadsdeel_naam,
        gbd_stadsdeel_naam_in,
        gbd_stadsdeel_naam_isempty,
        gbd_stadsdeel_naam_isnull,
        gbd_stadsdeel_naam_like,
        gbd_stadsdeel_naam_not,
        gbd_stadsdeel_volgnummer,
        gbd_stadsdeel_volgnummer_gt,
        gbd_stadsdeel_volgnummer_gte,
        gbd_stadsdeel_volgnummer_in,
        gbd_stadsdeel_volgnummer_isnull,
        gbd_stadsdeel_volgnummer_lt,
        gbd_stadsdeel_volgnummer_lte,
        gbd_stadsdeel_volgnummer_not,
        gbd_wijk_identificatie,
        gbd_wijk_identificatie_in,
        gbd_wijk_identificatie_isempty,
        gbd_wijk_identificatie_isnull,
        gbd_wijk_identificatie_like,
        gbd_wijk_identificatie_not,
        gbd_wijk_naam,
        gbd_wijk_naam_in,
        gbd_wijk_naam_isempty,
        gbd_wijk_naam_isnull,
        gbd_wijk_naam_like,
        gbd_wijk_naam_not,
        gbd_wijk_volgnummer,
        gbd_wijk_volgnummer_gt,
        gbd_wijk_volgnummer_gte,
        gbd_wijk_volgnummer_in,
        gbd_wijk_volgnummer_isnull,
        gbd_wijk_volgnummer_lt,
        gbd_wijk_volgnummer_lte,
        gbd_wijk_volgnummer_not,
        id,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        items_definitief,
        items_definitief_in,
        items_definitief_isempty,
        items_definitief_isnull,
        items_definitief_like,
        items_definitief_not,
        items_offerte,
        items_offerte_in,
        items_offerte_isempty,
        items_offerte_isnull,
        items_offerte_like,
        items_offerte_not,
        onderhoudsbedrijf,
        onderhoudsbedrijf_in,
        onderhoudsbedrijf_isempty,
        onderhoudsbedrijf_isnull,
        onderhoudsbedrijf_like,
        onderhoudsbedrijf_not,
        oorzaak,
        oorzaak_contains,
        oplossing,
        oplossing_contains,
        page,
        prijs,
        prijs_offerte,
        prijs_offerte_gt,
        prijs_offerte_gte,
        prijs_offerte_in,
        prijs_offerte_isnull,
        prijs_offerte_lt,
        prijs_offerte_lte,
        prijs_offerte_not,
        prijs_gt,
        prijs_gte,
        prijs_in,
        prijs_isnull,
        prijs_lt,
        prijs_lte,
        prijs_not,
        prioriteit_naam,
        prioriteit_naam_in,
        prioriteit_naam_isempty,
        prioriteit_naam_isnull,
        prioriteit_naam_like,
        prioriteit_naam_not,
        prioriteit_opmerking,
        prioriteit_opmerking_in,
        prioriteit_opmerking_isempty,
        prioriteit_opmerking_isnull,
        prioriteit_opmerking_like,
        prioriteit_opmerking_not,
        prioriteit_responstijd,
        prioriteit_responstijd_gt,
        prioriteit_responstijd_gte,
        prioriteit_responstijd_in,
        prioriteit_responstijd_isnull,
        prioriteit_responstijd_lt,
        prioriteit_responstijd_lte,
        prioriteit_responstijd_not,
        probleem,
        probleem_module_naam,
        probleem_module_naam_contains,
        probleem_contains,
        rangorde_nummer_tickettype,
        rangorde_nummer_tickettype_gt,
        rangorde_nummer_tickettype_gte,
        rangorde_nummer_tickettype_in,
        rangorde_nummer_tickettype_isnull,
        rangorde_nummer_tickettype_lt,
        rangorde_nummer_tickettype_lte,
        rangorde_nummer_tickettype_not,
        reden_afgewezen,
        reden_afgewezen_in,
        reden_afgewezen_isempty,
        reden_afgewezen_isnull,
        reden_afgewezen_like,
        reden_afgewezen_not,
        referentienummer_leverancier,
        referentienummer_leverancier_in,
        referentienummer_leverancier_isempty,
        referentienummer_leverancier_isnull,
        referentienummer_leverancier_like,
        referentienummer_leverancier_not,
        ticketstatus,
        ticketstatus_in,
        ticketstatus_isempty,
        ticketstatus_isnull,
        ticketstatus_like,
        ticketstatus_not,
        tickettype,
        tickettype_in,
        tickettype_isempty,
        tickettype_isnull,
        tickettype_like,
        tickettype_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'container.id[in]': 'csv',
            'container.id[not]': 'multi',
            'containerlocatie.id[in]': 'csv',
            'containerlocatie.id[not]': 'multi',
            'datumAfgerond[in]': 'csv',
            'datumAfgerond[not]': 'multi',
            'datumAfgewezen[in]': 'csv',
            'datumAfgewezen[not]': 'multi',
            'datumCreatie[in]': 'csv',
            'datumCreatie[not]': 'multi',
            'datumFactuur[in]': 'csv',
            'datumFactuur[not]': 'multi',
            'datumFinancieleGoedkeuring[in]': 'csv',
            'datumFinancieleGoedkeuring[not]': 'multi',
            'datumGeaccepteerd[in]': 'csv',
            'datumGeaccepteerd[not]': 'multi',
            'datumGefactureerd[in]': 'csv',
            'datumGefactureerd[not]': 'multi',
            'datumGepland[in]': 'csv',
            'datumGepland[not]': 'multi',
            'datumGereed[in]': 'csv',
            'datumGereed[not]': 'multi',
            'datumOfferte[in]': 'csv',
            'datumOfferte[not]': 'multi',
            'datumTechnischeGoedkeuring[in]': 'csv',
            'datumTechnischeGoedkeuring[not]': 'multi',
            'datumWijziging[in]': 'csv',
            'datumWijziging[not]': 'multi',
            'datumWorkflowStart[in]': 'csv',
            'datumWorkflowStart[not]': 'multi',
            'doorlooptijd[in]': 'csv',
            'doorlooptijd[not]': 'multi',
            'eigenaar[in]': 'csv',
            'eigenaar[not]': 'multi',
            'factuurNummer[in]': 'csv',
            'factuurNummer[not]': 'multi',
            'gbdBuurt.identificatie[in]': 'csv',
            'gbdBuurt.identificatie[not]': 'multi',
            'gbdBuurtCode[in]': 'csv',
            'gbdBuurtCode[not]': 'multi',
            'gbdBuurtNaam[in]': 'csv',
            'gbdBuurtNaam[not]': 'multi',
            'gbdBuurtVolgnummer[in]': 'csv',
            'gbdBuurtVolgnummer[not]': 'multi',
            'gbdGgw.identificatie[in]': 'csv',
            'gbdGgw.identificatie[not]': 'multi',
            'gbdGgwNaam[in]': 'csv',
            'gbdGgwNaam[not]': 'multi',
            'gbdGgwVolgnummer[in]': 'csv',
            'gbdGgwVolgnummer[not]': 'multi',
            'gbdStadsdeel.identificatie[in]': 'csv',
            'gbdStadsdeel.identificatie[not]': 'multi',
            'gbdStadsdeelNaam[in]': 'csv',
            'gbdStadsdeelNaam[not]': 'multi',
            'gbdStadsdeelVolgnummer[in]': 'csv',
            'gbdStadsdeelVolgnummer[not]': 'multi',
            'gbdWijk.identificatie[in]': 'csv',
            'gbdWijk.identificatie[not]': 'multi',
            'gbdWijkNaam[in]': 'csv',
            'gbdWijkNaam[not]': 'multi',
            'gbdWijkVolgnummer[in]': 'csv',
            'gbdWijkVolgnummer[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'itemsDefinitief[in]': 'csv',
            'itemsDefinitief[not]': 'multi',
            'itemsOfferte[in]': 'csv',
            'itemsOfferte[not]': 'multi',
            'onderhoudsbedrijf[in]': 'csv',
            'onderhoudsbedrijf[not]': 'multi',
            'oorzaak': 'csv',
            'oorzaak[contains]': 'csv',
            'oplossing': 'csv',
            'oplossing[contains]': 'csv',
            'prijsOfferte[in]': 'csv',
            'prijsOfferte[not]': 'multi',
            'prijs[in]': 'csv',
            'prijs[not]': 'multi',
            'prioriteitNaam[in]': 'csv',
            'prioriteitNaam[not]': 'multi',
            'prioriteitOpmerking[in]': 'csv',
            'prioriteitOpmerking[not]': 'multi',
            'prioriteitResponstijd[in]': 'csv',
            'prioriteitResponstijd[not]': 'multi',
            'probleem': 'csv',
            'probleemModuleNaam': 'csv',
            'probleemModuleNaam[contains]': 'csv',
            'probleem[contains]': 'csv',
            'rangordeNummerTickettype[in]': 'csv',
            'rangordeNummerTickettype[not]': 'multi',
            'redenAfgewezen[in]': 'csv',
            'redenAfgewezen[not]': 'multi',
            'referentienummerLeverancier[in]': 'csv',
            'referentienummerLeverancier[not]': 'multi',
            'ticketstatus[in]': 'csv',
            'ticketstatus[not]': 'multi',
            'tickettype[in]': 'csv',
            'tickettype[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if count is not None:
            
            _query_params.append(('_count', count))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if page_size is not None:
            
            _query_params.append(('_pageSize', page_size))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if container_id is not None:
            
            _query_params.append(('container.id', container_id))
            
        if container_id_in is not None:
            
            _query_params.append(('container.id[in]', container_id_in))
            
        if container_id_isempty is not None:
            
            _query_params.append(('container.id[isempty]', container_id_isempty))
            
        if container_id_isnull is not None:
            
            _query_params.append(('container.id[isnull]', container_id_isnull))
            
        if container_id_like is not None:
            
            _query_params.append(('container.id[like]', container_id_like))
            
        if container_id_not is not None:
            
            _query_params.append(('container.id[not]', container_id_not))
            
        if containerlocatie_id is not None:
            
            _query_params.append(('containerlocatie.id', containerlocatie_id))
            
        if containerlocatie_id_in is not None:
            
            _query_params.append(('containerlocatie.id[in]', containerlocatie_id_in))
            
        if containerlocatie_id_isempty is not None:
            
            _query_params.append(('containerlocatie.id[isempty]', containerlocatie_id_isempty))
            
        if containerlocatie_id_isnull is not None:
            
            _query_params.append(('containerlocatie.id[isnull]', containerlocatie_id_isnull))
            
        if containerlocatie_id_like is not None:
            
            _query_params.append(('containerlocatie.id[like]', containerlocatie_id_like))
            
        if containerlocatie_id_not is not None:
            
            _query_params.append(('containerlocatie.id[not]', containerlocatie_id_not))
            
        if datum_afgerond is not None:
            if isinstance(datum_afgerond, datetime):
                _query_params.append(
                    (
                        'datumAfgerond',
                        datum_afgerond.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond', datum_afgerond))
            
        if datum_afgerond_gt is not None:
            if isinstance(datum_afgerond_gt, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[gt]',
                        datum_afgerond_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[gt]', datum_afgerond_gt))
            
        if datum_afgerond_gte is not None:
            if isinstance(datum_afgerond_gte, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[gte]',
                        datum_afgerond_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[gte]', datum_afgerond_gte))
            
        if datum_afgerond_in is not None:
            
            _query_params.append(('datumAfgerond[in]', datum_afgerond_in))
            
        if datum_afgerond_isnull is not None:
            
            _query_params.append(('datumAfgerond[isnull]', datum_afgerond_isnull))
            
        if datum_afgerond_lt is not None:
            if isinstance(datum_afgerond_lt, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[lt]',
                        datum_afgerond_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[lt]', datum_afgerond_lt))
            
        if datum_afgerond_lte is not None:
            if isinstance(datum_afgerond_lte, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[lte]',
                        datum_afgerond_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[lte]', datum_afgerond_lte))
            
        if datum_afgerond_not is not None:
            
            _query_params.append(('datumAfgerond[not]', datum_afgerond_not))
            
        if datum_afgewezen is not None:
            if isinstance(datum_afgewezen, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen',
                        datum_afgewezen.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen', datum_afgewezen))
            
        if datum_afgewezen_gt is not None:
            if isinstance(datum_afgewezen_gt, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[gt]',
                        datum_afgewezen_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[gt]', datum_afgewezen_gt))
            
        if datum_afgewezen_gte is not None:
            if isinstance(datum_afgewezen_gte, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[gte]',
                        datum_afgewezen_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[gte]', datum_afgewezen_gte))
            
        if datum_afgewezen_in is not None:
            
            _query_params.append(('datumAfgewezen[in]', datum_afgewezen_in))
            
        if datum_afgewezen_isnull is not None:
            
            _query_params.append(('datumAfgewezen[isnull]', datum_afgewezen_isnull))
            
        if datum_afgewezen_lt is not None:
            if isinstance(datum_afgewezen_lt, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[lt]',
                        datum_afgewezen_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[lt]', datum_afgewezen_lt))
            
        if datum_afgewezen_lte is not None:
            if isinstance(datum_afgewezen_lte, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[lte]',
                        datum_afgewezen_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[lte]', datum_afgewezen_lte))
            
        if datum_afgewezen_not is not None:
            
            _query_params.append(('datumAfgewezen[not]', datum_afgewezen_not))
            
        if datum_creatie is not None:
            if isinstance(datum_creatie, datetime):
                _query_params.append(
                    (
                        'datumCreatie',
                        datum_creatie.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie', datum_creatie))
            
        if datum_creatie_gt is not None:
            if isinstance(datum_creatie_gt, datetime):
                _query_params.append(
                    (
                        'datumCreatie[gt]',
                        datum_creatie_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[gt]', datum_creatie_gt))
            
        if datum_creatie_gte is not None:
            if isinstance(datum_creatie_gte, datetime):
                _query_params.append(
                    (
                        'datumCreatie[gte]',
                        datum_creatie_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[gte]', datum_creatie_gte))
            
        if datum_creatie_in is not None:
            
            _query_params.append(('datumCreatie[in]', datum_creatie_in))
            
        if datum_creatie_isnull is not None:
            
            _query_params.append(('datumCreatie[isnull]', datum_creatie_isnull))
            
        if datum_creatie_lt is not None:
            if isinstance(datum_creatie_lt, datetime):
                _query_params.append(
                    (
                        'datumCreatie[lt]',
                        datum_creatie_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[lt]', datum_creatie_lt))
            
        if datum_creatie_lte is not None:
            if isinstance(datum_creatie_lte, datetime):
                _query_params.append(
                    (
                        'datumCreatie[lte]',
                        datum_creatie_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[lte]', datum_creatie_lte))
            
        if datum_creatie_not is not None:
            
            _query_params.append(('datumCreatie[not]', datum_creatie_not))
            
        if datum_factuur is not None:
            if isinstance(datum_factuur, datetime):
                _query_params.append(
                    (
                        'datumFactuur',
                        datum_factuur.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur', datum_factuur))
            
        if datum_factuur_gt is not None:
            if isinstance(datum_factuur_gt, datetime):
                _query_params.append(
                    (
                        'datumFactuur[gt]',
                        datum_factuur_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[gt]', datum_factuur_gt))
            
        if datum_factuur_gte is not None:
            if isinstance(datum_factuur_gte, datetime):
                _query_params.append(
                    (
                        'datumFactuur[gte]',
                        datum_factuur_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[gte]', datum_factuur_gte))
            
        if datum_factuur_in is not None:
            
            _query_params.append(('datumFactuur[in]', datum_factuur_in))
            
        if datum_factuur_isnull is not None:
            
            _query_params.append(('datumFactuur[isnull]', datum_factuur_isnull))
            
        if datum_factuur_lt is not None:
            if isinstance(datum_factuur_lt, datetime):
                _query_params.append(
                    (
                        'datumFactuur[lt]',
                        datum_factuur_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[lt]', datum_factuur_lt))
            
        if datum_factuur_lte is not None:
            if isinstance(datum_factuur_lte, datetime):
                _query_params.append(
                    (
                        'datumFactuur[lte]',
                        datum_factuur_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[lte]', datum_factuur_lte))
            
        if datum_factuur_not is not None:
            
            _query_params.append(('datumFactuur[not]', datum_factuur_not))
            
        if datum_financiele_goedkeuring is not None:
            if isinstance(datum_financiele_goedkeuring, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring',
                        datum_financiele_goedkeuring.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring', datum_financiele_goedkeuring))
            
        if datum_financiele_goedkeuring_gt is not None:
            if isinstance(datum_financiele_goedkeuring_gt, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[gt]',
                        datum_financiele_goedkeuring_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[gt]', datum_financiele_goedkeuring_gt))
            
        if datum_financiele_goedkeuring_gte is not None:
            if isinstance(datum_financiele_goedkeuring_gte, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[gte]',
                        datum_financiele_goedkeuring_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[gte]', datum_financiele_goedkeuring_gte))
            
        if datum_financiele_goedkeuring_in is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[in]', datum_financiele_goedkeuring_in))
            
        if datum_financiele_goedkeuring_isnull is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[isnull]', datum_financiele_goedkeuring_isnull))
            
        if datum_financiele_goedkeuring_lt is not None:
            if isinstance(datum_financiele_goedkeuring_lt, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[lt]',
                        datum_financiele_goedkeuring_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[lt]', datum_financiele_goedkeuring_lt))
            
        if datum_financiele_goedkeuring_lte is not None:
            if isinstance(datum_financiele_goedkeuring_lte, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[lte]',
                        datum_financiele_goedkeuring_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[lte]', datum_financiele_goedkeuring_lte))
            
        if datum_financiele_goedkeuring_not is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[not]', datum_financiele_goedkeuring_not))
            
        if datum_geaccepteerd is not None:
            if isinstance(datum_geaccepteerd, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd',
                        datum_geaccepteerd.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd', datum_geaccepteerd))
            
        if datum_geaccepteerd_gt is not None:
            if isinstance(datum_geaccepteerd_gt, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[gt]',
                        datum_geaccepteerd_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[gt]', datum_geaccepteerd_gt))
            
        if datum_geaccepteerd_gte is not None:
            if isinstance(datum_geaccepteerd_gte, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[gte]',
                        datum_geaccepteerd_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[gte]', datum_geaccepteerd_gte))
            
        if datum_geaccepteerd_in is not None:
            
            _query_params.append(('datumGeaccepteerd[in]', datum_geaccepteerd_in))
            
        if datum_geaccepteerd_isnull is not None:
            
            _query_params.append(('datumGeaccepteerd[isnull]', datum_geaccepteerd_isnull))
            
        if datum_geaccepteerd_lt is not None:
            if isinstance(datum_geaccepteerd_lt, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[lt]',
                        datum_geaccepteerd_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[lt]', datum_geaccepteerd_lt))
            
        if datum_geaccepteerd_lte is not None:
            if isinstance(datum_geaccepteerd_lte, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[lte]',
                        datum_geaccepteerd_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[lte]', datum_geaccepteerd_lte))
            
        if datum_geaccepteerd_not is not None:
            
            _query_params.append(('datumGeaccepteerd[not]', datum_geaccepteerd_not))
            
        if datum_gefactureerd is not None:
            if isinstance(datum_gefactureerd, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd',
                        datum_gefactureerd.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd', datum_gefactureerd))
            
        if datum_gefactureerd_gt is not None:
            if isinstance(datum_gefactureerd_gt, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[gt]',
                        datum_gefactureerd_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[gt]', datum_gefactureerd_gt))
            
        if datum_gefactureerd_gte is not None:
            if isinstance(datum_gefactureerd_gte, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[gte]',
                        datum_gefactureerd_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[gte]', datum_gefactureerd_gte))
            
        if datum_gefactureerd_in is not None:
            
            _query_params.append(('datumGefactureerd[in]', datum_gefactureerd_in))
            
        if datum_gefactureerd_isnull is not None:
            
            _query_params.append(('datumGefactureerd[isnull]', datum_gefactureerd_isnull))
            
        if datum_gefactureerd_lt is not None:
            if isinstance(datum_gefactureerd_lt, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[lt]',
                        datum_gefactureerd_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[lt]', datum_gefactureerd_lt))
            
        if datum_gefactureerd_lte is not None:
            if isinstance(datum_gefactureerd_lte, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[lte]',
                        datum_gefactureerd_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[lte]', datum_gefactureerd_lte))
            
        if datum_gefactureerd_not is not None:
            
            _query_params.append(('datumGefactureerd[not]', datum_gefactureerd_not))
            
        if datum_gepland is not None:
            if isinstance(datum_gepland, datetime):
                _query_params.append(
                    (
                        'datumGepland',
                        datum_gepland.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland', datum_gepland))
            
        if datum_gepland_gt is not None:
            if isinstance(datum_gepland_gt, datetime):
                _query_params.append(
                    (
                        'datumGepland[gt]',
                        datum_gepland_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[gt]', datum_gepland_gt))
            
        if datum_gepland_gte is not None:
            if isinstance(datum_gepland_gte, datetime):
                _query_params.append(
                    (
                        'datumGepland[gte]',
                        datum_gepland_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[gte]', datum_gepland_gte))
            
        if datum_gepland_in is not None:
            
            _query_params.append(('datumGepland[in]', datum_gepland_in))
            
        if datum_gepland_isnull is not None:
            
            _query_params.append(('datumGepland[isnull]', datum_gepland_isnull))
            
        if datum_gepland_lt is not None:
            if isinstance(datum_gepland_lt, datetime):
                _query_params.append(
                    (
                        'datumGepland[lt]',
                        datum_gepland_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[lt]', datum_gepland_lt))
            
        if datum_gepland_lte is not None:
            if isinstance(datum_gepland_lte, datetime):
                _query_params.append(
                    (
                        'datumGepland[lte]',
                        datum_gepland_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[lte]', datum_gepland_lte))
            
        if datum_gepland_not is not None:
            
            _query_params.append(('datumGepland[not]', datum_gepland_not))
            
        if datum_gereed is not None:
            if isinstance(datum_gereed, datetime):
                _query_params.append(
                    (
                        'datumGereed',
                        datum_gereed.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed', datum_gereed))
            
        if datum_gereed_gt is not None:
            if isinstance(datum_gereed_gt, datetime):
                _query_params.append(
                    (
                        'datumGereed[gt]',
                        datum_gereed_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[gt]', datum_gereed_gt))
            
        if datum_gereed_gte is not None:
            if isinstance(datum_gereed_gte, datetime):
                _query_params.append(
                    (
                        'datumGereed[gte]',
                        datum_gereed_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[gte]', datum_gereed_gte))
            
        if datum_gereed_in is not None:
            
            _query_params.append(('datumGereed[in]', datum_gereed_in))
            
        if datum_gereed_isnull is not None:
            
            _query_params.append(('datumGereed[isnull]', datum_gereed_isnull))
            
        if datum_gereed_lt is not None:
            if isinstance(datum_gereed_lt, datetime):
                _query_params.append(
                    (
                        'datumGereed[lt]',
                        datum_gereed_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[lt]', datum_gereed_lt))
            
        if datum_gereed_lte is not None:
            if isinstance(datum_gereed_lte, datetime):
                _query_params.append(
                    (
                        'datumGereed[lte]',
                        datum_gereed_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[lte]', datum_gereed_lte))
            
        if datum_gereed_not is not None:
            
            _query_params.append(('datumGereed[not]', datum_gereed_not))
            
        if datum_offerte is not None:
            if isinstance(datum_offerte, datetime):
                _query_params.append(
                    (
                        'datumOfferte',
                        datum_offerte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte', datum_offerte))
            
        if datum_offerte_gt is not None:
            if isinstance(datum_offerte_gt, datetime):
                _query_params.append(
                    (
                        'datumOfferte[gt]',
                        datum_offerte_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[gt]', datum_offerte_gt))
            
        if datum_offerte_gte is not None:
            if isinstance(datum_offerte_gte, datetime):
                _query_params.append(
                    (
                        'datumOfferte[gte]',
                        datum_offerte_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[gte]', datum_offerte_gte))
            
        if datum_offerte_in is not None:
            
            _query_params.append(('datumOfferte[in]', datum_offerte_in))
            
        if datum_offerte_isnull is not None:
            
            _query_params.append(('datumOfferte[isnull]', datum_offerte_isnull))
            
        if datum_offerte_lt is not None:
            if isinstance(datum_offerte_lt, datetime):
                _query_params.append(
                    (
                        'datumOfferte[lt]',
                        datum_offerte_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[lt]', datum_offerte_lt))
            
        if datum_offerte_lte is not None:
            if isinstance(datum_offerte_lte, datetime):
                _query_params.append(
                    (
                        'datumOfferte[lte]',
                        datum_offerte_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[lte]', datum_offerte_lte))
            
        if datum_offerte_not is not None:
            
            _query_params.append(('datumOfferte[not]', datum_offerte_not))
            
        if datum_technische_goedkeuring is not None:
            if isinstance(datum_technische_goedkeuring, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring',
                        datum_technische_goedkeuring.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring', datum_technische_goedkeuring))
            
        if datum_technische_goedkeuring_gt is not None:
            if isinstance(datum_technische_goedkeuring_gt, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[gt]',
                        datum_technische_goedkeuring_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[gt]', datum_technische_goedkeuring_gt))
            
        if datum_technische_goedkeuring_gte is not None:
            if isinstance(datum_technische_goedkeuring_gte, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[gte]',
                        datum_technische_goedkeuring_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[gte]', datum_technische_goedkeuring_gte))
            
        if datum_technische_goedkeuring_in is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[in]', datum_technische_goedkeuring_in))
            
        if datum_technische_goedkeuring_isnull is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[isnull]', datum_technische_goedkeuring_isnull))
            
        if datum_technische_goedkeuring_lt is not None:
            if isinstance(datum_technische_goedkeuring_lt, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[lt]',
                        datum_technische_goedkeuring_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[lt]', datum_technische_goedkeuring_lt))
            
        if datum_technische_goedkeuring_lte is not None:
            if isinstance(datum_technische_goedkeuring_lte, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[lte]',
                        datum_technische_goedkeuring_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[lte]', datum_technische_goedkeuring_lte))
            
        if datum_technische_goedkeuring_not is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[not]', datum_technische_goedkeuring_not))
            
        if datum_wijziging is not None:
            if isinstance(datum_wijziging, datetime):
                _query_params.append(
                    (
                        'datumWijziging',
                        datum_wijziging.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging', datum_wijziging))
            
        if datum_wijziging_gt is not None:
            if isinstance(datum_wijziging_gt, datetime):
                _query_params.append(
                    (
                        'datumWijziging[gt]',
                        datum_wijziging_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[gt]', datum_wijziging_gt))
            
        if datum_wijziging_gte is not None:
            if isinstance(datum_wijziging_gte, datetime):
                _query_params.append(
                    (
                        'datumWijziging[gte]',
                        datum_wijziging_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[gte]', datum_wijziging_gte))
            
        if datum_wijziging_in is not None:
            
            _query_params.append(('datumWijziging[in]', datum_wijziging_in))
            
        if datum_wijziging_isnull is not None:
            
            _query_params.append(('datumWijziging[isnull]', datum_wijziging_isnull))
            
        if datum_wijziging_lt is not None:
            if isinstance(datum_wijziging_lt, datetime):
                _query_params.append(
                    (
                        'datumWijziging[lt]',
                        datum_wijziging_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[lt]', datum_wijziging_lt))
            
        if datum_wijziging_lte is not None:
            if isinstance(datum_wijziging_lte, datetime):
                _query_params.append(
                    (
                        'datumWijziging[lte]',
                        datum_wijziging_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[lte]', datum_wijziging_lte))
            
        if datum_wijziging_not is not None:
            
            _query_params.append(('datumWijziging[not]', datum_wijziging_not))
            
        if datum_workflow_start is not None:
            if isinstance(datum_workflow_start, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart',
                        datum_workflow_start.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart', datum_workflow_start))
            
        if datum_workflow_start_gt is not None:
            if isinstance(datum_workflow_start_gt, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[gt]',
                        datum_workflow_start_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[gt]', datum_workflow_start_gt))
            
        if datum_workflow_start_gte is not None:
            if isinstance(datum_workflow_start_gte, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[gte]',
                        datum_workflow_start_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[gte]', datum_workflow_start_gte))
            
        if datum_workflow_start_in is not None:
            
            _query_params.append(('datumWorkflowStart[in]', datum_workflow_start_in))
            
        if datum_workflow_start_isnull is not None:
            
            _query_params.append(('datumWorkflowStart[isnull]', datum_workflow_start_isnull))
            
        if datum_workflow_start_lt is not None:
            if isinstance(datum_workflow_start_lt, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[lt]',
                        datum_workflow_start_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[lt]', datum_workflow_start_lt))
            
        if datum_workflow_start_lte is not None:
            if isinstance(datum_workflow_start_lte, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[lte]',
                        datum_workflow_start_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[lte]', datum_workflow_start_lte))
            
        if datum_workflow_start_not is not None:
            
            _query_params.append(('datumWorkflowStart[not]', datum_workflow_start_not))
            
        if doorlooptijd is not None:
            
            _query_params.append(('doorlooptijd', doorlooptijd))
            
        if doorlooptijd_in is not None:
            
            _query_params.append(('doorlooptijd[in]', doorlooptijd_in))
            
        if doorlooptijd_isempty is not None:
            
            _query_params.append(('doorlooptijd[isempty]', doorlooptijd_isempty))
            
        if doorlooptijd_isnull is not None:
            
            _query_params.append(('doorlooptijd[isnull]', doorlooptijd_isnull))
            
        if doorlooptijd_like is not None:
            
            _query_params.append(('doorlooptijd[like]', doorlooptijd_like))
            
        if doorlooptijd_not is not None:
            
            _query_params.append(('doorlooptijd[not]', doorlooptijd_not))
            
        if eigenaar is not None:
            
            _query_params.append(('eigenaar', eigenaar))
            
        if eigenaar_in is not None:
            
            _query_params.append(('eigenaar[in]', eigenaar_in))
            
        if eigenaar_isempty is not None:
            
            _query_params.append(('eigenaar[isempty]', eigenaar_isempty))
            
        if eigenaar_isnull is not None:
            
            _query_params.append(('eigenaar[isnull]', eigenaar_isnull))
            
        if eigenaar_like is not None:
            
            _query_params.append(('eigenaar[like]', eigenaar_like))
            
        if eigenaar_not is not None:
            
            _query_params.append(('eigenaar[not]', eigenaar_not))
            
        if factuur_nummer is not None:
            
            _query_params.append(('factuurNummer', factuur_nummer))
            
        if factuur_nummer_in is not None:
            
            _query_params.append(('factuurNummer[in]', factuur_nummer_in))
            
        if factuur_nummer_isempty is not None:
            
            _query_params.append(('factuurNummer[isempty]', factuur_nummer_isempty))
            
        if factuur_nummer_isnull is not None:
            
            _query_params.append(('factuurNummer[isnull]', factuur_nummer_isnull))
            
        if factuur_nummer_like is not None:
            
            _query_params.append(('factuurNummer[like]', factuur_nummer_like))
            
        if factuur_nummer_not is not None:
            
            _query_params.append(('factuurNummer[not]', factuur_nummer_not))
            
        if gbd_buurt_identificatie is not None:
            
            _query_params.append(('gbdBuurt.identificatie', gbd_buurt_identificatie))
            
        if gbd_buurt_identificatie_in is not None:
            
            _query_params.append(('gbdBuurt.identificatie[in]', gbd_buurt_identificatie_in))
            
        if gbd_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isempty]', gbd_buurt_identificatie_isempty))
            
        if gbd_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isnull]', gbd_buurt_identificatie_isnull))
            
        if gbd_buurt_identificatie_like is not None:
            
            _query_params.append(('gbdBuurt.identificatie[like]', gbd_buurt_identificatie_like))
            
        if gbd_buurt_identificatie_not is not None:
            
            _query_params.append(('gbdBuurt.identificatie[not]', gbd_buurt_identificatie_not))
            
        if gbd_buurt_code is not None:
            
            _query_params.append(('gbdBuurtCode', gbd_buurt_code))
            
        if gbd_buurt_code_in is not None:
            
            _query_params.append(('gbdBuurtCode[in]', gbd_buurt_code_in))
            
        if gbd_buurt_code_isempty is not None:
            
            _query_params.append(('gbdBuurtCode[isempty]', gbd_buurt_code_isempty))
            
        if gbd_buurt_code_isnull is not None:
            
            _query_params.append(('gbdBuurtCode[isnull]', gbd_buurt_code_isnull))
            
        if gbd_buurt_code_like is not None:
            
            _query_params.append(('gbdBuurtCode[like]', gbd_buurt_code_like))
            
        if gbd_buurt_code_not is not None:
            
            _query_params.append(('gbdBuurtCode[not]', gbd_buurt_code_not))
            
        if gbd_buurt_naam is not None:
            
            _query_params.append(('gbdBuurtNaam', gbd_buurt_naam))
            
        if gbd_buurt_naam_in is not None:
            
            _query_params.append(('gbdBuurtNaam[in]', gbd_buurt_naam_in))
            
        if gbd_buurt_naam_isempty is not None:
            
            _query_params.append(('gbdBuurtNaam[isempty]', gbd_buurt_naam_isempty))
            
        if gbd_buurt_naam_isnull is not None:
            
            _query_params.append(('gbdBuurtNaam[isnull]', gbd_buurt_naam_isnull))
            
        if gbd_buurt_naam_like is not None:
            
            _query_params.append(('gbdBuurtNaam[like]', gbd_buurt_naam_like))
            
        if gbd_buurt_naam_not is not None:
            
            _query_params.append(('gbdBuurtNaam[not]', gbd_buurt_naam_not))
            
        if gbd_buurt_volgnummer is not None:
            
            _query_params.append(('gbdBuurtVolgnummer', gbd_buurt_volgnummer))
            
        if gbd_buurt_volgnummer_gt is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[gt]', gbd_buurt_volgnummer_gt))
            
        if gbd_buurt_volgnummer_gte is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[gte]', gbd_buurt_volgnummer_gte))
            
        if gbd_buurt_volgnummer_in is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[in]', gbd_buurt_volgnummer_in))
            
        if gbd_buurt_volgnummer_isnull is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[isnull]', gbd_buurt_volgnummer_isnull))
            
        if gbd_buurt_volgnummer_lt is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[lt]', gbd_buurt_volgnummer_lt))
            
        if gbd_buurt_volgnummer_lte is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[lte]', gbd_buurt_volgnummer_lte))
            
        if gbd_buurt_volgnummer_not is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[not]', gbd_buurt_volgnummer_not))
            
        if gbd_ggw_identificatie is not None:
            
            _query_params.append(('gbdGgw.identificatie', gbd_ggw_identificatie))
            
        if gbd_ggw_identificatie_in is not None:
            
            _query_params.append(('gbdGgw.identificatie[in]', gbd_ggw_identificatie_in))
            
        if gbd_ggw_identificatie_isempty is not None:
            
            _query_params.append(('gbdGgw.identificatie[isempty]', gbd_ggw_identificatie_isempty))
            
        if gbd_ggw_identificatie_isnull is not None:
            
            _query_params.append(('gbdGgw.identificatie[isnull]', gbd_ggw_identificatie_isnull))
            
        if gbd_ggw_identificatie_like is not None:
            
            _query_params.append(('gbdGgw.identificatie[like]', gbd_ggw_identificatie_like))
            
        if gbd_ggw_identificatie_not is not None:
            
            _query_params.append(('gbdGgw.identificatie[not]', gbd_ggw_identificatie_not))
            
        if gbd_ggw_naam is not None:
            
            _query_params.append(('gbdGgwNaam', gbd_ggw_naam))
            
        if gbd_ggw_naam_in is not None:
            
            _query_params.append(('gbdGgwNaam[in]', gbd_ggw_naam_in))
            
        if gbd_ggw_naam_isempty is not None:
            
            _query_params.append(('gbdGgwNaam[isempty]', gbd_ggw_naam_isempty))
            
        if gbd_ggw_naam_isnull is not None:
            
            _query_params.append(('gbdGgwNaam[isnull]', gbd_ggw_naam_isnull))
            
        if gbd_ggw_naam_like is not None:
            
            _query_params.append(('gbdGgwNaam[like]', gbd_ggw_naam_like))
            
        if gbd_ggw_naam_not is not None:
            
            _query_params.append(('gbdGgwNaam[not]', gbd_ggw_naam_not))
            
        if gbd_ggw_volgnummer is not None:
            
            _query_params.append(('gbdGgwVolgnummer', gbd_ggw_volgnummer))
            
        if gbd_ggw_volgnummer_in is not None:
            
            _query_params.append(('gbdGgwVolgnummer[in]', gbd_ggw_volgnummer_in))
            
        if gbd_ggw_volgnummer_isempty is not None:
            
            _query_params.append(('gbdGgwVolgnummer[isempty]', gbd_ggw_volgnummer_isempty))
            
        if gbd_ggw_volgnummer_isnull is not None:
            
            _query_params.append(('gbdGgwVolgnummer[isnull]', gbd_ggw_volgnummer_isnull))
            
        if gbd_ggw_volgnummer_like is not None:
            
            _query_params.append(('gbdGgwVolgnummer[like]', gbd_ggw_volgnummer_like))
            
        if gbd_ggw_volgnummer_not is not None:
            
            _query_params.append(('gbdGgwVolgnummer[not]', gbd_ggw_volgnummer_not))
            
        if gbd_stadsdeel_identificatie is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie', gbd_stadsdeel_identificatie))
            
        if gbd_stadsdeel_identificatie_in is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[in]', gbd_stadsdeel_identificatie_in))
            
        if gbd_stadsdeel_identificatie_isempty is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[isempty]', gbd_stadsdeel_identificatie_isempty))
            
        if gbd_stadsdeel_identificatie_isnull is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[isnull]', gbd_stadsdeel_identificatie_isnull))
            
        if gbd_stadsdeel_identificatie_like is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[like]', gbd_stadsdeel_identificatie_like))
            
        if gbd_stadsdeel_identificatie_not is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[not]', gbd_stadsdeel_identificatie_not))
            
        if gbd_stadsdeel_naam is not None:
            
            _query_params.append(('gbdStadsdeelNaam', gbd_stadsdeel_naam))
            
        if gbd_stadsdeel_naam_in is not None:
            
            _query_params.append(('gbdStadsdeelNaam[in]', gbd_stadsdeel_naam_in))
            
        if gbd_stadsdeel_naam_isempty is not None:
            
            _query_params.append(('gbdStadsdeelNaam[isempty]', gbd_stadsdeel_naam_isempty))
            
        if gbd_stadsdeel_naam_isnull is not None:
            
            _query_params.append(('gbdStadsdeelNaam[isnull]', gbd_stadsdeel_naam_isnull))
            
        if gbd_stadsdeel_naam_like is not None:
            
            _query_params.append(('gbdStadsdeelNaam[like]', gbd_stadsdeel_naam_like))
            
        if gbd_stadsdeel_naam_not is not None:
            
            _query_params.append(('gbdStadsdeelNaam[not]', gbd_stadsdeel_naam_not))
            
        if gbd_stadsdeel_volgnummer is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer', gbd_stadsdeel_volgnummer))
            
        if gbd_stadsdeel_volgnummer_gt is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[gt]', gbd_stadsdeel_volgnummer_gt))
            
        if gbd_stadsdeel_volgnummer_gte is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[gte]', gbd_stadsdeel_volgnummer_gte))
            
        if gbd_stadsdeel_volgnummer_in is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[in]', gbd_stadsdeel_volgnummer_in))
            
        if gbd_stadsdeel_volgnummer_isnull is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[isnull]', gbd_stadsdeel_volgnummer_isnull))
            
        if gbd_stadsdeel_volgnummer_lt is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[lt]', gbd_stadsdeel_volgnummer_lt))
            
        if gbd_stadsdeel_volgnummer_lte is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[lte]', gbd_stadsdeel_volgnummer_lte))
            
        if gbd_stadsdeel_volgnummer_not is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[not]', gbd_stadsdeel_volgnummer_not))
            
        if gbd_wijk_identificatie is not None:
            
            _query_params.append(('gbdWijk.identificatie', gbd_wijk_identificatie))
            
        if gbd_wijk_identificatie_in is not None:
            
            _query_params.append(('gbdWijk.identificatie[in]', gbd_wijk_identificatie_in))
            
        if gbd_wijk_identificatie_isempty is not None:
            
            _query_params.append(('gbdWijk.identificatie[isempty]', gbd_wijk_identificatie_isempty))
            
        if gbd_wijk_identificatie_isnull is not None:
            
            _query_params.append(('gbdWijk.identificatie[isnull]', gbd_wijk_identificatie_isnull))
            
        if gbd_wijk_identificatie_like is not None:
            
            _query_params.append(('gbdWijk.identificatie[like]', gbd_wijk_identificatie_like))
            
        if gbd_wijk_identificatie_not is not None:
            
            _query_params.append(('gbdWijk.identificatie[not]', gbd_wijk_identificatie_not))
            
        if gbd_wijk_naam is not None:
            
            _query_params.append(('gbdWijkNaam', gbd_wijk_naam))
            
        if gbd_wijk_naam_in is not None:
            
            _query_params.append(('gbdWijkNaam[in]', gbd_wijk_naam_in))
            
        if gbd_wijk_naam_isempty is not None:
            
            _query_params.append(('gbdWijkNaam[isempty]', gbd_wijk_naam_isempty))
            
        if gbd_wijk_naam_isnull is not None:
            
            _query_params.append(('gbdWijkNaam[isnull]', gbd_wijk_naam_isnull))
            
        if gbd_wijk_naam_like is not None:
            
            _query_params.append(('gbdWijkNaam[like]', gbd_wijk_naam_like))
            
        if gbd_wijk_naam_not is not None:
            
            _query_params.append(('gbdWijkNaam[not]', gbd_wijk_naam_not))
            
        if gbd_wijk_volgnummer is not None:
            
            _query_params.append(('gbdWijkVolgnummer', gbd_wijk_volgnummer))
            
        if gbd_wijk_volgnummer_gt is not None:
            
            _query_params.append(('gbdWijkVolgnummer[gt]', gbd_wijk_volgnummer_gt))
            
        if gbd_wijk_volgnummer_gte is not None:
            
            _query_params.append(('gbdWijkVolgnummer[gte]', gbd_wijk_volgnummer_gte))
            
        if gbd_wijk_volgnummer_in is not None:
            
            _query_params.append(('gbdWijkVolgnummer[in]', gbd_wijk_volgnummer_in))
            
        if gbd_wijk_volgnummer_isnull is not None:
            
            _query_params.append(('gbdWijkVolgnummer[isnull]', gbd_wijk_volgnummer_isnull))
            
        if gbd_wijk_volgnummer_lt is not None:
            
            _query_params.append(('gbdWijkVolgnummer[lt]', gbd_wijk_volgnummer_lt))
            
        if gbd_wijk_volgnummer_lte is not None:
            
            _query_params.append(('gbdWijkVolgnummer[lte]', gbd_wijk_volgnummer_lte))
            
        if gbd_wijk_volgnummer_not is not None:
            
            _query_params.append(('gbdWijkVolgnummer[not]', gbd_wijk_volgnummer_not))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if items_definitief is not None:
            
            _query_params.append(('itemsDefinitief', items_definitief))
            
        if items_definitief_in is not None:
            
            _query_params.append(('itemsDefinitief[in]', items_definitief_in))
            
        if items_definitief_isempty is not None:
            
            _query_params.append(('itemsDefinitief[isempty]', items_definitief_isempty))
            
        if items_definitief_isnull is not None:
            
            _query_params.append(('itemsDefinitief[isnull]', items_definitief_isnull))
            
        if items_definitief_like is not None:
            
            _query_params.append(('itemsDefinitief[like]', items_definitief_like))
            
        if items_definitief_not is not None:
            
            _query_params.append(('itemsDefinitief[not]', items_definitief_not))
            
        if items_offerte is not None:
            
            _query_params.append(('itemsOfferte', items_offerte))
            
        if items_offerte_in is not None:
            
            _query_params.append(('itemsOfferte[in]', items_offerte_in))
            
        if items_offerte_isempty is not None:
            
            _query_params.append(('itemsOfferte[isempty]', items_offerte_isempty))
            
        if items_offerte_isnull is not None:
            
            _query_params.append(('itemsOfferte[isnull]', items_offerte_isnull))
            
        if items_offerte_like is not None:
            
            _query_params.append(('itemsOfferte[like]', items_offerte_like))
            
        if items_offerte_not is not None:
            
            _query_params.append(('itemsOfferte[not]', items_offerte_not))
            
        if onderhoudsbedrijf is not None:
            
            _query_params.append(('onderhoudsbedrijf', onderhoudsbedrijf))
            
        if onderhoudsbedrijf_in is not None:
            
            _query_params.append(('onderhoudsbedrijf[in]', onderhoudsbedrijf_in))
            
        if onderhoudsbedrijf_isempty is not None:
            
            _query_params.append(('onderhoudsbedrijf[isempty]', onderhoudsbedrijf_isempty))
            
        if onderhoudsbedrijf_isnull is not None:
            
            _query_params.append(('onderhoudsbedrijf[isnull]', onderhoudsbedrijf_isnull))
            
        if onderhoudsbedrijf_like is not None:
            
            _query_params.append(('onderhoudsbedrijf[like]', onderhoudsbedrijf_like))
            
        if onderhoudsbedrijf_not is not None:
            
            _query_params.append(('onderhoudsbedrijf[not]', onderhoudsbedrijf_not))
            
        if oorzaak is not None:
            
            _query_params.append(('oorzaak', oorzaak))
            
        if oorzaak_contains is not None:
            
            _query_params.append(('oorzaak[contains]', oorzaak_contains))
            
        if oplossing is not None:
            
            _query_params.append(('oplossing', oplossing))
            
        if oplossing_contains is not None:
            
            _query_params.append(('oplossing[contains]', oplossing_contains))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if prijs is not None:
            
            _query_params.append(('prijs', prijs))
            
        if prijs_offerte is not None:
            
            _query_params.append(('prijsOfferte', prijs_offerte))
            
        if prijs_offerte_gt is not None:
            
            _query_params.append(('prijsOfferte[gt]', prijs_offerte_gt))
            
        if prijs_offerte_gte is not None:
            
            _query_params.append(('prijsOfferte[gte]', prijs_offerte_gte))
            
        if prijs_offerte_in is not None:
            
            _query_params.append(('prijsOfferte[in]', prijs_offerte_in))
            
        if prijs_offerte_isnull is not None:
            
            _query_params.append(('prijsOfferte[isnull]', prijs_offerte_isnull))
            
        if prijs_offerte_lt is not None:
            
            _query_params.append(('prijsOfferte[lt]', prijs_offerte_lt))
            
        if prijs_offerte_lte is not None:
            
            _query_params.append(('prijsOfferte[lte]', prijs_offerte_lte))
            
        if prijs_offerte_not is not None:
            
            _query_params.append(('prijsOfferte[not]', prijs_offerte_not))
            
        if prijs_gt is not None:
            
            _query_params.append(('prijs[gt]', prijs_gt))
            
        if prijs_gte is not None:
            
            _query_params.append(('prijs[gte]', prijs_gte))
            
        if prijs_in is not None:
            
            _query_params.append(('prijs[in]', prijs_in))
            
        if prijs_isnull is not None:
            
            _query_params.append(('prijs[isnull]', prijs_isnull))
            
        if prijs_lt is not None:
            
            _query_params.append(('prijs[lt]', prijs_lt))
            
        if prijs_lte is not None:
            
            _query_params.append(('prijs[lte]', prijs_lte))
            
        if prijs_not is not None:
            
            _query_params.append(('prijs[not]', prijs_not))
            
        if prioriteit_naam is not None:
            
            _query_params.append(('prioriteitNaam', prioriteit_naam))
            
        if prioriteit_naam_in is not None:
            
            _query_params.append(('prioriteitNaam[in]', prioriteit_naam_in))
            
        if prioriteit_naam_isempty is not None:
            
            _query_params.append(('prioriteitNaam[isempty]', prioriteit_naam_isempty))
            
        if prioriteit_naam_isnull is not None:
            
            _query_params.append(('prioriteitNaam[isnull]', prioriteit_naam_isnull))
            
        if prioriteit_naam_like is not None:
            
            _query_params.append(('prioriteitNaam[like]', prioriteit_naam_like))
            
        if prioriteit_naam_not is not None:
            
            _query_params.append(('prioriteitNaam[not]', prioriteit_naam_not))
            
        if prioriteit_opmerking is not None:
            
            _query_params.append(('prioriteitOpmerking', prioriteit_opmerking))
            
        if prioriteit_opmerking_in is not None:
            
            _query_params.append(('prioriteitOpmerking[in]', prioriteit_opmerking_in))
            
        if prioriteit_opmerking_isempty is not None:
            
            _query_params.append(('prioriteitOpmerking[isempty]', prioriteit_opmerking_isempty))
            
        if prioriteit_opmerking_isnull is not None:
            
            _query_params.append(('prioriteitOpmerking[isnull]', prioriteit_opmerking_isnull))
            
        if prioriteit_opmerking_like is not None:
            
            _query_params.append(('prioriteitOpmerking[like]', prioriteit_opmerking_like))
            
        if prioriteit_opmerking_not is not None:
            
            _query_params.append(('prioriteitOpmerking[not]', prioriteit_opmerking_not))
            
        if prioriteit_responstijd is not None:
            
            _query_params.append(('prioriteitResponstijd', prioriteit_responstijd))
            
        if prioriteit_responstijd_gt is not None:
            
            _query_params.append(('prioriteitResponstijd[gt]', prioriteit_responstijd_gt))
            
        if prioriteit_responstijd_gte is not None:
            
            _query_params.append(('prioriteitResponstijd[gte]', prioriteit_responstijd_gte))
            
        if prioriteit_responstijd_in is not None:
            
            _query_params.append(('prioriteitResponstijd[in]', prioriteit_responstijd_in))
            
        if prioriteit_responstijd_isnull is not None:
            
            _query_params.append(('prioriteitResponstijd[isnull]', prioriteit_responstijd_isnull))
            
        if prioriteit_responstijd_lt is not None:
            
            _query_params.append(('prioriteitResponstijd[lt]', prioriteit_responstijd_lt))
            
        if prioriteit_responstijd_lte is not None:
            
            _query_params.append(('prioriteitResponstijd[lte]', prioriteit_responstijd_lte))
            
        if prioriteit_responstijd_not is not None:
            
            _query_params.append(('prioriteitResponstijd[not]', prioriteit_responstijd_not))
            
        if probleem is not None:
            
            _query_params.append(('probleem', probleem))
            
        if probleem_module_naam is not None:
            
            _query_params.append(('probleemModuleNaam', probleem_module_naam))
            
        if probleem_module_naam_contains is not None:
            
            _query_params.append(('probleemModuleNaam[contains]', probleem_module_naam_contains))
            
        if probleem_contains is not None:
            
            _query_params.append(('probleem[contains]', probleem_contains))
            
        if rangorde_nummer_tickettype is not None:
            
            _query_params.append(('rangordeNummerTickettype', rangorde_nummer_tickettype))
            
        if rangorde_nummer_tickettype_gt is not None:
            
            _query_params.append(('rangordeNummerTickettype[gt]', rangorde_nummer_tickettype_gt))
            
        if rangorde_nummer_tickettype_gte is not None:
            
            _query_params.append(('rangordeNummerTickettype[gte]', rangorde_nummer_tickettype_gte))
            
        if rangorde_nummer_tickettype_in is not None:
            
            _query_params.append(('rangordeNummerTickettype[in]', rangorde_nummer_tickettype_in))
            
        if rangorde_nummer_tickettype_isnull is not None:
            
            _query_params.append(('rangordeNummerTickettype[isnull]', rangorde_nummer_tickettype_isnull))
            
        if rangorde_nummer_tickettype_lt is not None:
            
            _query_params.append(('rangordeNummerTickettype[lt]', rangorde_nummer_tickettype_lt))
            
        if rangorde_nummer_tickettype_lte is not None:
            
            _query_params.append(('rangordeNummerTickettype[lte]', rangorde_nummer_tickettype_lte))
            
        if rangorde_nummer_tickettype_not is not None:
            
            _query_params.append(('rangordeNummerTickettype[not]', rangorde_nummer_tickettype_not))
            
        if reden_afgewezen is not None:
            
            _query_params.append(('redenAfgewezen', reden_afgewezen))
            
        if reden_afgewezen_in is not None:
            
            _query_params.append(('redenAfgewezen[in]', reden_afgewezen_in))
            
        if reden_afgewezen_isempty is not None:
            
            _query_params.append(('redenAfgewezen[isempty]', reden_afgewezen_isempty))
            
        if reden_afgewezen_isnull is not None:
            
            _query_params.append(('redenAfgewezen[isnull]', reden_afgewezen_isnull))
            
        if reden_afgewezen_like is not None:
            
            _query_params.append(('redenAfgewezen[like]', reden_afgewezen_like))
            
        if reden_afgewezen_not is not None:
            
            _query_params.append(('redenAfgewezen[not]', reden_afgewezen_not))
            
        if referentienummer_leverancier is not None:
            
            _query_params.append(('referentienummerLeverancier', referentienummer_leverancier))
            
        if referentienummer_leverancier_in is not None:
            
            _query_params.append(('referentienummerLeverancier[in]', referentienummer_leverancier_in))
            
        if referentienummer_leverancier_isempty is not None:
            
            _query_params.append(('referentienummerLeverancier[isempty]', referentienummer_leverancier_isempty))
            
        if referentienummer_leverancier_isnull is not None:
            
            _query_params.append(('referentienummerLeverancier[isnull]', referentienummer_leverancier_isnull))
            
        if referentienummer_leverancier_like is not None:
            
            _query_params.append(('referentienummerLeverancier[like]', referentienummer_leverancier_like))
            
        if referentienummer_leverancier_not is not None:
            
            _query_params.append(('referentienummerLeverancier[not]', referentienummer_leverancier_not))
            
        if ticketstatus is not None:
            
            _query_params.append(('ticketstatus', ticketstatus))
            
        if ticketstatus_in is not None:
            
            _query_params.append(('ticketstatus[in]', ticketstatus_in))
            
        if ticketstatus_isempty is not None:
            
            _query_params.append(('ticketstatus[isempty]', ticketstatus_isempty))
            
        if ticketstatus_isnull is not None:
            
            _query_params.append(('ticketstatus[isnull]', ticketstatus_isnull))
            
        if ticketstatus_like is not None:
            
            _query_params.append(('ticketstatus[like]', ticketstatus_like))
            
        if ticketstatus_not is not None:
            
            _query_params.append(('ticketstatus[not]', ticketstatus_not))
            
        if tickettype is not None:
            
            _query_params.append(('tickettype', tickettype))
            
        if tickettype_in is not None:
            
            _query_params.append(('tickettype[in]', tickettype_in))
            
        if tickettype_isempty is not None:
            
            _query_params.append(('tickettype[isempty]', tickettype_isempty))
            
        if tickettype_isnull is not None:
            
            _query_params.append(('tickettype[isnull]', tickettype_isnull))
            
        if tickettype_like is not None:
            
            _query_params.append(('tickettype[like]', tickettype_like))
            
        if tickettype_not is not None:
            
            _query_params.append(('tickettype[not]', tickettype_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/ticket',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    async def huishoudelijkafval_ticket_retrieve2(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Huishoudelijkafvalticket:
        """huishoudelijkafval_ticket_retrieve2


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id2: Identificerend kenmerk van het ticket.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_retrieve2_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalticket",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_ticket_retrieve2_with_http_info(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Huishoudelijkafvalticket]:
        """huishoudelijkafval_ticket_retrieve2


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id2: Identificerend kenmerk van het ticket.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_retrieve2_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalticket",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_ticket_retrieve2_without_preload_content(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        container_id: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding objecttype")] = None,
        container_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        container_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        container_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        container_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        container_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        containerlocatie_id: Annotated[Optional[StrictStr], Field(description="Identificerend kenmerk van de put waarin de container is geplaatst")] = None,
        containerlocatie_id_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        containerlocatie_id_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        containerlocatie_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        containerlocatie_id_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        containerlocatie_id_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_afgerond: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.")] = None,
        datum_afgerond_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgerond_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgerond_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgerond_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen: Annotated[Optional[datetime], Field(description="De datum waarop het ticket de status 'afgewezen' krijgt.")] = None,
        datum_afgewezen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_afgewezen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_afgewezen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie: Annotated[Optional[datetime], Field(description="De datum waarop het ticket aangemaakt is.")] = None,
        datum_creatie_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_creatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_creatie_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_creatie_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur: Annotated[Optional[datetime], Field(description="De datum waarop het ticket gefactureerd is.")] = None,
        datum_factuur_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_factuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_factuur_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_factuur_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_financiele_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_financiele_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_financiele_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_financiele_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd: Annotated[Optional[datetime], Field(description="De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.")] = None,
        datum_geaccepteerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_geaccepteerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_geaccepteerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_geaccepteerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd: Annotated[Optional[datetime], Field(description="De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.")] = None,
        datum_gefactureerd_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gefactureerd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gefactureerd_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gefactureerd_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland: Annotated[Optional[datetime], Field(description="De datum waarop de uitvoering van de werkzaamheden is ingepland.")] = None,
        datum_gepland_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gepland_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gepland_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed: Annotated[Optional[datetime], Field(description="De datum waarop de werkzaamheden uitgevoerd zijn.")] = None,
        datum_gereed_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_gereed_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_gereed_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_gereed_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte: Annotated[Optional[datetime], Field(description="De datum waarop de offerte is aangemaakt .")] = None,
        datum_offerte_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_offerte_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_offerte_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring: Annotated[Optional[datetime], Field(description="De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.")] = None,
        datum_technische_goedkeuring_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_technische_goedkeuring_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_technische_goedkeuring_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_technische_goedkeuring_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging: Annotated[Optional[datetime], Field(description="De datum waarop het ticket is gewijzigd.")] = None,
        datum_wijziging_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_wijziging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_wijziging_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_wijziging_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start: Annotated[Optional[datetime], Field(description="De datum waarop de workflow start.")] = None,
        datum_workflow_start_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_workflow_start_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_workflow_start_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_workflow_start_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        doorlooptijd: Annotated[Optional[StrictStr], Field(description="De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.")] = None,
        doorlooptijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        doorlooptijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        doorlooptijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        doorlooptijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        doorlooptijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        eigenaar: Annotated[Optional[StrictStr], Field(description="De naam van de eigenaar van de container.")] = None,
        eigenaar_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        eigenaar_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        eigenaar_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        eigenaar_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        eigenaar_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        factuur_nummer: Annotated[Optional[StrictStr], Field(description="Het nummer van de factuur.")] = None,
        factuur_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        factuur_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        factuur_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        factuur_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        factuur_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code.")] = None,
        gbd_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_buurt_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_buurt_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_buurt_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_buurt_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_buurt_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_buurt_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_buurt_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_buurt_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_ggw_volgnummer: Annotated[Optional[StrictStr], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_ggw_volgnummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_ggw_volgnummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_ggw_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_ggw_volgnummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_ggw_volgnummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_stadsdeel_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_stadsdeel_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_stadsdeel_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_stadsdeel_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_stadsdeel_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_stadsdeel_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_stadsdeel_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        gbd_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gbd_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object.")] = None,
        gbd_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gbd_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gbd_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gbd_wijk_volgnummer: Annotated[Optional[StrictInt], Field(description="Uniek volgnummer van de toestand van het object.")] = None,
        gbd_wijk_volgnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        gbd_wijk_volgnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        gbd_wijk_volgnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gbd_wijk_volgnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gbd_wijk_volgnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        gbd_wijk_volgnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        gbd_wijk_volgnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Identificerend kenmerk van het ticket.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        items_definitief: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.")] = None,
        items_definitief_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_definitief_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_definitief_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_definitief_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_definitief_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        items_offerte: Annotated[Optional[StrictStr], Field(description="De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.")] = None,
        items_offerte_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        items_offerte_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        items_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        items_offerte_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        items_offerte_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        onderhoudsbedrijf: Annotated[Optional[StrictStr], Field(description="De naam van het onderhoudsbedrijf.")] = None,
        onderhoudsbedrijf_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        onderhoudsbedrijf_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        onderhoudsbedrijf_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        onderhoudsbedrijf_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        onderhoudsbedrijf_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        oorzaak: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oorzaak_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        oplossing: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        oplossing_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        prijs: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.")] = None,
        prijs_offerte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.")] = None,
        prijs_offerte_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_offerte_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_offerte_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_offerte_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_offerte_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_offerte_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_offerte_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prijs_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        prijs_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        prijs_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prijs_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prijs_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        prijs_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        prijs_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        prioriteit_naam: Annotated[Optional[StrictStr], Field(description="De naam die de soort prioriteit weergeeft.")] = None,
        prioriteit_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_opmerking: Annotated[Optional[StrictStr], Field(description="Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.")] = None,
        prioriteit_opmerking_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_opmerking_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        prioriteit_opmerking_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_opmerking_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        prioriteit_opmerking_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        prioriteit_responstijd: Annotated[Optional[StrictInt], Field(description="De toegestane responsetijd voor deze prioriteit. ")] = None,
        prioriteit_responstijd_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        prioriteit_responstijd_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        prioriteit_responstijd_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        prioriteit_responstijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        prioriteit_responstijd_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        prioriteit_responstijd_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        prioriteit_responstijd_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        probleem: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam: Annotated[Optional[List[StrictStr]], Field(description="Exact; val1,val2")] = None,
        probleem_module_naam_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        probleem_contains: Annotated[Optional[List[StrictStr]], Field(description="Matches values from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype: Annotated[Optional[StrictInt], Field(description="Het rangordenummer van het type ticket.")] = None,
        rangorde_nummer_tickettype_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        rangorde_nummer_tickettype_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        rangorde_nummer_tickettype_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        rangorde_nummer_tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        rangorde_nummer_tickettype_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        rangorde_nummer_tickettype_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        rangorde_nummer_tickettype_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        reden_afgewezen: Annotated[Optional[StrictStr], Field(description="De reden waarom het ticket de status 'afgewezen' heeft gekregen.")] = None,
        reden_afgewezen_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        reden_afgewezen_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        reden_afgewezen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        reden_afgewezen_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        reden_afgewezen_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        referentienummer_leverancier: Annotated[Optional[StrictStr], Field(description="Het referentienummer dat door de leverancier aan het ticket gegeven wordt.")] = None,
        referentienummer_leverancier_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        referentienummer_leverancier_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        referentienummer_leverancier_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        referentienummer_leverancier_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        referentienummer_leverancier_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        ticketstatus: Annotated[Optional[StrictStr], Field(description="De status van het ticket.")] = None,
        ticketstatus_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        ticketstatus_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        ticketstatus_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        ticketstatus_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        ticketstatus_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        tickettype: Annotated[Optional[StrictStr], Field(description="De naam van het type ticket.")] = None,
        tickettype_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        tickettype_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        tickettype_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        tickettype_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        tickettype_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_ticket_retrieve2


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param container_id: Unieke aanduiding objecttype
        :type container_id: str
        :param container_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type container_id_in: List[str]
        :param container_id_isempty: Whether the field is empty or not.
        :type container_id_isempty: bool
        :param container_id_isnull: Whether the field has a NULL value or not.
        :type container_id_isnull: bool
        :param container_id_like: Matches text using wildcards (? and *).
        :type container_id_like: str
        :param container_id_not: Exclude matches; text
        :type container_id_not: List[str]
        :param containerlocatie_id: Identificerend kenmerk van de put waarin de container is geplaatst
        :type containerlocatie_id: str
        :param containerlocatie_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type containerlocatie_id_in: List[str]
        :param containerlocatie_id_isempty: Whether the field is empty or not.
        :type containerlocatie_id_isempty: bool
        :param containerlocatie_id_isnull: Whether the field has a NULL value or not.
        :type containerlocatie_id_isnull: bool
        :param containerlocatie_id_like: Matches text using wildcards (? and *).
        :type containerlocatie_id_like: str
        :param containerlocatie_id_not: Exclude matches; text
        :type containerlocatie_id_not: List[str]
        :param datum_afgerond: De datum waarop de werkzaamheden als gereed aangegeven zijn door het onderhoudsbedrijf.
        :type datum_afgerond: datetime
        :param datum_afgerond_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gt: datetime
        :param datum_afgerond_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_gte: datetime
        :param datum_afgerond_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgerond_in: List[datetime]
        :param datum_afgerond_isnull: Whether the field has a NULL value or not.
        :type datum_afgerond_isnull: bool
        :param datum_afgerond_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lt: datetime
        :param datum_afgerond_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_lte: datetime
        :param datum_afgerond_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgerond_not: List[datetime]
        :param datum_afgewezen: De datum waarop het ticket de status 'afgewezen' krijgt.
        :type datum_afgewezen: datetime
        :param datum_afgewezen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gt: datetime
        :param datum_afgewezen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_gte: datetime
        :param datum_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_afgewezen_in: List[datetime]
        :param datum_afgewezen_isnull: Whether the field has a NULL value or not.
        :type datum_afgewezen_isnull: bool
        :param datum_afgewezen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lt: datetime
        :param datum_afgewezen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_lte: datetime
        :param datum_afgewezen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_afgewezen_not: List[datetime]
        :param datum_creatie: De datum waarop het ticket aangemaakt is.
        :type datum_creatie: datetime
        :param datum_creatie_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gt: datetime
        :param datum_creatie_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_gte: datetime
        :param datum_creatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_creatie_in: List[datetime]
        :param datum_creatie_isnull: Whether the field has a NULL value or not.
        :type datum_creatie_isnull: bool
        :param datum_creatie_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lt: datetime
        :param datum_creatie_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_lte: datetime
        :param datum_creatie_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_creatie_not: List[datetime]
        :param datum_factuur: De datum waarop het ticket gefactureerd is.
        :type datum_factuur: datetime
        :param datum_factuur_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gt: datetime
        :param datum_factuur_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_gte: datetime
        :param datum_factuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_factuur_in: List[datetime]
        :param datum_factuur_isnull: Whether the field has a NULL value or not.
        :type datum_factuur_isnull: bool
        :param datum_factuur_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lt: datetime
        :param datum_factuur_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_lte: datetime
        :param datum_factuur_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_factuur_not: List[datetime]
        :param datum_financiele_goedkeuring: De datum waarop de financiale aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_financiele_goedkeuring: datetime
        :param datum_financiele_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gt: datetime
        :param datum_financiele_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_gte: datetime
        :param datum_financiele_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_financiele_goedkeuring_in: List[datetime]
        :param datum_financiele_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_financiele_goedkeuring_isnull: bool
        :param datum_financiele_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lt: datetime
        :param datum_financiele_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_lte: datetime
        :param datum_financiele_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_financiele_goedkeuring_not: List[datetime]
        :param datum_geaccepteerd: De datum waarop het ticket geaccepteerd is door het onderhoudsbedrijf.
        :type datum_geaccepteerd: datetime
        :param datum_geaccepteerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gt: datetime
        :param datum_geaccepteerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_gte: datetime
        :param datum_geaccepteerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_geaccepteerd_in: List[datetime]
        :param datum_geaccepteerd_isnull: Whether the field has a NULL value or not.
        :type datum_geaccepteerd_isnull: bool
        :param datum_geaccepteerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lt: datetime
        :param datum_geaccepteerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_lte: datetime
        :param datum_geaccepteerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_geaccepteerd_not: List[datetime]
        :param datum_gefactureerd: De datum waarop de factuur in het systeem de status 'gefactureerd' krijgt.
        :type datum_gefactureerd: datetime
        :param datum_gefactureerd_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gt: datetime
        :param datum_gefactureerd_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_gte: datetime
        :param datum_gefactureerd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gefactureerd_in: List[datetime]
        :param datum_gefactureerd_isnull: Whether the field has a NULL value or not.
        :type datum_gefactureerd_isnull: bool
        :param datum_gefactureerd_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lt: datetime
        :param datum_gefactureerd_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_lte: datetime
        :param datum_gefactureerd_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gefactureerd_not: List[datetime]
        :param datum_gepland: De datum waarop de uitvoering van de werkzaamheden is ingepland.
        :type datum_gepland: datetime
        :param datum_gepland_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gt: datetime
        :param datum_gepland_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_gte: datetime
        :param datum_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gepland_in: List[datetime]
        :param datum_gepland_isnull: Whether the field has a NULL value or not.
        :type datum_gepland_isnull: bool
        :param datum_gepland_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lt: datetime
        :param datum_gepland_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_lte: datetime
        :param datum_gepland_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gepland_not: List[datetime]
        :param datum_gereed: De datum waarop de werkzaamheden uitgevoerd zijn.
        :type datum_gereed: datetime
        :param datum_gereed_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gt: datetime
        :param datum_gereed_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_gte: datetime
        :param datum_gereed_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_gereed_in: List[datetime]
        :param datum_gereed_isnull: Whether the field has a NULL value or not.
        :type datum_gereed_isnull: bool
        :param datum_gereed_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lt: datetime
        :param datum_gereed_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_lte: datetime
        :param datum_gereed_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_gereed_not: List[datetime]
        :param datum_offerte: De datum waarop de offerte is aangemaakt .
        :type datum_offerte: datetime
        :param datum_offerte_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gt: datetime
        :param datum_offerte_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_gte: datetime
        :param datum_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_offerte_in: List[datetime]
        :param datum_offerte_isnull: Whether the field has a NULL value or not.
        :type datum_offerte_isnull: bool
        :param datum_offerte_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lt: datetime
        :param datum_offerte_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_lte: datetime
        :param datum_offerte_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_offerte_not: List[datetime]
        :param datum_technische_goedkeuring: De datum waarop de technische aspecten van de werkzaamheden goed- of afgekeurd zijn.
        :type datum_technische_goedkeuring: datetime
        :param datum_technische_goedkeuring_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gt: datetime
        :param datum_technische_goedkeuring_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_gte: datetime
        :param datum_technische_goedkeuring_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_technische_goedkeuring_in: List[datetime]
        :param datum_technische_goedkeuring_isnull: Whether the field has a NULL value or not.
        :type datum_technische_goedkeuring_isnull: bool
        :param datum_technische_goedkeuring_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lt: datetime
        :param datum_technische_goedkeuring_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_lte: datetime
        :param datum_technische_goedkeuring_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_technische_goedkeuring_not: List[datetime]
        :param datum_wijziging: De datum waarop het ticket is gewijzigd.
        :type datum_wijziging: datetime
        :param datum_wijziging_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gt: datetime
        :param datum_wijziging_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_gte: datetime
        :param datum_wijziging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_wijziging_in: List[datetime]
        :param datum_wijziging_isnull: Whether the field has a NULL value or not.
        :type datum_wijziging_isnull: bool
        :param datum_wijziging_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lt: datetime
        :param datum_wijziging_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_lte: datetime
        :param datum_wijziging_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_wijziging_not: List[datetime]
        :param datum_workflow_start: De datum waarop de workflow start.
        :type datum_workflow_start: datetime
        :param datum_workflow_start_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gt: datetime
        :param datum_workflow_start_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_gte: datetime
        :param datum_workflow_start_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_workflow_start_in: List[datetime]
        :param datum_workflow_start_isnull: Whether the field has a NULL value or not.
        :type datum_workflow_start_isnull: bool
        :param datum_workflow_start_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lt: datetime
        :param datum_workflow_start_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_lte: datetime
        :param datum_workflow_start_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_workflow_start_not: List[datetime]
        :param doorlooptijd: De tijdsspanne in werkdagen tussen de 'datumCreatie'en de 'datumAfgerond' of de tijdsspanne in werkdagen tussen de 'datumCreatie' en de laatste statuswijziging in het geval het ticket nog niet afgerond is.
        :type doorlooptijd: str
        :param doorlooptijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type doorlooptijd_in: List[str]
        :param doorlooptijd_isempty: Whether the field is empty or not.
        :type doorlooptijd_isempty: bool
        :param doorlooptijd_isnull: Whether the field has a NULL value or not.
        :type doorlooptijd_isnull: bool
        :param doorlooptijd_like: Matches text using wildcards (? and *).
        :type doorlooptijd_like: str
        :param doorlooptijd_not: Exclude matches; text
        :type doorlooptijd_not: List[str]
        :param eigenaar: De naam van de eigenaar van de container.
        :type eigenaar: str
        :param eigenaar_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type eigenaar_in: List[str]
        :param eigenaar_isempty: Whether the field is empty or not.
        :type eigenaar_isempty: bool
        :param eigenaar_isnull: Whether the field has a NULL value or not.
        :type eigenaar_isnull: bool
        :param eigenaar_like: Matches text using wildcards (? and *).
        :type eigenaar_like: str
        :param eigenaar_not: Exclude matches; text
        :type eigenaar_not: List[str]
        :param factuur_nummer: Het nummer van de factuur.
        :type factuur_nummer: str
        :param factuur_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type factuur_nummer_in: List[str]
        :param factuur_nummer_isempty: Whether the field is empty or not.
        :type factuur_nummer_isempty: bool
        :param factuur_nummer_isnull: Whether the field has a NULL value or not.
        :type factuur_nummer_isnull: bool
        :param factuur_nummer_like: Matches text using wildcards (? and *).
        :type factuur_nummer_like: str
        :param factuur_nummer_not: Exclude matches; text
        :type factuur_nummer_not: List[str]
        :param gbd_buurt_identificatie: Unieke identificatie van het object
        :type gbd_buurt_identificatie: str
        :param gbd_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_identificatie_in: List[str]
        :param gbd_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gbd_buurt_identificatie_isempty: bool
        :param gbd_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_identificatie_isnull: bool
        :param gbd_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_buurt_identificatie_like: str
        :param gbd_buurt_identificatie_not: Exclude matches; text
        :type gbd_buurt_identificatie_not: List[str]
        :param gbd_buurt_code: Unieke code.
        :type gbd_buurt_code: str
        :param gbd_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_code_in: List[str]
        :param gbd_buurt_code_isempty: Whether the field is empty or not.
        :type gbd_buurt_code_isempty: bool
        :param gbd_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_code_isnull: bool
        :param gbd_buurt_code_like: Matches text using wildcards (? and *).
        :type gbd_buurt_code_like: str
        :param gbd_buurt_code_not: Exclude matches; text
        :type gbd_buurt_code_not: List[str]
        :param gbd_buurt_naam: De naam van het object.
        :type gbd_buurt_naam: str
        :param gbd_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_naam_in: List[str]
        :param gbd_buurt_naam_isempty: Whether the field is empty or not.
        :type gbd_buurt_naam_isempty: bool
        :param gbd_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_naam_isnull: bool
        :param gbd_buurt_naam_like: Matches text using wildcards (? and *).
        :type gbd_buurt_naam_like: str
        :param gbd_buurt_naam_not: Exclude matches; text
        :type gbd_buurt_naam_not: List[str]
        :param gbd_buurt_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_buurt_volgnummer: int
        :param gbd_buurt_volgnummer_gt: Greater than; number
        :type gbd_buurt_volgnummer_gt: int
        :param gbd_buurt_volgnummer_gte: Greater than or equal to; number
        :type gbd_buurt_volgnummer_gte: int
        :param gbd_buurt_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_buurt_volgnummer_in: List[int]
        :param gbd_buurt_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_buurt_volgnummer_isnull: bool
        :param gbd_buurt_volgnummer_lt: Less than; number
        :type gbd_buurt_volgnummer_lt: int
        :param gbd_buurt_volgnummer_lte: Less than or equal to; number
        :type gbd_buurt_volgnummer_lte: int
        :param gbd_buurt_volgnummer_not: Exclude matches; number
        :type gbd_buurt_volgnummer_not: List[int]
        :param gbd_ggw_identificatie: Unieke identificatie van het object
        :type gbd_ggw_identificatie: str
        :param gbd_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_identificatie_in: List[str]
        :param gbd_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gbd_ggw_identificatie_isempty: bool
        :param gbd_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_identificatie_isnull: bool
        :param gbd_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_ggw_identificatie_like: str
        :param gbd_ggw_identificatie_not: Exclude matches; text
        :type gbd_ggw_identificatie_not: List[str]
        :param gbd_ggw_naam: De naam van het object.
        :type gbd_ggw_naam: str
        :param gbd_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_naam_in: List[str]
        :param gbd_ggw_naam_isempty: Whether the field is empty or not.
        :type gbd_ggw_naam_isempty: bool
        :param gbd_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_naam_isnull: bool
        :param gbd_ggw_naam_like: Matches text using wildcards (? and *).
        :type gbd_ggw_naam_like: str
        :param gbd_ggw_naam_not: Exclude matches; text
        :type gbd_ggw_naam_not: List[str]
        :param gbd_ggw_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_ggw_volgnummer: str
        :param gbd_ggw_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_ggw_volgnummer_in: List[str]
        :param gbd_ggw_volgnummer_isempty: Whether the field is empty or not.
        :type gbd_ggw_volgnummer_isempty: bool
        :param gbd_ggw_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_ggw_volgnummer_isnull: bool
        :param gbd_ggw_volgnummer_like: Matches text using wildcards (? and *).
        :type gbd_ggw_volgnummer_like: str
        :param gbd_ggw_volgnummer_not: Exclude matches; text
        :type gbd_ggw_volgnummer_not: List[str]
        :param gbd_stadsdeel_identificatie: Unieke identificatie van het object
        :type gbd_stadsdeel_identificatie: str
        :param gbd_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_identificatie_in: List[str]
        :param gbd_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_identificatie_isempty: bool
        :param gbd_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_identificatie_isnull: bool
        :param gbd_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_identificatie_like: str
        :param gbd_stadsdeel_identificatie_not: Exclude matches; text
        :type gbd_stadsdeel_identificatie_not: List[str]
        :param gbd_stadsdeel_naam: De naam van het object.
        :type gbd_stadsdeel_naam: str
        :param gbd_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_naam_in: List[str]
        :param gbd_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gbd_stadsdeel_naam_isempty: bool
        :param gbd_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_naam_isnull: bool
        :param gbd_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gbd_stadsdeel_naam_like: str
        :param gbd_stadsdeel_naam_not: Exclude matches; text
        :type gbd_stadsdeel_naam_not: List[str]
        :param gbd_stadsdeel_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_stadsdeel_volgnummer: int
        :param gbd_stadsdeel_volgnummer_gt: Greater than; number
        :type gbd_stadsdeel_volgnummer_gt: int
        :param gbd_stadsdeel_volgnummer_gte: Greater than or equal to; number
        :type gbd_stadsdeel_volgnummer_gte: int
        :param gbd_stadsdeel_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_stadsdeel_volgnummer_in: List[int]
        :param gbd_stadsdeel_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_stadsdeel_volgnummer_isnull: bool
        :param gbd_stadsdeel_volgnummer_lt: Less than; number
        :type gbd_stadsdeel_volgnummer_lt: int
        :param gbd_stadsdeel_volgnummer_lte: Less than or equal to; number
        :type gbd_stadsdeel_volgnummer_lte: int
        :param gbd_stadsdeel_volgnummer_not: Exclude matches; number
        :type gbd_stadsdeel_volgnummer_not: List[int]
        :param gbd_wijk_identificatie: Unieke identificatie van het object
        :type gbd_wijk_identificatie: str
        :param gbd_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_identificatie_in: List[str]
        :param gbd_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gbd_wijk_identificatie_isempty: bool
        :param gbd_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_identificatie_isnull: bool
        :param gbd_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gbd_wijk_identificatie_like: str
        :param gbd_wijk_identificatie_not: Exclude matches; text
        :type gbd_wijk_identificatie_not: List[str]
        :param gbd_wijk_naam: De naam van het object.
        :type gbd_wijk_naam: str
        :param gbd_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_naam_in: List[str]
        :param gbd_wijk_naam_isempty: Whether the field is empty or not.
        :type gbd_wijk_naam_isempty: bool
        :param gbd_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_naam_isnull: bool
        :param gbd_wijk_naam_like: Matches text using wildcards (? and *).
        :type gbd_wijk_naam_like: str
        :param gbd_wijk_naam_not: Exclude matches; text
        :type gbd_wijk_naam_not: List[str]
        :param gbd_wijk_volgnummer: Uniek volgnummer van de toestand van het object.
        :type gbd_wijk_volgnummer: int
        :param gbd_wijk_volgnummer_gt: Greater than; number
        :type gbd_wijk_volgnummer_gt: int
        :param gbd_wijk_volgnummer_gte: Greater than or equal to; number
        :type gbd_wijk_volgnummer_gte: int
        :param gbd_wijk_volgnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gbd_wijk_volgnummer_in: List[int]
        :param gbd_wijk_volgnummer_isnull: Whether the field has a NULL value or not.
        :type gbd_wijk_volgnummer_isnull: bool
        :param gbd_wijk_volgnummer_lt: Less than; number
        :type gbd_wijk_volgnummer_lt: int
        :param gbd_wijk_volgnummer_lte: Less than or equal to; number
        :type gbd_wijk_volgnummer_lte: int
        :param gbd_wijk_volgnummer_not: Exclude matches; number
        :type gbd_wijk_volgnummer_not: List[int]
        :param id2: Identificerend kenmerk van het ticket.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param items_definitief: De onderdelen en de werkzaamheden zoals deze op de factuur vermeld worden.
        :type items_definitief: str
        :param items_definitief_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_definitief_in: List[str]
        :param items_definitief_isempty: Whether the field is empty or not.
        :type items_definitief_isempty: bool
        :param items_definitief_isnull: Whether the field has a NULL value or not.
        :type items_definitief_isnull: bool
        :param items_definitief_like: Matches text using wildcards (? and *).
        :type items_definitief_like: str
        :param items_definitief_not: Exclude matches; text
        :type items_definitief_not: List[str]
        :param items_offerte: De onderdelen en de werkzaamheden zoals deze op de offerte vermeld worden.
        :type items_offerte: str
        :param items_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type items_offerte_in: List[str]
        :param items_offerte_isempty: Whether the field is empty or not.
        :type items_offerte_isempty: bool
        :param items_offerte_isnull: Whether the field has a NULL value or not.
        :type items_offerte_isnull: bool
        :param items_offerte_like: Matches text using wildcards (? and *).
        :type items_offerte_like: str
        :param items_offerte_not: Exclude matches; text
        :type items_offerte_not: List[str]
        :param onderhoudsbedrijf: De naam van het onderhoudsbedrijf.
        :type onderhoudsbedrijf: str
        :param onderhoudsbedrijf_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type onderhoudsbedrijf_in: List[str]
        :param onderhoudsbedrijf_isempty: Whether the field is empty or not.
        :type onderhoudsbedrijf_isempty: bool
        :param onderhoudsbedrijf_isnull: Whether the field has a NULL value or not.
        :type onderhoudsbedrijf_isnull: bool
        :param onderhoudsbedrijf_like: Matches text using wildcards (? and *).
        :type onderhoudsbedrijf_like: str
        :param onderhoudsbedrijf_not: Exclude matches; text
        :type onderhoudsbedrijf_not: List[str]
        :param oorzaak: Exact; val1,val2
        :type oorzaak: List[str]
        :param oorzaak_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oorzaak_contains: List[str]
        :param oplossing: Exact; val1,val2
        :type oplossing: List[str]
        :param oplossing_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type oplossing_contains: List[str]
        :param prijs: De totale prijs van de gebruikte onderdelen en de uitgevoerde werkzaamheden.
        :type prijs: float
        :param prijs_offerte: De totale prijs op de offerte voor de te gebruiken onderdelen en de uit te voeren werkzaamheden.
        :type prijs_offerte: float
        :param prijs_offerte_gt: Greater than; number
        :type prijs_offerte_gt: float
        :param prijs_offerte_gte: Greater than or equal to; number
        :type prijs_offerte_gte: float
        :param prijs_offerte_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_offerte_in: List[float]
        :param prijs_offerte_isnull: Whether the field has a NULL value or not.
        :type prijs_offerte_isnull: bool
        :param prijs_offerte_lt: Less than; number
        :type prijs_offerte_lt: float
        :param prijs_offerte_lte: Less than or equal to; number
        :type prijs_offerte_lte: float
        :param prijs_offerte_not: Exclude matches; number
        :type prijs_offerte_not: List[float]
        :param prijs_gt: Greater than; number
        :type prijs_gt: float
        :param prijs_gte: Greater than or equal to; number
        :type prijs_gte: float
        :param prijs_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prijs_in: List[float]
        :param prijs_isnull: Whether the field has a NULL value or not.
        :type prijs_isnull: bool
        :param prijs_lt: Less than; number
        :type prijs_lt: float
        :param prijs_lte: Less than or equal to; number
        :type prijs_lte: float
        :param prijs_not: Exclude matches; number
        :type prijs_not: List[float]
        :param prioriteit_naam: De naam die de soort prioriteit weergeeft.
        :type prioriteit_naam: str
        :param prioriteit_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_naam_in: List[str]
        :param prioriteit_naam_isempty: Whether the field is empty or not.
        :type prioriteit_naam_isempty: bool
        :param prioriteit_naam_isnull: Whether the field has a NULL value or not.
        :type prioriteit_naam_isnull: bool
        :param prioriteit_naam_like: Matches text using wildcards (? and *).
        :type prioriteit_naam_like: str
        :param prioriteit_naam_not: Exclude matches; text
        :type prioriteit_naam_not: List[str]
        :param prioriteit_opmerking: Een opmerking die toegevoegd wordt om de prioritering te verduidelijken.
        :type prioriteit_opmerking: str
        :param prioriteit_opmerking_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_opmerking_in: List[str]
        :param prioriteit_opmerking_isempty: Whether the field is empty or not.
        :type prioriteit_opmerking_isempty: bool
        :param prioriteit_opmerking_isnull: Whether the field has a NULL value or not.
        :type prioriteit_opmerking_isnull: bool
        :param prioriteit_opmerking_like: Matches text using wildcards (? and *).
        :type prioriteit_opmerking_like: str
        :param prioriteit_opmerking_not: Exclude matches; text
        :type prioriteit_opmerking_not: List[str]
        :param prioriteit_responstijd: De toegestane responsetijd voor deze prioriteit. 
        :type prioriteit_responstijd: int
        :param prioriteit_responstijd_gt: Greater than; number
        :type prioriteit_responstijd_gt: int
        :param prioriteit_responstijd_gte: Greater than or equal to; number
        :type prioriteit_responstijd_gte: int
        :param prioriteit_responstijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type prioriteit_responstijd_in: List[int]
        :param prioriteit_responstijd_isnull: Whether the field has a NULL value or not.
        :type prioriteit_responstijd_isnull: bool
        :param prioriteit_responstijd_lt: Less than; number
        :type prioriteit_responstijd_lt: int
        :param prioriteit_responstijd_lte: Less than or equal to; number
        :type prioriteit_responstijd_lte: int
        :param prioriteit_responstijd_not: Exclude matches; number
        :type prioriteit_responstijd_not: List[int]
        :param probleem: Exact; val1,val2
        :type probleem: List[str]
        :param probleem_module_naam: Exact; val1,val2
        :type probleem_module_naam: List[str]
        :param probleem_module_naam_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_module_naam_contains: List[str]
        :param probleem_contains: Matches values from a comma-separated list: val1,val2,valN.
        :type probleem_contains: List[str]
        :param rangorde_nummer_tickettype: Het rangordenummer van het type ticket.
        :type rangorde_nummer_tickettype: int
        :param rangorde_nummer_tickettype_gt: Greater than; number
        :type rangorde_nummer_tickettype_gt: int
        :param rangorde_nummer_tickettype_gte: Greater than or equal to; number
        :type rangorde_nummer_tickettype_gte: int
        :param rangorde_nummer_tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type rangorde_nummer_tickettype_in: List[int]
        :param rangorde_nummer_tickettype_isnull: Whether the field has a NULL value or not.
        :type rangorde_nummer_tickettype_isnull: bool
        :param rangorde_nummer_tickettype_lt: Less than; number
        :type rangorde_nummer_tickettype_lt: int
        :param rangorde_nummer_tickettype_lte: Less than or equal to; number
        :type rangorde_nummer_tickettype_lte: int
        :param rangorde_nummer_tickettype_not: Exclude matches; number
        :type rangorde_nummer_tickettype_not: List[int]
        :param reden_afgewezen: De reden waarom het ticket de status 'afgewezen' heeft gekregen.
        :type reden_afgewezen: str
        :param reden_afgewezen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type reden_afgewezen_in: List[str]
        :param reden_afgewezen_isempty: Whether the field is empty or not.
        :type reden_afgewezen_isempty: bool
        :param reden_afgewezen_isnull: Whether the field has a NULL value or not.
        :type reden_afgewezen_isnull: bool
        :param reden_afgewezen_like: Matches text using wildcards (? and *).
        :type reden_afgewezen_like: str
        :param reden_afgewezen_not: Exclude matches; text
        :type reden_afgewezen_not: List[str]
        :param referentienummer_leverancier: Het referentienummer dat door de leverancier aan het ticket gegeven wordt.
        :type referentienummer_leverancier: str
        :param referentienummer_leverancier_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type referentienummer_leverancier_in: List[str]
        :param referentienummer_leverancier_isempty: Whether the field is empty or not.
        :type referentienummer_leverancier_isempty: bool
        :param referentienummer_leverancier_isnull: Whether the field has a NULL value or not.
        :type referentienummer_leverancier_isnull: bool
        :param referentienummer_leverancier_like: Matches text using wildcards (? and *).
        :type referentienummer_leverancier_like: str
        :param referentienummer_leverancier_not: Exclude matches; text
        :type referentienummer_leverancier_not: List[str]
        :param ticketstatus: De status van het ticket.
        :type ticketstatus: str
        :param ticketstatus_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type ticketstatus_in: List[str]
        :param ticketstatus_isempty: Whether the field is empty or not.
        :type ticketstatus_isempty: bool
        :param ticketstatus_isnull: Whether the field has a NULL value or not.
        :type ticketstatus_isnull: bool
        :param ticketstatus_like: Matches text using wildcards (? and *).
        :type ticketstatus_like: str
        :param ticketstatus_not: Exclude matches; text
        :type ticketstatus_not: List[str]
        :param tickettype: De naam van het type ticket.
        :type tickettype: str
        :param tickettype_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type tickettype_in: List[str]
        :param tickettype_isempty: Whether the field is empty or not.
        :type tickettype_isempty: bool
        :param tickettype_isnull: Whether the field has a NULL value or not.
        :type tickettype_isnull: bool
        :param tickettype_like: Matches text using wildcards (? and *).
        :type tickettype_like: str
        :param tickettype_not: Exclude matches; text
        :type tickettype_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_ticket_retrieve2_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            container_id=container_id,
            container_id_in=container_id_in,
            container_id_isempty=container_id_isempty,
            container_id_isnull=container_id_isnull,
            container_id_like=container_id_like,
            container_id_not=container_id_not,
            containerlocatie_id=containerlocatie_id,
            containerlocatie_id_in=containerlocatie_id_in,
            containerlocatie_id_isempty=containerlocatie_id_isempty,
            containerlocatie_id_isnull=containerlocatie_id_isnull,
            containerlocatie_id_like=containerlocatie_id_like,
            containerlocatie_id_not=containerlocatie_id_not,
            datum_afgerond=datum_afgerond,
            datum_afgerond_gt=datum_afgerond_gt,
            datum_afgerond_gte=datum_afgerond_gte,
            datum_afgerond_in=datum_afgerond_in,
            datum_afgerond_isnull=datum_afgerond_isnull,
            datum_afgerond_lt=datum_afgerond_lt,
            datum_afgerond_lte=datum_afgerond_lte,
            datum_afgerond_not=datum_afgerond_not,
            datum_afgewezen=datum_afgewezen,
            datum_afgewezen_gt=datum_afgewezen_gt,
            datum_afgewezen_gte=datum_afgewezen_gte,
            datum_afgewezen_in=datum_afgewezen_in,
            datum_afgewezen_isnull=datum_afgewezen_isnull,
            datum_afgewezen_lt=datum_afgewezen_lt,
            datum_afgewezen_lte=datum_afgewezen_lte,
            datum_afgewezen_not=datum_afgewezen_not,
            datum_creatie=datum_creatie,
            datum_creatie_gt=datum_creatie_gt,
            datum_creatie_gte=datum_creatie_gte,
            datum_creatie_in=datum_creatie_in,
            datum_creatie_isnull=datum_creatie_isnull,
            datum_creatie_lt=datum_creatie_lt,
            datum_creatie_lte=datum_creatie_lte,
            datum_creatie_not=datum_creatie_not,
            datum_factuur=datum_factuur,
            datum_factuur_gt=datum_factuur_gt,
            datum_factuur_gte=datum_factuur_gte,
            datum_factuur_in=datum_factuur_in,
            datum_factuur_isnull=datum_factuur_isnull,
            datum_factuur_lt=datum_factuur_lt,
            datum_factuur_lte=datum_factuur_lte,
            datum_factuur_not=datum_factuur_not,
            datum_financiele_goedkeuring=datum_financiele_goedkeuring,
            datum_financiele_goedkeuring_gt=datum_financiele_goedkeuring_gt,
            datum_financiele_goedkeuring_gte=datum_financiele_goedkeuring_gte,
            datum_financiele_goedkeuring_in=datum_financiele_goedkeuring_in,
            datum_financiele_goedkeuring_isnull=datum_financiele_goedkeuring_isnull,
            datum_financiele_goedkeuring_lt=datum_financiele_goedkeuring_lt,
            datum_financiele_goedkeuring_lte=datum_financiele_goedkeuring_lte,
            datum_financiele_goedkeuring_not=datum_financiele_goedkeuring_not,
            datum_geaccepteerd=datum_geaccepteerd,
            datum_geaccepteerd_gt=datum_geaccepteerd_gt,
            datum_geaccepteerd_gte=datum_geaccepteerd_gte,
            datum_geaccepteerd_in=datum_geaccepteerd_in,
            datum_geaccepteerd_isnull=datum_geaccepteerd_isnull,
            datum_geaccepteerd_lt=datum_geaccepteerd_lt,
            datum_geaccepteerd_lte=datum_geaccepteerd_lte,
            datum_geaccepteerd_not=datum_geaccepteerd_not,
            datum_gefactureerd=datum_gefactureerd,
            datum_gefactureerd_gt=datum_gefactureerd_gt,
            datum_gefactureerd_gte=datum_gefactureerd_gte,
            datum_gefactureerd_in=datum_gefactureerd_in,
            datum_gefactureerd_isnull=datum_gefactureerd_isnull,
            datum_gefactureerd_lt=datum_gefactureerd_lt,
            datum_gefactureerd_lte=datum_gefactureerd_lte,
            datum_gefactureerd_not=datum_gefactureerd_not,
            datum_gepland=datum_gepland,
            datum_gepland_gt=datum_gepland_gt,
            datum_gepland_gte=datum_gepland_gte,
            datum_gepland_in=datum_gepland_in,
            datum_gepland_isnull=datum_gepland_isnull,
            datum_gepland_lt=datum_gepland_lt,
            datum_gepland_lte=datum_gepland_lte,
            datum_gepland_not=datum_gepland_not,
            datum_gereed=datum_gereed,
            datum_gereed_gt=datum_gereed_gt,
            datum_gereed_gte=datum_gereed_gte,
            datum_gereed_in=datum_gereed_in,
            datum_gereed_isnull=datum_gereed_isnull,
            datum_gereed_lt=datum_gereed_lt,
            datum_gereed_lte=datum_gereed_lte,
            datum_gereed_not=datum_gereed_not,
            datum_offerte=datum_offerte,
            datum_offerte_gt=datum_offerte_gt,
            datum_offerte_gte=datum_offerte_gte,
            datum_offerte_in=datum_offerte_in,
            datum_offerte_isnull=datum_offerte_isnull,
            datum_offerte_lt=datum_offerte_lt,
            datum_offerte_lte=datum_offerte_lte,
            datum_offerte_not=datum_offerte_not,
            datum_technische_goedkeuring=datum_technische_goedkeuring,
            datum_technische_goedkeuring_gt=datum_technische_goedkeuring_gt,
            datum_technische_goedkeuring_gte=datum_technische_goedkeuring_gte,
            datum_technische_goedkeuring_in=datum_technische_goedkeuring_in,
            datum_technische_goedkeuring_isnull=datum_technische_goedkeuring_isnull,
            datum_technische_goedkeuring_lt=datum_technische_goedkeuring_lt,
            datum_technische_goedkeuring_lte=datum_technische_goedkeuring_lte,
            datum_technische_goedkeuring_not=datum_technische_goedkeuring_not,
            datum_wijziging=datum_wijziging,
            datum_wijziging_gt=datum_wijziging_gt,
            datum_wijziging_gte=datum_wijziging_gte,
            datum_wijziging_in=datum_wijziging_in,
            datum_wijziging_isnull=datum_wijziging_isnull,
            datum_wijziging_lt=datum_wijziging_lt,
            datum_wijziging_lte=datum_wijziging_lte,
            datum_wijziging_not=datum_wijziging_not,
            datum_workflow_start=datum_workflow_start,
            datum_workflow_start_gt=datum_workflow_start_gt,
            datum_workflow_start_gte=datum_workflow_start_gte,
            datum_workflow_start_in=datum_workflow_start_in,
            datum_workflow_start_isnull=datum_workflow_start_isnull,
            datum_workflow_start_lt=datum_workflow_start_lt,
            datum_workflow_start_lte=datum_workflow_start_lte,
            datum_workflow_start_not=datum_workflow_start_not,
            doorlooptijd=doorlooptijd,
            doorlooptijd_in=doorlooptijd_in,
            doorlooptijd_isempty=doorlooptijd_isempty,
            doorlooptijd_isnull=doorlooptijd_isnull,
            doorlooptijd_like=doorlooptijd_like,
            doorlooptijd_not=doorlooptijd_not,
            eigenaar=eigenaar,
            eigenaar_in=eigenaar_in,
            eigenaar_isempty=eigenaar_isempty,
            eigenaar_isnull=eigenaar_isnull,
            eigenaar_like=eigenaar_like,
            eigenaar_not=eigenaar_not,
            factuur_nummer=factuur_nummer,
            factuur_nummer_in=factuur_nummer_in,
            factuur_nummer_isempty=factuur_nummer_isempty,
            factuur_nummer_isnull=factuur_nummer_isnull,
            factuur_nummer_like=factuur_nummer_like,
            factuur_nummer_not=factuur_nummer_not,
            gbd_buurt_identificatie=gbd_buurt_identificatie,
            gbd_buurt_identificatie_in=gbd_buurt_identificatie_in,
            gbd_buurt_identificatie_isempty=gbd_buurt_identificatie_isempty,
            gbd_buurt_identificatie_isnull=gbd_buurt_identificatie_isnull,
            gbd_buurt_identificatie_like=gbd_buurt_identificatie_like,
            gbd_buurt_identificatie_not=gbd_buurt_identificatie_not,
            gbd_buurt_code=gbd_buurt_code,
            gbd_buurt_code_in=gbd_buurt_code_in,
            gbd_buurt_code_isempty=gbd_buurt_code_isempty,
            gbd_buurt_code_isnull=gbd_buurt_code_isnull,
            gbd_buurt_code_like=gbd_buurt_code_like,
            gbd_buurt_code_not=gbd_buurt_code_not,
            gbd_buurt_naam=gbd_buurt_naam,
            gbd_buurt_naam_in=gbd_buurt_naam_in,
            gbd_buurt_naam_isempty=gbd_buurt_naam_isempty,
            gbd_buurt_naam_isnull=gbd_buurt_naam_isnull,
            gbd_buurt_naam_like=gbd_buurt_naam_like,
            gbd_buurt_naam_not=gbd_buurt_naam_not,
            gbd_buurt_volgnummer=gbd_buurt_volgnummer,
            gbd_buurt_volgnummer_gt=gbd_buurt_volgnummer_gt,
            gbd_buurt_volgnummer_gte=gbd_buurt_volgnummer_gte,
            gbd_buurt_volgnummer_in=gbd_buurt_volgnummer_in,
            gbd_buurt_volgnummer_isnull=gbd_buurt_volgnummer_isnull,
            gbd_buurt_volgnummer_lt=gbd_buurt_volgnummer_lt,
            gbd_buurt_volgnummer_lte=gbd_buurt_volgnummer_lte,
            gbd_buurt_volgnummer_not=gbd_buurt_volgnummer_not,
            gbd_ggw_identificatie=gbd_ggw_identificatie,
            gbd_ggw_identificatie_in=gbd_ggw_identificatie_in,
            gbd_ggw_identificatie_isempty=gbd_ggw_identificatie_isempty,
            gbd_ggw_identificatie_isnull=gbd_ggw_identificatie_isnull,
            gbd_ggw_identificatie_like=gbd_ggw_identificatie_like,
            gbd_ggw_identificatie_not=gbd_ggw_identificatie_not,
            gbd_ggw_naam=gbd_ggw_naam,
            gbd_ggw_naam_in=gbd_ggw_naam_in,
            gbd_ggw_naam_isempty=gbd_ggw_naam_isempty,
            gbd_ggw_naam_isnull=gbd_ggw_naam_isnull,
            gbd_ggw_naam_like=gbd_ggw_naam_like,
            gbd_ggw_naam_not=gbd_ggw_naam_not,
            gbd_ggw_volgnummer=gbd_ggw_volgnummer,
            gbd_ggw_volgnummer_in=gbd_ggw_volgnummer_in,
            gbd_ggw_volgnummer_isempty=gbd_ggw_volgnummer_isempty,
            gbd_ggw_volgnummer_isnull=gbd_ggw_volgnummer_isnull,
            gbd_ggw_volgnummer_like=gbd_ggw_volgnummer_like,
            gbd_ggw_volgnummer_not=gbd_ggw_volgnummer_not,
            gbd_stadsdeel_identificatie=gbd_stadsdeel_identificatie,
            gbd_stadsdeel_identificatie_in=gbd_stadsdeel_identificatie_in,
            gbd_stadsdeel_identificatie_isempty=gbd_stadsdeel_identificatie_isempty,
            gbd_stadsdeel_identificatie_isnull=gbd_stadsdeel_identificatie_isnull,
            gbd_stadsdeel_identificatie_like=gbd_stadsdeel_identificatie_like,
            gbd_stadsdeel_identificatie_not=gbd_stadsdeel_identificatie_not,
            gbd_stadsdeel_naam=gbd_stadsdeel_naam,
            gbd_stadsdeel_naam_in=gbd_stadsdeel_naam_in,
            gbd_stadsdeel_naam_isempty=gbd_stadsdeel_naam_isempty,
            gbd_stadsdeel_naam_isnull=gbd_stadsdeel_naam_isnull,
            gbd_stadsdeel_naam_like=gbd_stadsdeel_naam_like,
            gbd_stadsdeel_naam_not=gbd_stadsdeel_naam_not,
            gbd_stadsdeel_volgnummer=gbd_stadsdeel_volgnummer,
            gbd_stadsdeel_volgnummer_gt=gbd_stadsdeel_volgnummer_gt,
            gbd_stadsdeel_volgnummer_gte=gbd_stadsdeel_volgnummer_gte,
            gbd_stadsdeel_volgnummer_in=gbd_stadsdeel_volgnummer_in,
            gbd_stadsdeel_volgnummer_isnull=gbd_stadsdeel_volgnummer_isnull,
            gbd_stadsdeel_volgnummer_lt=gbd_stadsdeel_volgnummer_lt,
            gbd_stadsdeel_volgnummer_lte=gbd_stadsdeel_volgnummer_lte,
            gbd_stadsdeel_volgnummer_not=gbd_stadsdeel_volgnummer_not,
            gbd_wijk_identificatie=gbd_wijk_identificatie,
            gbd_wijk_identificatie_in=gbd_wijk_identificatie_in,
            gbd_wijk_identificatie_isempty=gbd_wijk_identificatie_isempty,
            gbd_wijk_identificatie_isnull=gbd_wijk_identificatie_isnull,
            gbd_wijk_identificatie_like=gbd_wijk_identificatie_like,
            gbd_wijk_identificatie_not=gbd_wijk_identificatie_not,
            gbd_wijk_naam=gbd_wijk_naam,
            gbd_wijk_naam_in=gbd_wijk_naam_in,
            gbd_wijk_naam_isempty=gbd_wijk_naam_isempty,
            gbd_wijk_naam_isnull=gbd_wijk_naam_isnull,
            gbd_wijk_naam_like=gbd_wijk_naam_like,
            gbd_wijk_naam_not=gbd_wijk_naam_not,
            gbd_wijk_volgnummer=gbd_wijk_volgnummer,
            gbd_wijk_volgnummer_gt=gbd_wijk_volgnummer_gt,
            gbd_wijk_volgnummer_gte=gbd_wijk_volgnummer_gte,
            gbd_wijk_volgnummer_in=gbd_wijk_volgnummer_in,
            gbd_wijk_volgnummer_isnull=gbd_wijk_volgnummer_isnull,
            gbd_wijk_volgnummer_lt=gbd_wijk_volgnummer_lt,
            gbd_wijk_volgnummer_lte=gbd_wijk_volgnummer_lte,
            gbd_wijk_volgnummer_not=gbd_wijk_volgnummer_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            items_definitief=items_definitief,
            items_definitief_in=items_definitief_in,
            items_definitief_isempty=items_definitief_isempty,
            items_definitief_isnull=items_definitief_isnull,
            items_definitief_like=items_definitief_like,
            items_definitief_not=items_definitief_not,
            items_offerte=items_offerte,
            items_offerte_in=items_offerte_in,
            items_offerte_isempty=items_offerte_isempty,
            items_offerte_isnull=items_offerte_isnull,
            items_offerte_like=items_offerte_like,
            items_offerte_not=items_offerte_not,
            onderhoudsbedrijf=onderhoudsbedrijf,
            onderhoudsbedrijf_in=onderhoudsbedrijf_in,
            onderhoudsbedrijf_isempty=onderhoudsbedrijf_isempty,
            onderhoudsbedrijf_isnull=onderhoudsbedrijf_isnull,
            onderhoudsbedrijf_like=onderhoudsbedrijf_like,
            onderhoudsbedrijf_not=onderhoudsbedrijf_not,
            oorzaak=oorzaak,
            oorzaak_contains=oorzaak_contains,
            oplossing=oplossing,
            oplossing_contains=oplossing_contains,
            prijs=prijs,
            prijs_offerte=prijs_offerte,
            prijs_offerte_gt=prijs_offerte_gt,
            prijs_offerte_gte=prijs_offerte_gte,
            prijs_offerte_in=prijs_offerte_in,
            prijs_offerte_isnull=prijs_offerte_isnull,
            prijs_offerte_lt=prijs_offerte_lt,
            prijs_offerte_lte=prijs_offerte_lte,
            prijs_offerte_not=prijs_offerte_not,
            prijs_gt=prijs_gt,
            prijs_gte=prijs_gte,
            prijs_in=prijs_in,
            prijs_isnull=prijs_isnull,
            prijs_lt=prijs_lt,
            prijs_lte=prijs_lte,
            prijs_not=prijs_not,
            prioriteit_naam=prioriteit_naam,
            prioriteit_naam_in=prioriteit_naam_in,
            prioriteit_naam_isempty=prioriteit_naam_isempty,
            prioriteit_naam_isnull=prioriteit_naam_isnull,
            prioriteit_naam_like=prioriteit_naam_like,
            prioriteit_naam_not=prioriteit_naam_not,
            prioriteit_opmerking=prioriteit_opmerking,
            prioriteit_opmerking_in=prioriteit_opmerking_in,
            prioriteit_opmerking_isempty=prioriteit_opmerking_isempty,
            prioriteit_opmerking_isnull=prioriteit_opmerking_isnull,
            prioriteit_opmerking_like=prioriteit_opmerking_like,
            prioriteit_opmerking_not=prioriteit_opmerking_not,
            prioriteit_responstijd=prioriteit_responstijd,
            prioriteit_responstijd_gt=prioriteit_responstijd_gt,
            prioriteit_responstijd_gte=prioriteit_responstijd_gte,
            prioriteit_responstijd_in=prioriteit_responstijd_in,
            prioriteit_responstijd_isnull=prioriteit_responstijd_isnull,
            prioriteit_responstijd_lt=prioriteit_responstijd_lt,
            prioriteit_responstijd_lte=prioriteit_responstijd_lte,
            prioriteit_responstijd_not=prioriteit_responstijd_not,
            probleem=probleem,
            probleem_module_naam=probleem_module_naam,
            probleem_module_naam_contains=probleem_module_naam_contains,
            probleem_contains=probleem_contains,
            rangorde_nummer_tickettype=rangorde_nummer_tickettype,
            rangorde_nummer_tickettype_gt=rangorde_nummer_tickettype_gt,
            rangorde_nummer_tickettype_gte=rangorde_nummer_tickettype_gte,
            rangorde_nummer_tickettype_in=rangorde_nummer_tickettype_in,
            rangorde_nummer_tickettype_isnull=rangorde_nummer_tickettype_isnull,
            rangorde_nummer_tickettype_lt=rangorde_nummer_tickettype_lt,
            rangorde_nummer_tickettype_lte=rangorde_nummer_tickettype_lte,
            rangorde_nummer_tickettype_not=rangorde_nummer_tickettype_not,
            reden_afgewezen=reden_afgewezen,
            reden_afgewezen_in=reden_afgewezen_in,
            reden_afgewezen_isempty=reden_afgewezen_isempty,
            reden_afgewezen_isnull=reden_afgewezen_isnull,
            reden_afgewezen_like=reden_afgewezen_like,
            reden_afgewezen_not=reden_afgewezen_not,
            referentienummer_leverancier=referentienummer_leverancier,
            referentienummer_leverancier_in=referentienummer_leverancier_in,
            referentienummer_leverancier_isempty=referentienummer_leverancier_isempty,
            referentienummer_leverancier_isnull=referentienummer_leverancier_isnull,
            referentienummer_leverancier_like=referentienummer_leverancier_like,
            referentienummer_leverancier_not=referentienummer_leverancier_not,
            ticketstatus=ticketstatus,
            ticketstatus_in=ticketstatus_in,
            ticketstatus_isempty=ticketstatus_isempty,
            ticketstatus_isnull=ticketstatus_isnull,
            ticketstatus_like=ticketstatus_like,
            ticketstatus_not=ticketstatus_not,
            tickettype=tickettype,
            tickettype_in=tickettype_in,
            tickettype_isempty=tickettype_isempty,
            tickettype_isnull=tickettype_isnull,
            tickettype_like=tickettype_like,
            tickettype_not=tickettype_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalticket",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_ticket_retrieve2_serialize(
        self,
        id,
        accept_crs,
        content_crs,
        x_api_key,
        expand,
        expand_scope,
        fields,
        format,
        sort,
        container_id,
        container_id_in,
        container_id_isempty,
        container_id_isnull,
        container_id_like,
        container_id_not,
        containerlocatie_id,
        containerlocatie_id_in,
        containerlocatie_id_isempty,
        containerlocatie_id_isnull,
        containerlocatie_id_like,
        containerlocatie_id_not,
        datum_afgerond,
        datum_afgerond_gt,
        datum_afgerond_gte,
        datum_afgerond_in,
        datum_afgerond_isnull,
        datum_afgerond_lt,
        datum_afgerond_lte,
        datum_afgerond_not,
        datum_afgewezen,
        datum_afgewezen_gt,
        datum_afgewezen_gte,
        datum_afgewezen_in,
        datum_afgewezen_isnull,
        datum_afgewezen_lt,
        datum_afgewezen_lte,
        datum_afgewezen_not,
        datum_creatie,
        datum_creatie_gt,
        datum_creatie_gte,
        datum_creatie_in,
        datum_creatie_isnull,
        datum_creatie_lt,
        datum_creatie_lte,
        datum_creatie_not,
        datum_factuur,
        datum_factuur_gt,
        datum_factuur_gte,
        datum_factuur_in,
        datum_factuur_isnull,
        datum_factuur_lt,
        datum_factuur_lte,
        datum_factuur_not,
        datum_financiele_goedkeuring,
        datum_financiele_goedkeuring_gt,
        datum_financiele_goedkeuring_gte,
        datum_financiele_goedkeuring_in,
        datum_financiele_goedkeuring_isnull,
        datum_financiele_goedkeuring_lt,
        datum_financiele_goedkeuring_lte,
        datum_financiele_goedkeuring_not,
        datum_geaccepteerd,
        datum_geaccepteerd_gt,
        datum_geaccepteerd_gte,
        datum_geaccepteerd_in,
        datum_geaccepteerd_isnull,
        datum_geaccepteerd_lt,
        datum_geaccepteerd_lte,
        datum_geaccepteerd_not,
        datum_gefactureerd,
        datum_gefactureerd_gt,
        datum_gefactureerd_gte,
        datum_gefactureerd_in,
        datum_gefactureerd_isnull,
        datum_gefactureerd_lt,
        datum_gefactureerd_lte,
        datum_gefactureerd_not,
        datum_gepland,
        datum_gepland_gt,
        datum_gepland_gte,
        datum_gepland_in,
        datum_gepland_isnull,
        datum_gepland_lt,
        datum_gepland_lte,
        datum_gepland_not,
        datum_gereed,
        datum_gereed_gt,
        datum_gereed_gte,
        datum_gereed_in,
        datum_gereed_isnull,
        datum_gereed_lt,
        datum_gereed_lte,
        datum_gereed_not,
        datum_offerte,
        datum_offerte_gt,
        datum_offerte_gte,
        datum_offerte_in,
        datum_offerte_isnull,
        datum_offerte_lt,
        datum_offerte_lte,
        datum_offerte_not,
        datum_technische_goedkeuring,
        datum_technische_goedkeuring_gt,
        datum_technische_goedkeuring_gte,
        datum_technische_goedkeuring_in,
        datum_technische_goedkeuring_isnull,
        datum_technische_goedkeuring_lt,
        datum_technische_goedkeuring_lte,
        datum_technische_goedkeuring_not,
        datum_wijziging,
        datum_wijziging_gt,
        datum_wijziging_gte,
        datum_wijziging_in,
        datum_wijziging_isnull,
        datum_wijziging_lt,
        datum_wijziging_lte,
        datum_wijziging_not,
        datum_workflow_start,
        datum_workflow_start_gt,
        datum_workflow_start_gte,
        datum_workflow_start_in,
        datum_workflow_start_isnull,
        datum_workflow_start_lt,
        datum_workflow_start_lte,
        datum_workflow_start_not,
        doorlooptijd,
        doorlooptijd_in,
        doorlooptijd_isempty,
        doorlooptijd_isnull,
        doorlooptijd_like,
        doorlooptijd_not,
        eigenaar,
        eigenaar_in,
        eigenaar_isempty,
        eigenaar_isnull,
        eigenaar_like,
        eigenaar_not,
        factuur_nummer,
        factuur_nummer_in,
        factuur_nummer_isempty,
        factuur_nummer_isnull,
        factuur_nummer_like,
        factuur_nummer_not,
        gbd_buurt_identificatie,
        gbd_buurt_identificatie_in,
        gbd_buurt_identificatie_isempty,
        gbd_buurt_identificatie_isnull,
        gbd_buurt_identificatie_like,
        gbd_buurt_identificatie_not,
        gbd_buurt_code,
        gbd_buurt_code_in,
        gbd_buurt_code_isempty,
        gbd_buurt_code_isnull,
        gbd_buurt_code_like,
        gbd_buurt_code_not,
        gbd_buurt_naam,
        gbd_buurt_naam_in,
        gbd_buurt_naam_isempty,
        gbd_buurt_naam_isnull,
        gbd_buurt_naam_like,
        gbd_buurt_naam_not,
        gbd_buurt_volgnummer,
        gbd_buurt_volgnummer_gt,
        gbd_buurt_volgnummer_gte,
        gbd_buurt_volgnummer_in,
        gbd_buurt_volgnummer_isnull,
        gbd_buurt_volgnummer_lt,
        gbd_buurt_volgnummer_lte,
        gbd_buurt_volgnummer_not,
        gbd_ggw_identificatie,
        gbd_ggw_identificatie_in,
        gbd_ggw_identificatie_isempty,
        gbd_ggw_identificatie_isnull,
        gbd_ggw_identificatie_like,
        gbd_ggw_identificatie_not,
        gbd_ggw_naam,
        gbd_ggw_naam_in,
        gbd_ggw_naam_isempty,
        gbd_ggw_naam_isnull,
        gbd_ggw_naam_like,
        gbd_ggw_naam_not,
        gbd_ggw_volgnummer,
        gbd_ggw_volgnummer_in,
        gbd_ggw_volgnummer_isempty,
        gbd_ggw_volgnummer_isnull,
        gbd_ggw_volgnummer_like,
        gbd_ggw_volgnummer_not,
        gbd_stadsdeel_identificatie,
        gbd_stadsdeel_identificatie_in,
        gbd_stadsdeel_identificatie_isempty,
        gbd_stadsdeel_identificatie_isnull,
        gbd_stadsdeel_identificatie_like,
        gbd_stadsdeel_identificatie_not,
        gbd_stadsdeel_naam,
        gbd_stadsdeel_naam_in,
        gbd_stadsdeel_naam_isempty,
        gbd_stadsdeel_naam_isnull,
        gbd_stadsdeel_naam_like,
        gbd_stadsdeel_naam_not,
        gbd_stadsdeel_volgnummer,
        gbd_stadsdeel_volgnummer_gt,
        gbd_stadsdeel_volgnummer_gte,
        gbd_stadsdeel_volgnummer_in,
        gbd_stadsdeel_volgnummer_isnull,
        gbd_stadsdeel_volgnummer_lt,
        gbd_stadsdeel_volgnummer_lte,
        gbd_stadsdeel_volgnummer_not,
        gbd_wijk_identificatie,
        gbd_wijk_identificatie_in,
        gbd_wijk_identificatie_isempty,
        gbd_wijk_identificatie_isnull,
        gbd_wijk_identificatie_like,
        gbd_wijk_identificatie_not,
        gbd_wijk_naam,
        gbd_wijk_naam_in,
        gbd_wijk_naam_isempty,
        gbd_wijk_naam_isnull,
        gbd_wijk_naam_like,
        gbd_wijk_naam_not,
        gbd_wijk_volgnummer,
        gbd_wijk_volgnummer_gt,
        gbd_wijk_volgnummer_gte,
        gbd_wijk_volgnummer_in,
        gbd_wijk_volgnummer_isnull,
        gbd_wijk_volgnummer_lt,
        gbd_wijk_volgnummer_lte,
        gbd_wijk_volgnummer_not,
        id2,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        items_definitief,
        items_definitief_in,
        items_definitief_isempty,
        items_definitief_isnull,
        items_definitief_like,
        items_definitief_not,
        items_offerte,
        items_offerte_in,
        items_offerte_isempty,
        items_offerte_isnull,
        items_offerte_like,
        items_offerte_not,
        onderhoudsbedrijf,
        onderhoudsbedrijf_in,
        onderhoudsbedrijf_isempty,
        onderhoudsbedrijf_isnull,
        onderhoudsbedrijf_like,
        onderhoudsbedrijf_not,
        oorzaak,
        oorzaak_contains,
        oplossing,
        oplossing_contains,
        prijs,
        prijs_offerte,
        prijs_offerte_gt,
        prijs_offerte_gte,
        prijs_offerte_in,
        prijs_offerte_isnull,
        prijs_offerte_lt,
        prijs_offerte_lte,
        prijs_offerte_not,
        prijs_gt,
        prijs_gte,
        prijs_in,
        prijs_isnull,
        prijs_lt,
        prijs_lte,
        prijs_not,
        prioriteit_naam,
        prioriteit_naam_in,
        prioriteit_naam_isempty,
        prioriteit_naam_isnull,
        prioriteit_naam_like,
        prioriteit_naam_not,
        prioriteit_opmerking,
        prioriteit_opmerking_in,
        prioriteit_opmerking_isempty,
        prioriteit_opmerking_isnull,
        prioriteit_opmerking_like,
        prioriteit_opmerking_not,
        prioriteit_responstijd,
        prioriteit_responstijd_gt,
        prioriteit_responstijd_gte,
        prioriteit_responstijd_in,
        prioriteit_responstijd_isnull,
        prioriteit_responstijd_lt,
        prioriteit_responstijd_lte,
        prioriteit_responstijd_not,
        probleem,
        probleem_module_naam,
        probleem_module_naam_contains,
        probleem_contains,
        rangorde_nummer_tickettype,
        rangorde_nummer_tickettype_gt,
        rangorde_nummer_tickettype_gte,
        rangorde_nummer_tickettype_in,
        rangorde_nummer_tickettype_isnull,
        rangorde_nummer_tickettype_lt,
        rangorde_nummer_tickettype_lte,
        rangorde_nummer_tickettype_not,
        reden_afgewezen,
        reden_afgewezen_in,
        reden_afgewezen_isempty,
        reden_afgewezen_isnull,
        reden_afgewezen_like,
        reden_afgewezen_not,
        referentienummer_leverancier,
        referentienummer_leverancier_in,
        referentienummer_leverancier_isempty,
        referentienummer_leverancier_isnull,
        referentienummer_leverancier_like,
        referentienummer_leverancier_not,
        ticketstatus,
        ticketstatus_in,
        ticketstatus_isempty,
        ticketstatus_isnull,
        ticketstatus_like,
        ticketstatus_not,
        tickettype,
        tickettype_in,
        tickettype_isempty,
        tickettype_isnull,
        tickettype_like,
        tickettype_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'container.id[in]': 'csv',
            'container.id[not]': 'multi',
            'containerlocatie.id[in]': 'csv',
            'containerlocatie.id[not]': 'multi',
            'datumAfgerond[in]': 'csv',
            'datumAfgerond[not]': 'multi',
            'datumAfgewezen[in]': 'csv',
            'datumAfgewezen[not]': 'multi',
            'datumCreatie[in]': 'csv',
            'datumCreatie[not]': 'multi',
            'datumFactuur[in]': 'csv',
            'datumFactuur[not]': 'multi',
            'datumFinancieleGoedkeuring[in]': 'csv',
            'datumFinancieleGoedkeuring[not]': 'multi',
            'datumGeaccepteerd[in]': 'csv',
            'datumGeaccepteerd[not]': 'multi',
            'datumGefactureerd[in]': 'csv',
            'datumGefactureerd[not]': 'multi',
            'datumGepland[in]': 'csv',
            'datumGepland[not]': 'multi',
            'datumGereed[in]': 'csv',
            'datumGereed[not]': 'multi',
            'datumOfferte[in]': 'csv',
            'datumOfferte[not]': 'multi',
            'datumTechnischeGoedkeuring[in]': 'csv',
            'datumTechnischeGoedkeuring[not]': 'multi',
            'datumWijziging[in]': 'csv',
            'datumWijziging[not]': 'multi',
            'datumWorkflowStart[in]': 'csv',
            'datumWorkflowStart[not]': 'multi',
            'doorlooptijd[in]': 'csv',
            'doorlooptijd[not]': 'multi',
            'eigenaar[in]': 'csv',
            'eigenaar[not]': 'multi',
            'factuurNummer[in]': 'csv',
            'factuurNummer[not]': 'multi',
            'gbdBuurt.identificatie[in]': 'csv',
            'gbdBuurt.identificatie[not]': 'multi',
            'gbdBuurtCode[in]': 'csv',
            'gbdBuurtCode[not]': 'multi',
            'gbdBuurtNaam[in]': 'csv',
            'gbdBuurtNaam[not]': 'multi',
            'gbdBuurtVolgnummer[in]': 'csv',
            'gbdBuurtVolgnummer[not]': 'multi',
            'gbdGgw.identificatie[in]': 'csv',
            'gbdGgw.identificatie[not]': 'multi',
            'gbdGgwNaam[in]': 'csv',
            'gbdGgwNaam[not]': 'multi',
            'gbdGgwVolgnummer[in]': 'csv',
            'gbdGgwVolgnummer[not]': 'multi',
            'gbdStadsdeel.identificatie[in]': 'csv',
            'gbdStadsdeel.identificatie[not]': 'multi',
            'gbdStadsdeelNaam[in]': 'csv',
            'gbdStadsdeelNaam[not]': 'multi',
            'gbdStadsdeelVolgnummer[in]': 'csv',
            'gbdStadsdeelVolgnummer[not]': 'multi',
            'gbdWijk.identificatie[in]': 'csv',
            'gbdWijk.identificatie[not]': 'multi',
            'gbdWijkNaam[in]': 'csv',
            'gbdWijkNaam[not]': 'multi',
            'gbdWijkVolgnummer[in]': 'csv',
            'gbdWijkVolgnummer[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'itemsDefinitief[in]': 'csv',
            'itemsDefinitief[not]': 'multi',
            'itemsOfferte[in]': 'csv',
            'itemsOfferte[not]': 'multi',
            'onderhoudsbedrijf[in]': 'csv',
            'onderhoudsbedrijf[not]': 'multi',
            'oorzaak': 'csv',
            'oorzaak[contains]': 'csv',
            'oplossing': 'csv',
            'oplossing[contains]': 'csv',
            'prijsOfferte[in]': 'csv',
            'prijsOfferte[not]': 'multi',
            'prijs[in]': 'csv',
            'prijs[not]': 'multi',
            'prioriteitNaam[in]': 'csv',
            'prioriteitNaam[not]': 'multi',
            'prioriteitOpmerking[in]': 'csv',
            'prioriteitOpmerking[not]': 'multi',
            'prioriteitResponstijd[in]': 'csv',
            'prioriteitResponstijd[not]': 'multi',
            'probleem': 'csv',
            'probleemModuleNaam': 'csv',
            'probleemModuleNaam[contains]': 'csv',
            'probleem[contains]': 'csv',
            'rangordeNummerTickettype[in]': 'csv',
            'rangordeNummerTickettype[not]': 'multi',
            'redenAfgewezen[in]': 'csv',
            'redenAfgewezen[not]': 'multi',
            'referentienummerLeverancier[in]': 'csv',
            'referentienummerLeverancier[not]': 'multi',
            'ticketstatus[in]': 'csv',
            'ticketstatus[not]': 'multi',
            'tickettype[in]': 'csv',
            'tickettype[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if container_id is not None:
            
            _query_params.append(('container.id', container_id))
            
        if container_id_in is not None:
            
            _query_params.append(('container.id[in]', container_id_in))
            
        if container_id_isempty is not None:
            
            _query_params.append(('container.id[isempty]', container_id_isempty))
            
        if container_id_isnull is not None:
            
            _query_params.append(('container.id[isnull]', container_id_isnull))
            
        if container_id_like is not None:
            
            _query_params.append(('container.id[like]', container_id_like))
            
        if container_id_not is not None:
            
            _query_params.append(('container.id[not]', container_id_not))
            
        if containerlocatie_id is not None:
            
            _query_params.append(('containerlocatie.id', containerlocatie_id))
            
        if containerlocatie_id_in is not None:
            
            _query_params.append(('containerlocatie.id[in]', containerlocatie_id_in))
            
        if containerlocatie_id_isempty is not None:
            
            _query_params.append(('containerlocatie.id[isempty]', containerlocatie_id_isempty))
            
        if containerlocatie_id_isnull is not None:
            
            _query_params.append(('containerlocatie.id[isnull]', containerlocatie_id_isnull))
            
        if containerlocatie_id_like is not None:
            
            _query_params.append(('containerlocatie.id[like]', containerlocatie_id_like))
            
        if containerlocatie_id_not is not None:
            
            _query_params.append(('containerlocatie.id[not]', containerlocatie_id_not))
            
        if datum_afgerond is not None:
            if isinstance(datum_afgerond, datetime):
                _query_params.append(
                    (
                        'datumAfgerond',
                        datum_afgerond.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond', datum_afgerond))
            
        if datum_afgerond_gt is not None:
            if isinstance(datum_afgerond_gt, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[gt]',
                        datum_afgerond_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[gt]', datum_afgerond_gt))
            
        if datum_afgerond_gte is not None:
            if isinstance(datum_afgerond_gte, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[gte]',
                        datum_afgerond_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[gte]', datum_afgerond_gte))
            
        if datum_afgerond_in is not None:
            
            _query_params.append(('datumAfgerond[in]', datum_afgerond_in))
            
        if datum_afgerond_isnull is not None:
            
            _query_params.append(('datumAfgerond[isnull]', datum_afgerond_isnull))
            
        if datum_afgerond_lt is not None:
            if isinstance(datum_afgerond_lt, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[lt]',
                        datum_afgerond_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[lt]', datum_afgerond_lt))
            
        if datum_afgerond_lte is not None:
            if isinstance(datum_afgerond_lte, datetime):
                _query_params.append(
                    (
                        'datumAfgerond[lte]',
                        datum_afgerond_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgerond[lte]', datum_afgerond_lte))
            
        if datum_afgerond_not is not None:
            
            _query_params.append(('datumAfgerond[not]', datum_afgerond_not))
            
        if datum_afgewezen is not None:
            if isinstance(datum_afgewezen, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen',
                        datum_afgewezen.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen', datum_afgewezen))
            
        if datum_afgewezen_gt is not None:
            if isinstance(datum_afgewezen_gt, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[gt]',
                        datum_afgewezen_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[gt]', datum_afgewezen_gt))
            
        if datum_afgewezen_gte is not None:
            if isinstance(datum_afgewezen_gte, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[gte]',
                        datum_afgewezen_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[gte]', datum_afgewezen_gte))
            
        if datum_afgewezen_in is not None:
            
            _query_params.append(('datumAfgewezen[in]', datum_afgewezen_in))
            
        if datum_afgewezen_isnull is not None:
            
            _query_params.append(('datumAfgewezen[isnull]', datum_afgewezen_isnull))
            
        if datum_afgewezen_lt is not None:
            if isinstance(datum_afgewezen_lt, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[lt]',
                        datum_afgewezen_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[lt]', datum_afgewezen_lt))
            
        if datum_afgewezen_lte is not None:
            if isinstance(datum_afgewezen_lte, datetime):
                _query_params.append(
                    (
                        'datumAfgewezen[lte]',
                        datum_afgewezen_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAfgewezen[lte]', datum_afgewezen_lte))
            
        if datum_afgewezen_not is not None:
            
            _query_params.append(('datumAfgewezen[not]', datum_afgewezen_not))
            
        if datum_creatie is not None:
            if isinstance(datum_creatie, datetime):
                _query_params.append(
                    (
                        'datumCreatie',
                        datum_creatie.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie', datum_creatie))
            
        if datum_creatie_gt is not None:
            if isinstance(datum_creatie_gt, datetime):
                _query_params.append(
                    (
                        'datumCreatie[gt]',
                        datum_creatie_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[gt]', datum_creatie_gt))
            
        if datum_creatie_gte is not None:
            if isinstance(datum_creatie_gte, datetime):
                _query_params.append(
                    (
                        'datumCreatie[gte]',
                        datum_creatie_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[gte]', datum_creatie_gte))
            
        if datum_creatie_in is not None:
            
            _query_params.append(('datumCreatie[in]', datum_creatie_in))
            
        if datum_creatie_isnull is not None:
            
            _query_params.append(('datumCreatie[isnull]', datum_creatie_isnull))
            
        if datum_creatie_lt is not None:
            if isinstance(datum_creatie_lt, datetime):
                _query_params.append(
                    (
                        'datumCreatie[lt]',
                        datum_creatie_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[lt]', datum_creatie_lt))
            
        if datum_creatie_lte is not None:
            if isinstance(datum_creatie_lte, datetime):
                _query_params.append(
                    (
                        'datumCreatie[lte]',
                        datum_creatie_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumCreatie[lte]', datum_creatie_lte))
            
        if datum_creatie_not is not None:
            
            _query_params.append(('datumCreatie[not]', datum_creatie_not))
            
        if datum_factuur is not None:
            if isinstance(datum_factuur, datetime):
                _query_params.append(
                    (
                        'datumFactuur',
                        datum_factuur.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur', datum_factuur))
            
        if datum_factuur_gt is not None:
            if isinstance(datum_factuur_gt, datetime):
                _query_params.append(
                    (
                        'datumFactuur[gt]',
                        datum_factuur_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[gt]', datum_factuur_gt))
            
        if datum_factuur_gte is not None:
            if isinstance(datum_factuur_gte, datetime):
                _query_params.append(
                    (
                        'datumFactuur[gte]',
                        datum_factuur_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[gte]', datum_factuur_gte))
            
        if datum_factuur_in is not None:
            
            _query_params.append(('datumFactuur[in]', datum_factuur_in))
            
        if datum_factuur_isnull is not None:
            
            _query_params.append(('datumFactuur[isnull]', datum_factuur_isnull))
            
        if datum_factuur_lt is not None:
            if isinstance(datum_factuur_lt, datetime):
                _query_params.append(
                    (
                        'datumFactuur[lt]',
                        datum_factuur_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[lt]', datum_factuur_lt))
            
        if datum_factuur_lte is not None:
            if isinstance(datum_factuur_lte, datetime):
                _query_params.append(
                    (
                        'datumFactuur[lte]',
                        datum_factuur_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFactuur[lte]', datum_factuur_lte))
            
        if datum_factuur_not is not None:
            
            _query_params.append(('datumFactuur[not]', datum_factuur_not))
            
        if datum_financiele_goedkeuring is not None:
            if isinstance(datum_financiele_goedkeuring, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring',
                        datum_financiele_goedkeuring.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring', datum_financiele_goedkeuring))
            
        if datum_financiele_goedkeuring_gt is not None:
            if isinstance(datum_financiele_goedkeuring_gt, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[gt]',
                        datum_financiele_goedkeuring_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[gt]', datum_financiele_goedkeuring_gt))
            
        if datum_financiele_goedkeuring_gte is not None:
            if isinstance(datum_financiele_goedkeuring_gte, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[gte]',
                        datum_financiele_goedkeuring_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[gte]', datum_financiele_goedkeuring_gte))
            
        if datum_financiele_goedkeuring_in is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[in]', datum_financiele_goedkeuring_in))
            
        if datum_financiele_goedkeuring_isnull is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[isnull]', datum_financiele_goedkeuring_isnull))
            
        if datum_financiele_goedkeuring_lt is not None:
            if isinstance(datum_financiele_goedkeuring_lt, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[lt]',
                        datum_financiele_goedkeuring_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[lt]', datum_financiele_goedkeuring_lt))
            
        if datum_financiele_goedkeuring_lte is not None:
            if isinstance(datum_financiele_goedkeuring_lte, datetime):
                _query_params.append(
                    (
                        'datumFinancieleGoedkeuring[lte]',
                        datum_financiele_goedkeuring_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumFinancieleGoedkeuring[lte]', datum_financiele_goedkeuring_lte))
            
        if datum_financiele_goedkeuring_not is not None:
            
            _query_params.append(('datumFinancieleGoedkeuring[not]', datum_financiele_goedkeuring_not))
            
        if datum_geaccepteerd is not None:
            if isinstance(datum_geaccepteerd, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd',
                        datum_geaccepteerd.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd', datum_geaccepteerd))
            
        if datum_geaccepteerd_gt is not None:
            if isinstance(datum_geaccepteerd_gt, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[gt]',
                        datum_geaccepteerd_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[gt]', datum_geaccepteerd_gt))
            
        if datum_geaccepteerd_gte is not None:
            if isinstance(datum_geaccepteerd_gte, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[gte]',
                        datum_geaccepteerd_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[gte]', datum_geaccepteerd_gte))
            
        if datum_geaccepteerd_in is not None:
            
            _query_params.append(('datumGeaccepteerd[in]', datum_geaccepteerd_in))
            
        if datum_geaccepteerd_isnull is not None:
            
            _query_params.append(('datumGeaccepteerd[isnull]', datum_geaccepteerd_isnull))
            
        if datum_geaccepteerd_lt is not None:
            if isinstance(datum_geaccepteerd_lt, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[lt]',
                        datum_geaccepteerd_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[lt]', datum_geaccepteerd_lt))
            
        if datum_geaccepteerd_lte is not None:
            if isinstance(datum_geaccepteerd_lte, datetime):
                _query_params.append(
                    (
                        'datumGeaccepteerd[lte]',
                        datum_geaccepteerd_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGeaccepteerd[lte]', datum_geaccepteerd_lte))
            
        if datum_geaccepteerd_not is not None:
            
            _query_params.append(('datumGeaccepteerd[not]', datum_geaccepteerd_not))
            
        if datum_gefactureerd is not None:
            if isinstance(datum_gefactureerd, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd',
                        datum_gefactureerd.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd', datum_gefactureerd))
            
        if datum_gefactureerd_gt is not None:
            if isinstance(datum_gefactureerd_gt, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[gt]',
                        datum_gefactureerd_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[gt]', datum_gefactureerd_gt))
            
        if datum_gefactureerd_gte is not None:
            if isinstance(datum_gefactureerd_gte, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[gte]',
                        datum_gefactureerd_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[gte]', datum_gefactureerd_gte))
            
        if datum_gefactureerd_in is not None:
            
            _query_params.append(('datumGefactureerd[in]', datum_gefactureerd_in))
            
        if datum_gefactureerd_isnull is not None:
            
            _query_params.append(('datumGefactureerd[isnull]', datum_gefactureerd_isnull))
            
        if datum_gefactureerd_lt is not None:
            if isinstance(datum_gefactureerd_lt, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[lt]',
                        datum_gefactureerd_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[lt]', datum_gefactureerd_lt))
            
        if datum_gefactureerd_lte is not None:
            if isinstance(datum_gefactureerd_lte, datetime):
                _query_params.append(
                    (
                        'datumGefactureerd[lte]',
                        datum_gefactureerd_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGefactureerd[lte]', datum_gefactureerd_lte))
            
        if datum_gefactureerd_not is not None:
            
            _query_params.append(('datumGefactureerd[not]', datum_gefactureerd_not))
            
        if datum_gepland is not None:
            if isinstance(datum_gepland, datetime):
                _query_params.append(
                    (
                        'datumGepland',
                        datum_gepland.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland', datum_gepland))
            
        if datum_gepland_gt is not None:
            if isinstance(datum_gepland_gt, datetime):
                _query_params.append(
                    (
                        'datumGepland[gt]',
                        datum_gepland_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[gt]', datum_gepland_gt))
            
        if datum_gepland_gte is not None:
            if isinstance(datum_gepland_gte, datetime):
                _query_params.append(
                    (
                        'datumGepland[gte]',
                        datum_gepland_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[gte]', datum_gepland_gte))
            
        if datum_gepland_in is not None:
            
            _query_params.append(('datumGepland[in]', datum_gepland_in))
            
        if datum_gepland_isnull is not None:
            
            _query_params.append(('datumGepland[isnull]', datum_gepland_isnull))
            
        if datum_gepland_lt is not None:
            if isinstance(datum_gepland_lt, datetime):
                _query_params.append(
                    (
                        'datumGepland[lt]',
                        datum_gepland_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[lt]', datum_gepland_lt))
            
        if datum_gepland_lte is not None:
            if isinstance(datum_gepland_lte, datetime):
                _query_params.append(
                    (
                        'datumGepland[lte]',
                        datum_gepland_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGepland[lte]', datum_gepland_lte))
            
        if datum_gepland_not is not None:
            
            _query_params.append(('datumGepland[not]', datum_gepland_not))
            
        if datum_gereed is not None:
            if isinstance(datum_gereed, datetime):
                _query_params.append(
                    (
                        'datumGereed',
                        datum_gereed.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed', datum_gereed))
            
        if datum_gereed_gt is not None:
            if isinstance(datum_gereed_gt, datetime):
                _query_params.append(
                    (
                        'datumGereed[gt]',
                        datum_gereed_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[gt]', datum_gereed_gt))
            
        if datum_gereed_gte is not None:
            if isinstance(datum_gereed_gte, datetime):
                _query_params.append(
                    (
                        'datumGereed[gte]',
                        datum_gereed_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[gte]', datum_gereed_gte))
            
        if datum_gereed_in is not None:
            
            _query_params.append(('datumGereed[in]', datum_gereed_in))
            
        if datum_gereed_isnull is not None:
            
            _query_params.append(('datumGereed[isnull]', datum_gereed_isnull))
            
        if datum_gereed_lt is not None:
            if isinstance(datum_gereed_lt, datetime):
                _query_params.append(
                    (
                        'datumGereed[lt]',
                        datum_gereed_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[lt]', datum_gereed_lt))
            
        if datum_gereed_lte is not None:
            if isinstance(datum_gereed_lte, datetime):
                _query_params.append(
                    (
                        'datumGereed[lte]',
                        datum_gereed_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumGereed[lte]', datum_gereed_lte))
            
        if datum_gereed_not is not None:
            
            _query_params.append(('datumGereed[not]', datum_gereed_not))
            
        if datum_offerte is not None:
            if isinstance(datum_offerte, datetime):
                _query_params.append(
                    (
                        'datumOfferte',
                        datum_offerte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte', datum_offerte))
            
        if datum_offerte_gt is not None:
            if isinstance(datum_offerte_gt, datetime):
                _query_params.append(
                    (
                        'datumOfferte[gt]',
                        datum_offerte_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[gt]', datum_offerte_gt))
            
        if datum_offerte_gte is not None:
            if isinstance(datum_offerte_gte, datetime):
                _query_params.append(
                    (
                        'datumOfferte[gte]',
                        datum_offerte_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[gte]', datum_offerte_gte))
            
        if datum_offerte_in is not None:
            
            _query_params.append(('datumOfferte[in]', datum_offerte_in))
            
        if datum_offerte_isnull is not None:
            
            _query_params.append(('datumOfferte[isnull]', datum_offerte_isnull))
            
        if datum_offerte_lt is not None:
            if isinstance(datum_offerte_lt, datetime):
                _query_params.append(
                    (
                        'datumOfferte[lt]',
                        datum_offerte_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[lt]', datum_offerte_lt))
            
        if datum_offerte_lte is not None:
            if isinstance(datum_offerte_lte, datetime):
                _query_params.append(
                    (
                        'datumOfferte[lte]',
                        datum_offerte_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumOfferte[lte]', datum_offerte_lte))
            
        if datum_offerte_not is not None:
            
            _query_params.append(('datumOfferte[not]', datum_offerte_not))
            
        if datum_technische_goedkeuring is not None:
            if isinstance(datum_technische_goedkeuring, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring',
                        datum_technische_goedkeuring.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring', datum_technische_goedkeuring))
            
        if datum_technische_goedkeuring_gt is not None:
            if isinstance(datum_technische_goedkeuring_gt, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[gt]',
                        datum_technische_goedkeuring_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[gt]', datum_technische_goedkeuring_gt))
            
        if datum_technische_goedkeuring_gte is not None:
            if isinstance(datum_technische_goedkeuring_gte, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[gte]',
                        datum_technische_goedkeuring_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[gte]', datum_technische_goedkeuring_gte))
            
        if datum_technische_goedkeuring_in is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[in]', datum_technische_goedkeuring_in))
            
        if datum_technische_goedkeuring_isnull is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[isnull]', datum_technische_goedkeuring_isnull))
            
        if datum_technische_goedkeuring_lt is not None:
            if isinstance(datum_technische_goedkeuring_lt, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[lt]',
                        datum_technische_goedkeuring_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[lt]', datum_technische_goedkeuring_lt))
            
        if datum_technische_goedkeuring_lte is not None:
            if isinstance(datum_technische_goedkeuring_lte, datetime):
                _query_params.append(
                    (
                        'datumTechnischeGoedkeuring[lte]',
                        datum_technische_goedkeuring_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumTechnischeGoedkeuring[lte]', datum_technische_goedkeuring_lte))
            
        if datum_technische_goedkeuring_not is not None:
            
            _query_params.append(('datumTechnischeGoedkeuring[not]', datum_technische_goedkeuring_not))
            
        if datum_wijziging is not None:
            if isinstance(datum_wijziging, datetime):
                _query_params.append(
                    (
                        'datumWijziging',
                        datum_wijziging.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging', datum_wijziging))
            
        if datum_wijziging_gt is not None:
            if isinstance(datum_wijziging_gt, datetime):
                _query_params.append(
                    (
                        'datumWijziging[gt]',
                        datum_wijziging_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[gt]', datum_wijziging_gt))
            
        if datum_wijziging_gte is not None:
            if isinstance(datum_wijziging_gte, datetime):
                _query_params.append(
                    (
                        'datumWijziging[gte]',
                        datum_wijziging_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[gte]', datum_wijziging_gte))
            
        if datum_wijziging_in is not None:
            
            _query_params.append(('datumWijziging[in]', datum_wijziging_in))
            
        if datum_wijziging_isnull is not None:
            
            _query_params.append(('datumWijziging[isnull]', datum_wijziging_isnull))
            
        if datum_wijziging_lt is not None:
            if isinstance(datum_wijziging_lt, datetime):
                _query_params.append(
                    (
                        'datumWijziging[lt]',
                        datum_wijziging_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[lt]', datum_wijziging_lt))
            
        if datum_wijziging_lte is not None:
            if isinstance(datum_wijziging_lte, datetime):
                _query_params.append(
                    (
                        'datumWijziging[lte]',
                        datum_wijziging_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWijziging[lte]', datum_wijziging_lte))
            
        if datum_wijziging_not is not None:
            
            _query_params.append(('datumWijziging[not]', datum_wijziging_not))
            
        if datum_workflow_start is not None:
            if isinstance(datum_workflow_start, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart',
                        datum_workflow_start.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart', datum_workflow_start))
            
        if datum_workflow_start_gt is not None:
            if isinstance(datum_workflow_start_gt, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[gt]',
                        datum_workflow_start_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[gt]', datum_workflow_start_gt))
            
        if datum_workflow_start_gte is not None:
            if isinstance(datum_workflow_start_gte, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[gte]',
                        datum_workflow_start_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[gte]', datum_workflow_start_gte))
            
        if datum_workflow_start_in is not None:
            
            _query_params.append(('datumWorkflowStart[in]', datum_workflow_start_in))
            
        if datum_workflow_start_isnull is not None:
            
            _query_params.append(('datumWorkflowStart[isnull]', datum_workflow_start_isnull))
            
        if datum_workflow_start_lt is not None:
            if isinstance(datum_workflow_start_lt, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[lt]',
                        datum_workflow_start_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[lt]', datum_workflow_start_lt))
            
        if datum_workflow_start_lte is not None:
            if isinstance(datum_workflow_start_lte, datetime):
                _query_params.append(
                    (
                        'datumWorkflowStart[lte]',
                        datum_workflow_start_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumWorkflowStart[lte]', datum_workflow_start_lte))
            
        if datum_workflow_start_not is not None:
            
            _query_params.append(('datumWorkflowStart[not]', datum_workflow_start_not))
            
        if doorlooptijd is not None:
            
            _query_params.append(('doorlooptijd', doorlooptijd))
            
        if doorlooptijd_in is not None:
            
            _query_params.append(('doorlooptijd[in]', doorlooptijd_in))
            
        if doorlooptijd_isempty is not None:
            
            _query_params.append(('doorlooptijd[isempty]', doorlooptijd_isempty))
            
        if doorlooptijd_isnull is not None:
            
            _query_params.append(('doorlooptijd[isnull]', doorlooptijd_isnull))
            
        if doorlooptijd_like is not None:
            
            _query_params.append(('doorlooptijd[like]', doorlooptijd_like))
            
        if doorlooptijd_not is not None:
            
            _query_params.append(('doorlooptijd[not]', doorlooptijd_not))
            
        if eigenaar is not None:
            
            _query_params.append(('eigenaar', eigenaar))
            
        if eigenaar_in is not None:
            
            _query_params.append(('eigenaar[in]', eigenaar_in))
            
        if eigenaar_isempty is not None:
            
            _query_params.append(('eigenaar[isempty]', eigenaar_isempty))
            
        if eigenaar_isnull is not None:
            
            _query_params.append(('eigenaar[isnull]', eigenaar_isnull))
            
        if eigenaar_like is not None:
            
            _query_params.append(('eigenaar[like]', eigenaar_like))
            
        if eigenaar_not is not None:
            
            _query_params.append(('eigenaar[not]', eigenaar_not))
            
        if factuur_nummer is not None:
            
            _query_params.append(('factuurNummer', factuur_nummer))
            
        if factuur_nummer_in is not None:
            
            _query_params.append(('factuurNummer[in]', factuur_nummer_in))
            
        if factuur_nummer_isempty is not None:
            
            _query_params.append(('factuurNummer[isempty]', factuur_nummer_isempty))
            
        if factuur_nummer_isnull is not None:
            
            _query_params.append(('factuurNummer[isnull]', factuur_nummer_isnull))
            
        if factuur_nummer_like is not None:
            
            _query_params.append(('factuurNummer[like]', factuur_nummer_like))
            
        if factuur_nummer_not is not None:
            
            _query_params.append(('factuurNummer[not]', factuur_nummer_not))
            
        if gbd_buurt_identificatie is not None:
            
            _query_params.append(('gbdBuurt.identificatie', gbd_buurt_identificatie))
            
        if gbd_buurt_identificatie_in is not None:
            
            _query_params.append(('gbdBuurt.identificatie[in]', gbd_buurt_identificatie_in))
            
        if gbd_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isempty]', gbd_buurt_identificatie_isempty))
            
        if gbd_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gbdBuurt.identificatie[isnull]', gbd_buurt_identificatie_isnull))
            
        if gbd_buurt_identificatie_like is not None:
            
            _query_params.append(('gbdBuurt.identificatie[like]', gbd_buurt_identificatie_like))
            
        if gbd_buurt_identificatie_not is not None:
            
            _query_params.append(('gbdBuurt.identificatie[not]', gbd_buurt_identificatie_not))
            
        if gbd_buurt_code is not None:
            
            _query_params.append(('gbdBuurtCode', gbd_buurt_code))
            
        if gbd_buurt_code_in is not None:
            
            _query_params.append(('gbdBuurtCode[in]', gbd_buurt_code_in))
            
        if gbd_buurt_code_isempty is not None:
            
            _query_params.append(('gbdBuurtCode[isempty]', gbd_buurt_code_isempty))
            
        if gbd_buurt_code_isnull is not None:
            
            _query_params.append(('gbdBuurtCode[isnull]', gbd_buurt_code_isnull))
            
        if gbd_buurt_code_like is not None:
            
            _query_params.append(('gbdBuurtCode[like]', gbd_buurt_code_like))
            
        if gbd_buurt_code_not is not None:
            
            _query_params.append(('gbdBuurtCode[not]', gbd_buurt_code_not))
            
        if gbd_buurt_naam is not None:
            
            _query_params.append(('gbdBuurtNaam', gbd_buurt_naam))
            
        if gbd_buurt_naam_in is not None:
            
            _query_params.append(('gbdBuurtNaam[in]', gbd_buurt_naam_in))
            
        if gbd_buurt_naam_isempty is not None:
            
            _query_params.append(('gbdBuurtNaam[isempty]', gbd_buurt_naam_isempty))
            
        if gbd_buurt_naam_isnull is not None:
            
            _query_params.append(('gbdBuurtNaam[isnull]', gbd_buurt_naam_isnull))
            
        if gbd_buurt_naam_like is not None:
            
            _query_params.append(('gbdBuurtNaam[like]', gbd_buurt_naam_like))
            
        if gbd_buurt_naam_not is not None:
            
            _query_params.append(('gbdBuurtNaam[not]', gbd_buurt_naam_not))
            
        if gbd_buurt_volgnummer is not None:
            
            _query_params.append(('gbdBuurtVolgnummer', gbd_buurt_volgnummer))
            
        if gbd_buurt_volgnummer_gt is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[gt]', gbd_buurt_volgnummer_gt))
            
        if gbd_buurt_volgnummer_gte is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[gte]', gbd_buurt_volgnummer_gte))
            
        if gbd_buurt_volgnummer_in is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[in]', gbd_buurt_volgnummer_in))
            
        if gbd_buurt_volgnummer_isnull is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[isnull]', gbd_buurt_volgnummer_isnull))
            
        if gbd_buurt_volgnummer_lt is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[lt]', gbd_buurt_volgnummer_lt))
            
        if gbd_buurt_volgnummer_lte is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[lte]', gbd_buurt_volgnummer_lte))
            
        if gbd_buurt_volgnummer_not is not None:
            
            _query_params.append(('gbdBuurtVolgnummer[not]', gbd_buurt_volgnummer_not))
            
        if gbd_ggw_identificatie is not None:
            
            _query_params.append(('gbdGgw.identificatie', gbd_ggw_identificatie))
            
        if gbd_ggw_identificatie_in is not None:
            
            _query_params.append(('gbdGgw.identificatie[in]', gbd_ggw_identificatie_in))
            
        if gbd_ggw_identificatie_isempty is not None:
            
            _query_params.append(('gbdGgw.identificatie[isempty]', gbd_ggw_identificatie_isempty))
            
        if gbd_ggw_identificatie_isnull is not None:
            
            _query_params.append(('gbdGgw.identificatie[isnull]', gbd_ggw_identificatie_isnull))
            
        if gbd_ggw_identificatie_like is not None:
            
            _query_params.append(('gbdGgw.identificatie[like]', gbd_ggw_identificatie_like))
            
        if gbd_ggw_identificatie_not is not None:
            
            _query_params.append(('gbdGgw.identificatie[not]', gbd_ggw_identificatie_not))
            
        if gbd_ggw_naam is not None:
            
            _query_params.append(('gbdGgwNaam', gbd_ggw_naam))
            
        if gbd_ggw_naam_in is not None:
            
            _query_params.append(('gbdGgwNaam[in]', gbd_ggw_naam_in))
            
        if gbd_ggw_naam_isempty is not None:
            
            _query_params.append(('gbdGgwNaam[isempty]', gbd_ggw_naam_isempty))
            
        if gbd_ggw_naam_isnull is not None:
            
            _query_params.append(('gbdGgwNaam[isnull]', gbd_ggw_naam_isnull))
            
        if gbd_ggw_naam_like is not None:
            
            _query_params.append(('gbdGgwNaam[like]', gbd_ggw_naam_like))
            
        if gbd_ggw_naam_not is not None:
            
            _query_params.append(('gbdGgwNaam[not]', gbd_ggw_naam_not))
            
        if gbd_ggw_volgnummer is not None:
            
            _query_params.append(('gbdGgwVolgnummer', gbd_ggw_volgnummer))
            
        if gbd_ggw_volgnummer_in is not None:
            
            _query_params.append(('gbdGgwVolgnummer[in]', gbd_ggw_volgnummer_in))
            
        if gbd_ggw_volgnummer_isempty is not None:
            
            _query_params.append(('gbdGgwVolgnummer[isempty]', gbd_ggw_volgnummer_isempty))
            
        if gbd_ggw_volgnummer_isnull is not None:
            
            _query_params.append(('gbdGgwVolgnummer[isnull]', gbd_ggw_volgnummer_isnull))
            
        if gbd_ggw_volgnummer_like is not None:
            
            _query_params.append(('gbdGgwVolgnummer[like]', gbd_ggw_volgnummer_like))
            
        if gbd_ggw_volgnummer_not is not None:
            
            _query_params.append(('gbdGgwVolgnummer[not]', gbd_ggw_volgnummer_not))
            
        if gbd_stadsdeel_identificatie is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie', gbd_stadsdeel_identificatie))
            
        if gbd_stadsdeel_identificatie_in is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[in]', gbd_stadsdeel_identificatie_in))
            
        if gbd_stadsdeel_identificatie_isempty is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[isempty]', gbd_stadsdeel_identificatie_isempty))
            
        if gbd_stadsdeel_identificatie_isnull is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[isnull]', gbd_stadsdeel_identificatie_isnull))
            
        if gbd_stadsdeel_identificatie_like is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[like]', gbd_stadsdeel_identificatie_like))
            
        if gbd_stadsdeel_identificatie_not is not None:
            
            _query_params.append(('gbdStadsdeel.identificatie[not]', gbd_stadsdeel_identificatie_not))
            
        if gbd_stadsdeel_naam is not None:
            
            _query_params.append(('gbdStadsdeelNaam', gbd_stadsdeel_naam))
            
        if gbd_stadsdeel_naam_in is not None:
            
            _query_params.append(('gbdStadsdeelNaam[in]', gbd_stadsdeel_naam_in))
            
        if gbd_stadsdeel_naam_isempty is not None:
            
            _query_params.append(('gbdStadsdeelNaam[isempty]', gbd_stadsdeel_naam_isempty))
            
        if gbd_stadsdeel_naam_isnull is not None:
            
            _query_params.append(('gbdStadsdeelNaam[isnull]', gbd_stadsdeel_naam_isnull))
            
        if gbd_stadsdeel_naam_like is not None:
            
            _query_params.append(('gbdStadsdeelNaam[like]', gbd_stadsdeel_naam_like))
            
        if gbd_stadsdeel_naam_not is not None:
            
            _query_params.append(('gbdStadsdeelNaam[not]', gbd_stadsdeel_naam_not))
            
        if gbd_stadsdeel_volgnummer is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer', gbd_stadsdeel_volgnummer))
            
        if gbd_stadsdeel_volgnummer_gt is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[gt]', gbd_stadsdeel_volgnummer_gt))
            
        if gbd_stadsdeel_volgnummer_gte is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[gte]', gbd_stadsdeel_volgnummer_gte))
            
        if gbd_stadsdeel_volgnummer_in is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[in]', gbd_stadsdeel_volgnummer_in))
            
        if gbd_stadsdeel_volgnummer_isnull is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[isnull]', gbd_stadsdeel_volgnummer_isnull))
            
        if gbd_stadsdeel_volgnummer_lt is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[lt]', gbd_stadsdeel_volgnummer_lt))
            
        if gbd_stadsdeel_volgnummer_lte is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[lte]', gbd_stadsdeel_volgnummer_lte))
            
        if gbd_stadsdeel_volgnummer_not is not None:
            
            _query_params.append(('gbdStadsdeelVolgnummer[not]', gbd_stadsdeel_volgnummer_not))
            
        if gbd_wijk_identificatie is not None:
            
            _query_params.append(('gbdWijk.identificatie', gbd_wijk_identificatie))
            
        if gbd_wijk_identificatie_in is not None:
            
            _query_params.append(('gbdWijk.identificatie[in]', gbd_wijk_identificatie_in))
            
        if gbd_wijk_identificatie_isempty is not None:
            
            _query_params.append(('gbdWijk.identificatie[isempty]', gbd_wijk_identificatie_isempty))
            
        if gbd_wijk_identificatie_isnull is not None:
            
            _query_params.append(('gbdWijk.identificatie[isnull]', gbd_wijk_identificatie_isnull))
            
        if gbd_wijk_identificatie_like is not None:
            
            _query_params.append(('gbdWijk.identificatie[like]', gbd_wijk_identificatie_like))
            
        if gbd_wijk_identificatie_not is not None:
            
            _query_params.append(('gbdWijk.identificatie[not]', gbd_wijk_identificatie_not))
            
        if gbd_wijk_naam is not None:
            
            _query_params.append(('gbdWijkNaam', gbd_wijk_naam))
            
        if gbd_wijk_naam_in is not None:
            
            _query_params.append(('gbdWijkNaam[in]', gbd_wijk_naam_in))
            
        if gbd_wijk_naam_isempty is not None:
            
            _query_params.append(('gbdWijkNaam[isempty]', gbd_wijk_naam_isempty))
            
        if gbd_wijk_naam_isnull is not None:
            
            _query_params.append(('gbdWijkNaam[isnull]', gbd_wijk_naam_isnull))
            
        if gbd_wijk_naam_like is not None:
            
            _query_params.append(('gbdWijkNaam[like]', gbd_wijk_naam_like))
            
        if gbd_wijk_naam_not is not None:
            
            _query_params.append(('gbdWijkNaam[not]', gbd_wijk_naam_not))
            
        if gbd_wijk_volgnummer is not None:
            
            _query_params.append(('gbdWijkVolgnummer', gbd_wijk_volgnummer))
            
        if gbd_wijk_volgnummer_gt is not None:
            
            _query_params.append(('gbdWijkVolgnummer[gt]', gbd_wijk_volgnummer_gt))
            
        if gbd_wijk_volgnummer_gte is not None:
            
            _query_params.append(('gbdWijkVolgnummer[gte]', gbd_wijk_volgnummer_gte))
            
        if gbd_wijk_volgnummer_in is not None:
            
            _query_params.append(('gbdWijkVolgnummer[in]', gbd_wijk_volgnummer_in))
            
        if gbd_wijk_volgnummer_isnull is not None:
            
            _query_params.append(('gbdWijkVolgnummer[isnull]', gbd_wijk_volgnummer_isnull))
            
        if gbd_wijk_volgnummer_lt is not None:
            
            _query_params.append(('gbdWijkVolgnummer[lt]', gbd_wijk_volgnummer_lt))
            
        if gbd_wijk_volgnummer_lte is not None:
            
            _query_params.append(('gbdWijkVolgnummer[lte]', gbd_wijk_volgnummer_lte))
            
        if gbd_wijk_volgnummer_not is not None:
            
            _query_params.append(('gbdWijkVolgnummer[not]', gbd_wijk_volgnummer_not))
            
        if id2 is not None:
            
            _query_params.append(('id', id2))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if items_definitief is not None:
            
            _query_params.append(('itemsDefinitief', items_definitief))
            
        if items_definitief_in is not None:
            
            _query_params.append(('itemsDefinitief[in]', items_definitief_in))
            
        if items_definitief_isempty is not None:
            
            _query_params.append(('itemsDefinitief[isempty]', items_definitief_isempty))
            
        if items_definitief_isnull is not None:
            
            _query_params.append(('itemsDefinitief[isnull]', items_definitief_isnull))
            
        if items_definitief_like is not None:
            
            _query_params.append(('itemsDefinitief[like]', items_definitief_like))
            
        if items_definitief_not is not None:
            
            _query_params.append(('itemsDefinitief[not]', items_definitief_not))
            
        if items_offerte is not None:
            
            _query_params.append(('itemsOfferte', items_offerte))
            
        if items_offerte_in is not None:
            
            _query_params.append(('itemsOfferte[in]', items_offerte_in))
            
        if items_offerte_isempty is not None:
            
            _query_params.append(('itemsOfferte[isempty]', items_offerte_isempty))
            
        if items_offerte_isnull is not None:
            
            _query_params.append(('itemsOfferte[isnull]', items_offerte_isnull))
            
        if items_offerte_like is not None:
            
            _query_params.append(('itemsOfferte[like]', items_offerte_like))
            
        if items_offerte_not is not None:
            
            _query_params.append(('itemsOfferte[not]', items_offerte_not))
            
        if onderhoudsbedrijf is not None:
            
            _query_params.append(('onderhoudsbedrijf', onderhoudsbedrijf))
            
        if onderhoudsbedrijf_in is not None:
            
            _query_params.append(('onderhoudsbedrijf[in]', onderhoudsbedrijf_in))
            
        if onderhoudsbedrijf_isempty is not None:
            
            _query_params.append(('onderhoudsbedrijf[isempty]', onderhoudsbedrijf_isempty))
            
        if onderhoudsbedrijf_isnull is not None:
            
            _query_params.append(('onderhoudsbedrijf[isnull]', onderhoudsbedrijf_isnull))
            
        if onderhoudsbedrijf_like is not None:
            
            _query_params.append(('onderhoudsbedrijf[like]', onderhoudsbedrijf_like))
            
        if onderhoudsbedrijf_not is not None:
            
            _query_params.append(('onderhoudsbedrijf[not]', onderhoudsbedrijf_not))
            
        if oorzaak is not None:
            
            _query_params.append(('oorzaak', oorzaak))
            
        if oorzaak_contains is not None:
            
            _query_params.append(('oorzaak[contains]', oorzaak_contains))
            
        if oplossing is not None:
            
            _query_params.append(('oplossing', oplossing))
            
        if oplossing_contains is not None:
            
            _query_params.append(('oplossing[contains]', oplossing_contains))
            
        if prijs is not None:
            
            _query_params.append(('prijs', prijs))
            
        if prijs_offerte is not None:
            
            _query_params.append(('prijsOfferte', prijs_offerte))
            
        if prijs_offerte_gt is not None:
            
            _query_params.append(('prijsOfferte[gt]', prijs_offerte_gt))
            
        if prijs_offerte_gte is not None:
            
            _query_params.append(('prijsOfferte[gte]', prijs_offerte_gte))
            
        if prijs_offerte_in is not None:
            
            _query_params.append(('prijsOfferte[in]', prijs_offerte_in))
            
        if prijs_offerte_isnull is not None:
            
            _query_params.append(('prijsOfferte[isnull]', prijs_offerte_isnull))
            
        if prijs_offerte_lt is not None:
            
            _query_params.append(('prijsOfferte[lt]', prijs_offerte_lt))
            
        if prijs_offerte_lte is not None:
            
            _query_params.append(('prijsOfferte[lte]', prijs_offerte_lte))
            
        if prijs_offerte_not is not None:
            
            _query_params.append(('prijsOfferte[not]', prijs_offerte_not))
            
        if prijs_gt is not None:
            
            _query_params.append(('prijs[gt]', prijs_gt))
            
        if prijs_gte is not None:
            
            _query_params.append(('prijs[gte]', prijs_gte))
            
        if prijs_in is not None:
            
            _query_params.append(('prijs[in]', prijs_in))
            
        if prijs_isnull is not None:
            
            _query_params.append(('prijs[isnull]', prijs_isnull))
            
        if prijs_lt is not None:
            
            _query_params.append(('prijs[lt]', prijs_lt))
            
        if prijs_lte is not None:
            
            _query_params.append(('prijs[lte]', prijs_lte))
            
        if prijs_not is not None:
            
            _query_params.append(('prijs[not]', prijs_not))
            
        if prioriteit_naam is not None:
            
            _query_params.append(('prioriteitNaam', prioriteit_naam))
            
        if prioriteit_naam_in is not None:
            
            _query_params.append(('prioriteitNaam[in]', prioriteit_naam_in))
            
        if prioriteit_naam_isempty is not None:
            
            _query_params.append(('prioriteitNaam[isempty]', prioriteit_naam_isempty))
            
        if prioriteit_naam_isnull is not None:
            
            _query_params.append(('prioriteitNaam[isnull]', prioriteit_naam_isnull))
            
        if prioriteit_naam_like is not None:
            
            _query_params.append(('prioriteitNaam[like]', prioriteit_naam_like))
            
        if prioriteit_naam_not is not None:
            
            _query_params.append(('prioriteitNaam[not]', prioriteit_naam_not))
            
        if prioriteit_opmerking is not None:
            
            _query_params.append(('prioriteitOpmerking', prioriteit_opmerking))
            
        if prioriteit_opmerking_in is not None:
            
            _query_params.append(('prioriteitOpmerking[in]', prioriteit_opmerking_in))
            
        if prioriteit_opmerking_isempty is not None:
            
            _query_params.append(('prioriteitOpmerking[isempty]', prioriteit_opmerking_isempty))
            
        if prioriteit_opmerking_isnull is not None:
            
            _query_params.append(('prioriteitOpmerking[isnull]', prioriteit_opmerking_isnull))
            
        if prioriteit_opmerking_like is not None:
            
            _query_params.append(('prioriteitOpmerking[like]', prioriteit_opmerking_like))
            
        if prioriteit_opmerking_not is not None:
            
            _query_params.append(('prioriteitOpmerking[not]', prioriteit_opmerking_not))
            
        if prioriteit_responstijd is not None:
            
            _query_params.append(('prioriteitResponstijd', prioriteit_responstijd))
            
        if prioriteit_responstijd_gt is not None:
            
            _query_params.append(('prioriteitResponstijd[gt]', prioriteit_responstijd_gt))
            
        if prioriteit_responstijd_gte is not None:
            
            _query_params.append(('prioriteitResponstijd[gte]', prioriteit_responstijd_gte))
            
        if prioriteit_responstijd_in is not None:
            
            _query_params.append(('prioriteitResponstijd[in]', prioriteit_responstijd_in))
            
        if prioriteit_responstijd_isnull is not None:
            
            _query_params.append(('prioriteitResponstijd[isnull]', prioriteit_responstijd_isnull))
            
        if prioriteit_responstijd_lt is not None:
            
            _query_params.append(('prioriteitResponstijd[lt]', prioriteit_responstijd_lt))
            
        if prioriteit_responstijd_lte is not None:
            
            _query_params.append(('prioriteitResponstijd[lte]', prioriteit_responstijd_lte))
            
        if prioriteit_responstijd_not is not None:
            
            _query_params.append(('prioriteitResponstijd[not]', prioriteit_responstijd_not))
            
        if probleem is not None:
            
            _query_params.append(('probleem', probleem))
            
        if probleem_module_naam is not None:
            
            _query_params.append(('probleemModuleNaam', probleem_module_naam))
            
        if probleem_module_naam_contains is not None:
            
            _query_params.append(('probleemModuleNaam[contains]', probleem_module_naam_contains))
            
        if probleem_contains is not None:
            
            _query_params.append(('probleem[contains]', probleem_contains))
            
        if rangorde_nummer_tickettype is not None:
            
            _query_params.append(('rangordeNummerTickettype', rangorde_nummer_tickettype))
            
        if rangorde_nummer_tickettype_gt is not None:
            
            _query_params.append(('rangordeNummerTickettype[gt]', rangorde_nummer_tickettype_gt))
            
        if rangorde_nummer_tickettype_gte is not None:
            
            _query_params.append(('rangordeNummerTickettype[gte]', rangorde_nummer_tickettype_gte))
            
        if rangorde_nummer_tickettype_in is not None:
            
            _query_params.append(('rangordeNummerTickettype[in]', rangorde_nummer_tickettype_in))
            
        if rangorde_nummer_tickettype_isnull is not None:
            
            _query_params.append(('rangordeNummerTickettype[isnull]', rangorde_nummer_tickettype_isnull))
            
        if rangorde_nummer_tickettype_lt is not None:
            
            _query_params.append(('rangordeNummerTickettype[lt]', rangorde_nummer_tickettype_lt))
            
        if rangorde_nummer_tickettype_lte is not None:
            
            _query_params.append(('rangordeNummerTickettype[lte]', rangorde_nummer_tickettype_lte))
            
        if rangorde_nummer_tickettype_not is not None:
            
            _query_params.append(('rangordeNummerTickettype[not]', rangorde_nummer_tickettype_not))
            
        if reden_afgewezen is not None:
            
            _query_params.append(('redenAfgewezen', reden_afgewezen))
            
        if reden_afgewezen_in is not None:
            
            _query_params.append(('redenAfgewezen[in]', reden_afgewezen_in))
            
        if reden_afgewezen_isempty is not None:
            
            _query_params.append(('redenAfgewezen[isempty]', reden_afgewezen_isempty))
            
        if reden_afgewezen_isnull is not None:
            
            _query_params.append(('redenAfgewezen[isnull]', reden_afgewezen_isnull))
            
        if reden_afgewezen_like is not None:
            
            _query_params.append(('redenAfgewezen[like]', reden_afgewezen_like))
            
        if reden_afgewezen_not is not None:
            
            _query_params.append(('redenAfgewezen[not]', reden_afgewezen_not))
            
        if referentienummer_leverancier is not None:
            
            _query_params.append(('referentienummerLeverancier', referentienummer_leverancier))
            
        if referentienummer_leverancier_in is not None:
            
            _query_params.append(('referentienummerLeverancier[in]', referentienummer_leverancier_in))
            
        if referentienummer_leverancier_isempty is not None:
            
            _query_params.append(('referentienummerLeverancier[isempty]', referentienummer_leverancier_isempty))
            
        if referentienummer_leverancier_isnull is not None:
            
            _query_params.append(('referentienummerLeverancier[isnull]', referentienummer_leverancier_isnull))
            
        if referentienummer_leverancier_like is not None:
            
            _query_params.append(('referentienummerLeverancier[like]', referentienummer_leverancier_like))
            
        if referentienummer_leverancier_not is not None:
            
            _query_params.append(('referentienummerLeverancier[not]', referentienummer_leverancier_not))
            
        if ticketstatus is not None:
            
            _query_params.append(('ticketstatus', ticketstatus))
            
        if ticketstatus_in is not None:
            
            _query_params.append(('ticketstatus[in]', ticketstatus_in))
            
        if ticketstatus_isempty is not None:
            
            _query_params.append(('ticketstatus[isempty]', ticketstatus_isempty))
            
        if ticketstatus_isnull is not None:
            
            _query_params.append(('ticketstatus[isnull]', ticketstatus_isnull))
            
        if ticketstatus_like is not None:
            
            _query_params.append(('ticketstatus[like]', ticketstatus_like))
            
        if ticketstatus_not is not None:
            
            _query_params.append(('ticketstatus[not]', ticketstatus_not))
            
        if tickettype is not None:
            
            _query_params.append(('tickettype', tickettype))
            
        if tickettype_in is not None:
            
            _query_params.append(('tickettype[in]', tickettype_in))
            
        if tickettype_isempty is not None:
            
            _query_params.append(('tickettype[isempty]', tickettype_isempty))
            
        if tickettype_isnull is not None:
            
            _query_params.append(('tickettype[isnull]', tickettype_isnull))
            
        if tickettype_like is not None:
            
            _query_params.append(('tickettype[like]', tickettype_like))
            
        if tickettype_not is not None:
            
            _query_params.append(('tickettype[not]', tickettype_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/ticket/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


