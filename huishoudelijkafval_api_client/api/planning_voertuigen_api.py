# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr, field_validator
from typing import List, Optional, Union
from typing_extensions import Annotated
from huishoudelijkafval_api_client.models.huishoudelijkafvalplanning_voertuigen import HuishoudelijkafvalplanningVoertuigen
from huishoudelijkafval_api_client.models.paginated_huishoudelijkafvalplanning_voertuigen_list import PaginatedHuishoudelijkafvalplanningVoertuigenList

from huishoudelijkafval_api_client.api_client import ApiClient, RequestSerialized
from huishoudelijkafval_api_client.api_response import ApiResponse
from huishoudelijkafval_api_client.rest import RESTResponseType


class PlanningVoertuigenApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    async def huishoudelijkafval_planning_voertuigen_list_slash(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedHuishoudelijkafvalplanningVoertuigenList:
        """huishoudelijkafval_planning_voertuigen_list_slash

        Planningsgegevens van afvalinzamelingsvoertuigen voor huishoudelijk- en bedrijfsafval

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id: Uniek identificerend kenmerk van het record.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            page=page,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalplanningVoertuigenList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_planning_voertuigen_list_slash_with_http_info(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedHuishoudelijkafvalplanningVoertuigenList]:
        """huishoudelijkafval_planning_voertuigen_list_slash

        Planningsgegevens van afvalinzamelingsvoertuigen voor huishoudelijk- en bedrijfsafval

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id: Uniek identificerend kenmerk van het record.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            page=page,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalplanningVoertuigenList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_planning_voertuigen_list_slash_without_preload_content(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_planning_voertuigen_list_slash

        Planningsgegevens van afvalinzamelingsvoertuigen voor huishoudelijk- en bedrijfsafval

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id: Uniek identificerend kenmerk van het record.
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param page: A page number within the paginated result set.
        :type page: int
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            page=page,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalplanningVoertuigenList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_planning_voertuigen_list_slash_serialize(
        self,
        accept_crs,
        content_crs,
        x_api_key,
        count,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        page_size,
        sort,
        aantal_medewerkers,
        aantal_medewerkers_inhuur,
        aantal_medewerkers_inhuur_gt,
        aantal_medewerkers_inhuur_gte,
        aantal_medewerkers_inhuur_in,
        aantal_medewerkers_inhuur_isnull,
        aantal_medewerkers_inhuur_lt,
        aantal_medewerkers_inhuur_lte,
        aantal_medewerkers_inhuur_not,
        aantal_medewerkers_intern,
        aantal_medewerkers_intern_gt,
        aantal_medewerkers_intern_gte,
        aantal_medewerkers_intern_in,
        aantal_medewerkers_intern_isnull,
        aantal_medewerkers_intern_lt,
        aantal_medewerkers_intern_lte,
        aantal_medewerkers_intern_not,
        aantal_medewerkers_gt,
        aantal_medewerkers_gte,
        aantal_medewerkers_in,
        aantal_medewerkers_isnull,
        aantal_medewerkers_lt,
        aantal_medewerkers_lte,
        aantal_medewerkers_not,
        activiteit,
        activiteit_in,
        activiteit_isempty,
        activiteit_isnull,
        activiteit_like,
        activiteit_not,
        categorie,
        categorie_in,
        categorie_isempty,
        categorie_isnull,
        categorie_like,
        categorie_not,
        datum_aanwezig_bron,
        datum_aanwezig_bron_gt,
        datum_aanwezig_bron_gte,
        datum_aanwezig_bron_in,
        datum_aanwezig_bron_isnull,
        datum_aanwezig_bron_lt,
        datum_aanwezig_bron_lte,
        datum_aanwezig_bron_not,
        datum_verwerkt_stadsdelen,
        datum_verwerkt_stadsdelen_gt,
        datum_verwerkt_stadsdelen_gte,
        datum_verwerkt_stadsdelen_in,
        datum_verwerkt_stadsdelen_isnull,
        datum_verwerkt_stadsdelen_lt,
        datum_verwerkt_stadsdelen_lte,
        datum_verwerkt_stadsdelen_not,
        fase,
        fase_in,
        fase_isempty,
        fase_isnull,
        fase_like,
        fase_not,
        id,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        kenteken,
        kenteken_kort,
        kenteken_kort_in,
        kenteken_kort_isempty,
        kenteken_kort_isnull,
        kenteken_kort_like,
        kenteken_kort_not,
        kenteken_in,
        kenteken_isempty,
        kenteken_isnull,
        kenteken_like,
        kenteken_not,
        memo,
        memo_in,
        memo_isempty,
        memo_isnull,
        memo_like,
        memo_not,
        page,
        pauze_eindtijd,
        pauze_eindtijd_in,
        pauze_eindtijd_isempty,
        pauze_eindtijd_isnull,
        pauze_eindtijd_like,
        pauze_eindtijd_not,
        pauze_starttijd,
        pauze_starttijd_in,
        pauze_starttijd_isempty,
        pauze_starttijd_isnull,
        pauze_starttijd_like,
        pauze_starttijd_not,
        pauze_uren_gepland,
        pauze_uren_gepland_gt,
        pauze_uren_gepland_gte,
        pauze_uren_gepland_in,
        pauze_uren_gepland_isnull,
        pauze_uren_gepland_lt,
        pauze_uren_gepland_lte,
        pauze_uren_gepland_not,
        soort_werkzaamheden,
        soort_werkzaamheden_in,
        soort_werkzaamheden_isempty,
        soort_werkzaamheden_isnull,
        soort_werkzaamheden_like,
        soort_werkzaamheden_not,
        team,
        team_in,
        team_isempty,
        team_isnull,
        team_like,
        team_not,
        uren_inzet_medewerker_inhuur,
        uren_inzet_medewerker_inhuur_gt,
        uren_inzet_medewerker_inhuur_gte,
        uren_inzet_medewerker_inhuur_in,
        uren_inzet_medewerker_inhuur_isnull,
        uren_inzet_medewerker_inhuur_lt,
        uren_inzet_medewerker_inhuur_lte,
        uren_inzet_medewerker_inhuur_not,
        uren_inzet_medewerker_intern,
        uren_inzet_medewerker_intern_gt,
        uren_inzet_medewerker_intern_gte,
        uren_inzet_medewerker_intern_in,
        uren_inzet_medewerker_intern_isnull,
        uren_inzet_medewerker_intern_lt,
        uren_inzet_medewerker_intern_lte,
        uren_inzet_medewerker_intern_not,
        uren_inzet_voertuig,
        uren_inzet_voertuig_gt,
        uren_inzet_voertuig_gte,
        uren_inzet_voertuig_in,
        uren_inzet_voertuig_isnull,
        uren_inzet_voertuig_lt,
        uren_inzet_voertuig_lte,
        uren_inzet_voertuig_not,
        voertuig_inhuur_indicatie,
        voertuig_inhuur_indicatie_in,
        voertuig_inhuur_indicatie_isempty,
        voertuig_inhuur_indicatie_isnull,
        voertuig_inhuur_indicatie_like,
        voertuig_inhuur_indicatie_not,
        werkzaamheden_code,
        werkzaamheden_code_in,
        werkzaamheden_code_isempty,
        werkzaamheden_code_isnull,
        werkzaamheden_code_like,
        werkzaamheden_code_not,
        werkzaamheden_datum,
        werkzaamheden_datum_ref_id,
        werkzaamheden_datum_ref_id_gt,
        werkzaamheden_datum_ref_id_gte,
        werkzaamheden_datum_ref_id_in,
        werkzaamheden_datum_ref_id_isnull,
        werkzaamheden_datum_ref_id_lt,
        werkzaamheden_datum_ref_id_lte,
        werkzaamheden_datum_ref_id_not,
        werkzaamheden_datum_gt,
        werkzaamheden_datum_gte,
        werkzaamheden_datum_in,
        werkzaamheden_datum_isnull,
        werkzaamheden_datum_lt,
        werkzaamheden_datum_lte,
        werkzaamheden_datum_not,
        werkzaamheden_eindtijd,
        werkzaamheden_eindtijd_in,
        werkzaamheden_eindtijd_isempty,
        werkzaamheden_eindtijd_isnull,
        werkzaamheden_eindtijd_like,
        werkzaamheden_eindtijd_not,
        werkzaamheden_omschrijving,
        werkzaamheden_omschrijving_in,
        werkzaamheden_omschrijving_isempty,
        werkzaamheden_omschrijving_isnull,
        werkzaamheden_omschrijving_like,
        werkzaamheden_omschrijving_not,
        werkzaamheden_starttijd,
        werkzaamheden_starttijd_in,
        werkzaamheden_starttijd_isempty,
        werkzaamheden_starttijd_isnull,
        werkzaamheden_starttijd_like,
        werkzaamheden_starttijd_not,
        werkzaamheden_uren_gepland,
        werkzaamheden_uren_gepland_gt,
        werkzaamheden_uren_gepland_gte,
        werkzaamheden_uren_gepland_in,
        werkzaamheden_uren_gepland_isnull,
        werkzaamheden_uren_gepland_lt,
        werkzaamheden_uren_gepland_lte,
        werkzaamheden_uren_gepland_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aantalMedewerkersInhuur[in]': 'csv',
            'aantalMedewerkersInhuur[not]': 'multi',
            'aantalMedewerkersIntern[in]': 'csv',
            'aantalMedewerkersIntern[not]': 'multi',
            'aantalMedewerkers[in]': 'csv',
            'aantalMedewerkers[not]': 'multi',
            'activiteit[in]': 'csv',
            'activiteit[not]': 'multi',
            'categorie[in]': 'csv',
            'categorie[not]': 'multi',
            'datumAanwezigBron[in]': 'csv',
            'datumAanwezigBron[not]': 'multi',
            'datumVerwerktStadsdelen[in]': 'csv',
            'datumVerwerktStadsdelen[not]': 'multi',
            'fase[in]': 'csv',
            'fase[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'kentekenKort[in]': 'csv',
            'kentekenKort[not]': 'multi',
            'kenteken[in]': 'csv',
            'kenteken[not]': 'multi',
            'memo[in]': 'csv',
            'memo[not]': 'multi',
            'pauzeEindtijd[in]': 'csv',
            'pauzeEindtijd[not]': 'multi',
            'pauzeStarttijd[in]': 'csv',
            'pauzeStarttijd[not]': 'multi',
            'pauzeUrenGepland[in]': 'csv',
            'pauzeUrenGepland[not]': 'multi',
            'soortWerkzaamheden[in]': 'csv',
            'soortWerkzaamheden[not]': 'multi',
            'team[in]': 'csv',
            'team[not]': 'multi',
            'urenInzetMedewerkerInhuur[in]': 'csv',
            'urenInzetMedewerkerInhuur[not]': 'multi',
            'urenInzetMedewerkerIntern[in]': 'csv',
            'urenInzetMedewerkerIntern[not]': 'multi',
            'urenInzetVoertuig[in]': 'csv',
            'urenInzetVoertuig[not]': 'multi',
            'voertuigInhuurIndicatie[in]': 'csv',
            'voertuigInhuurIndicatie[not]': 'multi',
            'werkzaamhedenCode[in]': 'csv',
            'werkzaamhedenCode[not]': 'multi',
            'werkzaamhedenDatumRef.id[in]': 'csv',
            'werkzaamhedenDatumRef.id[not]': 'multi',
            'werkzaamhedenDatum[in]': 'csv',
            'werkzaamhedenDatum[not]': 'multi',
            'werkzaamhedenEindtijd[in]': 'csv',
            'werkzaamhedenEindtijd[not]': 'multi',
            'werkzaamhedenOmschrijving[in]': 'csv',
            'werkzaamhedenOmschrijving[not]': 'multi',
            'werkzaamhedenStarttijd[in]': 'csv',
            'werkzaamhedenStarttijd[not]': 'multi',
            'werkzaamhedenUrenGepland[in]': 'csv',
            'werkzaamhedenUrenGepland[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if count is not None:
            
            _query_params.append(('_count', count))
            
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if page_size is not None:
            
            _query_params.append(('_pageSize', page_size))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aantal_medewerkers is not None:
            
            _query_params.append(('aantalMedewerkers', aantal_medewerkers))
            
        if aantal_medewerkers_inhuur is not None:
            
            _query_params.append(('aantalMedewerkersInhuur', aantal_medewerkers_inhuur))
            
        if aantal_medewerkers_inhuur_gt is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[gt]', aantal_medewerkers_inhuur_gt))
            
        if aantal_medewerkers_inhuur_gte is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[gte]', aantal_medewerkers_inhuur_gte))
            
        if aantal_medewerkers_inhuur_in is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[in]', aantal_medewerkers_inhuur_in))
            
        if aantal_medewerkers_inhuur_isnull is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[isnull]', aantal_medewerkers_inhuur_isnull))
            
        if aantal_medewerkers_inhuur_lt is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[lt]', aantal_medewerkers_inhuur_lt))
            
        if aantal_medewerkers_inhuur_lte is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[lte]', aantal_medewerkers_inhuur_lte))
            
        if aantal_medewerkers_inhuur_not is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[not]', aantal_medewerkers_inhuur_not))
            
        if aantal_medewerkers_intern is not None:
            
            _query_params.append(('aantalMedewerkersIntern', aantal_medewerkers_intern))
            
        if aantal_medewerkers_intern_gt is not None:
            
            _query_params.append(('aantalMedewerkersIntern[gt]', aantal_medewerkers_intern_gt))
            
        if aantal_medewerkers_intern_gte is not None:
            
            _query_params.append(('aantalMedewerkersIntern[gte]', aantal_medewerkers_intern_gte))
            
        if aantal_medewerkers_intern_in is not None:
            
            _query_params.append(('aantalMedewerkersIntern[in]', aantal_medewerkers_intern_in))
            
        if aantal_medewerkers_intern_isnull is not None:
            
            _query_params.append(('aantalMedewerkersIntern[isnull]', aantal_medewerkers_intern_isnull))
            
        if aantal_medewerkers_intern_lt is not None:
            
            _query_params.append(('aantalMedewerkersIntern[lt]', aantal_medewerkers_intern_lt))
            
        if aantal_medewerkers_intern_lte is not None:
            
            _query_params.append(('aantalMedewerkersIntern[lte]', aantal_medewerkers_intern_lte))
            
        if aantal_medewerkers_intern_not is not None:
            
            _query_params.append(('aantalMedewerkersIntern[not]', aantal_medewerkers_intern_not))
            
        if aantal_medewerkers_gt is not None:
            
            _query_params.append(('aantalMedewerkers[gt]', aantal_medewerkers_gt))
            
        if aantal_medewerkers_gte is not None:
            
            _query_params.append(('aantalMedewerkers[gte]', aantal_medewerkers_gte))
            
        if aantal_medewerkers_in is not None:
            
            _query_params.append(('aantalMedewerkers[in]', aantal_medewerkers_in))
            
        if aantal_medewerkers_isnull is not None:
            
            _query_params.append(('aantalMedewerkers[isnull]', aantal_medewerkers_isnull))
            
        if aantal_medewerkers_lt is not None:
            
            _query_params.append(('aantalMedewerkers[lt]', aantal_medewerkers_lt))
            
        if aantal_medewerkers_lte is not None:
            
            _query_params.append(('aantalMedewerkers[lte]', aantal_medewerkers_lte))
            
        if aantal_medewerkers_not is not None:
            
            _query_params.append(('aantalMedewerkers[not]', aantal_medewerkers_not))
            
        if activiteit is not None:
            
            _query_params.append(('activiteit', activiteit))
            
        if activiteit_in is not None:
            
            _query_params.append(('activiteit[in]', activiteit_in))
            
        if activiteit_isempty is not None:
            
            _query_params.append(('activiteit[isempty]', activiteit_isempty))
            
        if activiteit_isnull is not None:
            
            _query_params.append(('activiteit[isnull]', activiteit_isnull))
            
        if activiteit_like is not None:
            
            _query_params.append(('activiteit[like]', activiteit_like))
            
        if activiteit_not is not None:
            
            _query_params.append(('activiteit[not]', activiteit_not))
            
        if categorie is not None:
            
            _query_params.append(('categorie', categorie))
            
        if categorie_in is not None:
            
            _query_params.append(('categorie[in]', categorie_in))
            
        if categorie_isempty is not None:
            
            _query_params.append(('categorie[isempty]', categorie_isempty))
            
        if categorie_isnull is not None:
            
            _query_params.append(('categorie[isnull]', categorie_isnull))
            
        if categorie_like is not None:
            
            _query_params.append(('categorie[like]', categorie_like))
            
        if categorie_not is not None:
            
            _query_params.append(('categorie[not]', categorie_not))
            
        if datum_aanwezig_bron is not None:
            if isinstance(datum_aanwezig_bron, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron',
                        datum_aanwezig_bron.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron', datum_aanwezig_bron))
            
        if datum_aanwezig_bron_gt is not None:
            if isinstance(datum_aanwezig_bron_gt, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[gt]',
                        datum_aanwezig_bron_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[gt]', datum_aanwezig_bron_gt))
            
        if datum_aanwezig_bron_gte is not None:
            if isinstance(datum_aanwezig_bron_gte, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[gte]',
                        datum_aanwezig_bron_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[gte]', datum_aanwezig_bron_gte))
            
        if datum_aanwezig_bron_in is not None:
            
            _query_params.append(('datumAanwezigBron[in]', datum_aanwezig_bron_in))
            
        if datum_aanwezig_bron_isnull is not None:
            
            _query_params.append(('datumAanwezigBron[isnull]', datum_aanwezig_bron_isnull))
            
        if datum_aanwezig_bron_lt is not None:
            if isinstance(datum_aanwezig_bron_lt, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[lt]',
                        datum_aanwezig_bron_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[lt]', datum_aanwezig_bron_lt))
            
        if datum_aanwezig_bron_lte is not None:
            if isinstance(datum_aanwezig_bron_lte, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[lte]',
                        datum_aanwezig_bron_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[lte]', datum_aanwezig_bron_lte))
            
        if datum_aanwezig_bron_not is not None:
            
            _query_params.append(('datumAanwezigBron[not]', datum_aanwezig_bron_not))
            
        if datum_verwerkt_stadsdelen is not None:
            if isinstance(datum_verwerkt_stadsdelen, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen',
                        datum_verwerkt_stadsdelen.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen', datum_verwerkt_stadsdelen))
            
        if datum_verwerkt_stadsdelen_gt is not None:
            if isinstance(datum_verwerkt_stadsdelen_gt, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[gt]',
                        datum_verwerkt_stadsdelen_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[gt]', datum_verwerkt_stadsdelen_gt))
            
        if datum_verwerkt_stadsdelen_gte is not None:
            if isinstance(datum_verwerkt_stadsdelen_gte, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[gte]',
                        datum_verwerkt_stadsdelen_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[gte]', datum_verwerkt_stadsdelen_gte))
            
        if datum_verwerkt_stadsdelen_in is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[in]', datum_verwerkt_stadsdelen_in))
            
        if datum_verwerkt_stadsdelen_isnull is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[isnull]', datum_verwerkt_stadsdelen_isnull))
            
        if datum_verwerkt_stadsdelen_lt is not None:
            if isinstance(datum_verwerkt_stadsdelen_lt, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[lt]',
                        datum_verwerkt_stadsdelen_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[lt]', datum_verwerkt_stadsdelen_lt))
            
        if datum_verwerkt_stadsdelen_lte is not None:
            if isinstance(datum_verwerkt_stadsdelen_lte, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[lte]',
                        datum_verwerkt_stadsdelen_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[lte]', datum_verwerkt_stadsdelen_lte))
            
        if datum_verwerkt_stadsdelen_not is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[not]', datum_verwerkt_stadsdelen_not))
            
        if fase is not None:
            
            _query_params.append(('fase', fase))
            
        if fase_in is not None:
            
            _query_params.append(('fase[in]', fase_in))
            
        if fase_isempty is not None:
            
            _query_params.append(('fase[isempty]', fase_isempty))
            
        if fase_isnull is not None:
            
            _query_params.append(('fase[isnull]', fase_isnull))
            
        if fase_like is not None:
            
            _query_params.append(('fase[like]', fase_like))
            
        if fase_not is not None:
            
            _query_params.append(('fase[not]', fase_not))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if kenteken is not None:
            
            _query_params.append(('kenteken', kenteken))
            
        if kenteken_kort is not None:
            
            _query_params.append(('kentekenKort', kenteken_kort))
            
        if kenteken_kort_in is not None:
            
            _query_params.append(('kentekenKort[in]', kenteken_kort_in))
            
        if kenteken_kort_isempty is not None:
            
            _query_params.append(('kentekenKort[isempty]', kenteken_kort_isempty))
            
        if kenteken_kort_isnull is not None:
            
            _query_params.append(('kentekenKort[isnull]', kenteken_kort_isnull))
            
        if kenteken_kort_like is not None:
            
            _query_params.append(('kentekenKort[like]', kenteken_kort_like))
            
        if kenteken_kort_not is not None:
            
            _query_params.append(('kentekenKort[not]', kenteken_kort_not))
            
        if kenteken_in is not None:
            
            _query_params.append(('kenteken[in]', kenteken_in))
            
        if kenteken_isempty is not None:
            
            _query_params.append(('kenteken[isempty]', kenteken_isempty))
            
        if kenteken_isnull is not None:
            
            _query_params.append(('kenteken[isnull]', kenteken_isnull))
            
        if kenteken_like is not None:
            
            _query_params.append(('kenteken[like]', kenteken_like))
            
        if kenteken_not is not None:
            
            _query_params.append(('kenteken[not]', kenteken_not))
            
        if memo is not None:
            
            _query_params.append(('memo', memo))
            
        if memo_in is not None:
            
            _query_params.append(('memo[in]', memo_in))
            
        if memo_isempty is not None:
            
            _query_params.append(('memo[isempty]', memo_isempty))
            
        if memo_isnull is not None:
            
            _query_params.append(('memo[isnull]', memo_isnull))
            
        if memo_like is not None:
            
            _query_params.append(('memo[like]', memo_like))
            
        if memo_not is not None:
            
            _query_params.append(('memo[not]', memo_not))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if pauze_eindtijd is not None:
            
            _query_params.append(('pauzeEindtijd', pauze_eindtijd))
            
        if pauze_eindtijd_in is not None:
            
            _query_params.append(('pauzeEindtijd[in]', pauze_eindtijd_in))
            
        if pauze_eindtijd_isempty is not None:
            
            _query_params.append(('pauzeEindtijd[isempty]', pauze_eindtijd_isempty))
            
        if pauze_eindtijd_isnull is not None:
            
            _query_params.append(('pauzeEindtijd[isnull]', pauze_eindtijd_isnull))
            
        if pauze_eindtijd_like is not None:
            
            _query_params.append(('pauzeEindtijd[like]', pauze_eindtijd_like))
            
        if pauze_eindtijd_not is not None:
            
            _query_params.append(('pauzeEindtijd[not]', pauze_eindtijd_not))
            
        if pauze_starttijd is not None:
            
            _query_params.append(('pauzeStarttijd', pauze_starttijd))
            
        if pauze_starttijd_in is not None:
            
            _query_params.append(('pauzeStarttijd[in]', pauze_starttijd_in))
            
        if pauze_starttijd_isempty is not None:
            
            _query_params.append(('pauzeStarttijd[isempty]', pauze_starttijd_isempty))
            
        if pauze_starttijd_isnull is not None:
            
            _query_params.append(('pauzeStarttijd[isnull]', pauze_starttijd_isnull))
            
        if pauze_starttijd_like is not None:
            
            _query_params.append(('pauzeStarttijd[like]', pauze_starttijd_like))
            
        if pauze_starttijd_not is not None:
            
            _query_params.append(('pauzeStarttijd[not]', pauze_starttijd_not))
            
        if pauze_uren_gepland is not None:
            
            _query_params.append(('pauzeUrenGepland', pauze_uren_gepland))
            
        if pauze_uren_gepland_gt is not None:
            
            _query_params.append(('pauzeUrenGepland[gt]', pauze_uren_gepland_gt))
            
        if pauze_uren_gepland_gte is not None:
            
            _query_params.append(('pauzeUrenGepland[gte]', pauze_uren_gepland_gte))
            
        if pauze_uren_gepland_in is not None:
            
            _query_params.append(('pauzeUrenGepland[in]', pauze_uren_gepland_in))
            
        if pauze_uren_gepland_isnull is not None:
            
            _query_params.append(('pauzeUrenGepland[isnull]', pauze_uren_gepland_isnull))
            
        if pauze_uren_gepland_lt is not None:
            
            _query_params.append(('pauzeUrenGepland[lt]', pauze_uren_gepland_lt))
            
        if pauze_uren_gepland_lte is not None:
            
            _query_params.append(('pauzeUrenGepland[lte]', pauze_uren_gepland_lte))
            
        if pauze_uren_gepland_not is not None:
            
            _query_params.append(('pauzeUrenGepland[not]', pauze_uren_gepland_not))
            
        if soort_werkzaamheden is not None:
            
            _query_params.append(('soortWerkzaamheden', soort_werkzaamheden))
            
        if soort_werkzaamheden_in is not None:
            
            _query_params.append(('soortWerkzaamheden[in]', soort_werkzaamheden_in))
            
        if soort_werkzaamheden_isempty is not None:
            
            _query_params.append(('soortWerkzaamheden[isempty]', soort_werkzaamheden_isempty))
            
        if soort_werkzaamheden_isnull is not None:
            
            _query_params.append(('soortWerkzaamheden[isnull]', soort_werkzaamheden_isnull))
            
        if soort_werkzaamheden_like is not None:
            
            _query_params.append(('soortWerkzaamheden[like]', soort_werkzaamheden_like))
            
        if soort_werkzaamheden_not is not None:
            
            _query_params.append(('soortWerkzaamheden[not]', soort_werkzaamheden_not))
            
        if team is not None:
            
            _query_params.append(('team', team))
            
        if team_in is not None:
            
            _query_params.append(('team[in]', team_in))
            
        if team_isempty is not None:
            
            _query_params.append(('team[isempty]', team_isempty))
            
        if team_isnull is not None:
            
            _query_params.append(('team[isnull]', team_isnull))
            
        if team_like is not None:
            
            _query_params.append(('team[like]', team_like))
            
        if team_not is not None:
            
            _query_params.append(('team[not]', team_not))
            
        if uren_inzet_medewerker_inhuur is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur', uren_inzet_medewerker_inhuur))
            
        if uren_inzet_medewerker_inhuur_gt is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[gt]', uren_inzet_medewerker_inhuur_gt))
            
        if uren_inzet_medewerker_inhuur_gte is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[gte]', uren_inzet_medewerker_inhuur_gte))
            
        if uren_inzet_medewerker_inhuur_in is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[in]', uren_inzet_medewerker_inhuur_in))
            
        if uren_inzet_medewerker_inhuur_isnull is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[isnull]', uren_inzet_medewerker_inhuur_isnull))
            
        if uren_inzet_medewerker_inhuur_lt is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[lt]', uren_inzet_medewerker_inhuur_lt))
            
        if uren_inzet_medewerker_inhuur_lte is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[lte]', uren_inzet_medewerker_inhuur_lte))
            
        if uren_inzet_medewerker_inhuur_not is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[not]', uren_inzet_medewerker_inhuur_not))
            
        if uren_inzet_medewerker_intern is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern', uren_inzet_medewerker_intern))
            
        if uren_inzet_medewerker_intern_gt is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[gt]', uren_inzet_medewerker_intern_gt))
            
        if uren_inzet_medewerker_intern_gte is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[gte]', uren_inzet_medewerker_intern_gte))
            
        if uren_inzet_medewerker_intern_in is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[in]', uren_inzet_medewerker_intern_in))
            
        if uren_inzet_medewerker_intern_isnull is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[isnull]', uren_inzet_medewerker_intern_isnull))
            
        if uren_inzet_medewerker_intern_lt is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[lt]', uren_inzet_medewerker_intern_lt))
            
        if uren_inzet_medewerker_intern_lte is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[lte]', uren_inzet_medewerker_intern_lte))
            
        if uren_inzet_medewerker_intern_not is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[not]', uren_inzet_medewerker_intern_not))
            
        if uren_inzet_voertuig is not None:
            
            _query_params.append(('urenInzetVoertuig', uren_inzet_voertuig))
            
        if uren_inzet_voertuig_gt is not None:
            
            _query_params.append(('urenInzetVoertuig[gt]', uren_inzet_voertuig_gt))
            
        if uren_inzet_voertuig_gte is not None:
            
            _query_params.append(('urenInzetVoertuig[gte]', uren_inzet_voertuig_gte))
            
        if uren_inzet_voertuig_in is not None:
            
            _query_params.append(('urenInzetVoertuig[in]', uren_inzet_voertuig_in))
            
        if uren_inzet_voertuig_isnull is not None:
            
            _query_params.append(('urenInzetVoertuig[isnull]', uren_inzet_voertuig_isnull))
            
        if uren_inzet_voertuig_lt is not None:
            
            _query_params.append(('urenInzetVoertuig[lt]', uren_inzet_voertuig_lt))
            
        if uren_inzet_voertuig_lte is not None:
            
            _query_params.append(('urenInzetVoertuig[lte]', uren_inzet_voertuig_lte))
            
        if uren_inzet_voertuig_not is not None:
            
            _query_params.append(('urenInzetVoertuig[not]', uren_inzet_voertuig_not))
            
        if voertuig_inhuur_indicatie is not None:
            
            _query_params.append(('voertuigInhuurIndicatie', voertuig_inhuur_indicatie))
            
        if voertuig_inhuur_indicatie_in is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[in]', voertuig_inhuur_indicatie_in))
            
        if voertuig_inhuur_indicatie_isempty is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[isempty]', voertuig_inhuur_indicatie_isempty))
            
        if voertuig_inhuur_indicatie_isnull is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[isnull]', voertuig_inhuur_indicatie_isnull))
            
        if voertuig_inhuur_indicatie_like is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[like]', voertuig_inhuur_indicatie_like))
            
        if voertuig_inhuur_indicatie_not is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[not]', voertuig_inhuur_indicatie_not))
            
        if werkzaamheden_code is not None:
            
            _query_params.append(('werkzaamhedenCode', werkzaamheden_code))
            
        if werkzaamheden_code_in is not None:
            
            _query_params.append(('werkzaamhedenCode[in]', werkzaamheden_code_in))
            
        if werkzaamheden_code_isempty is not None:
            
            _query_params.append(('werkzaamhedenCode[isempty]', werkzaamheden_code_isempty))
            
        if werkzaamheden_code_isnull is not None:
            
            _query_params.append(('werkzaamhedenCode[isnull]', werkzaamheden_code_isnull))
            
        if werkzaamheden_code_like is not None:
            
            _query_params.append(('werkzaamhedenCode[like]', werkzaamheden_code_like))
            
        if werkzaamheden_code_not is not None:
            
            _query_params.append(('werkzaamhedenCode[not]', werkzaamheden_code_not))
            
        if werkzaamheden_datum is not None:
            if isinstance(werkzaamheden_datum, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum',
                        werkzaamheden_datum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum', werkzaamheden_datum))
            
        if werkzaamheden_datum_ref_id is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id', werkzaamheden_datum_ref_id))
            
        if werkzaamheden_datum_ref_id_gt is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[gt]', werkzaamheden_datum_ref_id_gt))
            
        if werkzaamheden_datum_ref_id_gte is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[gte]', werkzaamheden_datum_ref_id_gte))
            
        if werkzaamheden_datum_ref_id_in is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[in]', werkzaamheden_datum_ref_id_in))
            
        if werkzaamheden_datum_ref_id_isnull is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[isnull]', werkzaamheden_datum_ref_id_isnull))
            
        if werkzaamheden_datum_ref_id_lt is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[lt]', werkzaamheden_datum_ref_id_lt))
            
        if werkzaamheden_datum_ref_id_lte is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[lte]', werkzaamheden_datum_ref_id_lte))
            
        if werkzaamheden_datum_ref_id_not is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[not]', werkzaamheden_datum_ref_id_not))
            
        if werkzaamheden_datum_gt is not None:
            if isinstance(werkzaamheden_datum_gt, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[gt]',
                        werkzaamheden_datum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[gt]', werkzaamheden_datum_gt))
            
        if werkzaamheden_datum_gte is not None:
            if isinstance(werkzaamheden_datum_gte, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[gte]',
                        werkzaamheden_datum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[gte]', werkzaamheden_datum_gte))
            
        if werkzaamheden_datum_in is not None:
            
            _query_params.append(('werkzaamhedenDatum[in]', werkzaamheden_datum_in))
            
        if werkzaamheden_datum_isnull is not None:
            
            _query_params.append(('werkzaamhedenDatum[isnull]', werkzaamheden_datum_isnull))
            
        if werkzaamheden_datum_lt is not None:
            if isinstance(werkzaamheden_datum_lt, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[lt]',
                        werkzaamheden_datum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[lt]', werkzaamheden_datum_lt))
            
        if werkzaamheden_datum_lte is not None:
            if isinstance(werkzaamheden_datum_lte, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[lte]',
                        werkzaamheden_datum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[lte]', werkzaamheden_datum_lte))
            
        if werkzaamheden_datum_not is not None:
            
            _query_params.append(('werkzaamhedenDatum[not]', werkzaamheden_datum_not))
            
        if werkzaamheden_eindtijd is not None:
            
            _query_params.append(('werkzaamhedenEindtijd', werkzaamheden_eindtijd))
            
        if werkzaamheden_eindtijd_in is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[in]', werkzaamheden_eindtijd_in))
            
        if werkzaamheden_eindtijd_isempty is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[isempty]', werkzaamheden_eindtijd_isempty))
            
        if werkzaamheden_eindtijd_isnull is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[isnull]', werkzaamheden_eindtijd_isnull))
            
        if werkzaamheden_eindtijd_like is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[like]', werkzaamheden_eindtijd_like))
            
        if werkzaamheden_eindtijd_not is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[not]', werkzaamheden_eindtijd_not))
            
        if werkzaamheden_omschrijving is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving', werkzaamheden_omschrijving))
            
        if werkzaamheden_omschrijving_in is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[in]', werkzaamheden_omschrijving_in))
            
        if werkzaamheden_omschrijving_isempty is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[isempty]', werkzaamheden_omschrijving_isempty))
            
        if werkzaamheden_omschrijving_isnull is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[isnull]', werkzaamheden_omschrijving_isnull))
            
        if werkzaamheden_omschrijving_like is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[like]', werkzaamheden_omschrijving_like))
            
        if werkzaamheden_omschrijving_not is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[not]', werkzaamheden_omschrijving_not))
            
        if werkzaamheden_starttijd is not None:
            
            _query_params.append(('werkzaamhedenStarttijd', werkzaamheden_starttijd))
            
        if werkzaamheden_starttijd_in is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[in]', werkzaamheden_starttijd_in))
            
        if werkzaamheden_starttijd_isempty is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[isempty]', werkzaamheden_starttijd_isempty))
            
        if werkzaamheden_starttijd_isnull is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[isnull]', werkzaamheden_starttijd_isnull))
            
        if werkzaamheden_starttijd_like is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[like]', werkzaamheden_starttijd_like))
            
        if werkzaamheden_starttijd_not is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[not]', werkzaamheden_starttijd_not))
            
        if werkzaamheden_uren_gepland is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland', werkzaamheden_uren_gepland))
            
        if werkzaamheden_uren_gepland_gt is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[gt]', werkzaamheden_uren_gepland_gt))
            
        if werkzaamheden_uren_gepland_gte is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[gte]', werkzaamheden_uren_gepland_gte))
            
        if werkzaamheden_uren_gepland_in is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[in]', werkzaamheden_uren_gepland_in))
            
        if werkzaamheden_uren_gepland_isnull is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[isnull]', werkzaamheden_uren_gepland_isnull))
            
        if werkzaamheden_uren_gepland_lt is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[lt]', werkzaamheden_uren_gepland_lt))
            
        if werkzaamheden_uren_gepland_lte is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[lte]', werkzaamheden_uren_gepland_lte))
            
        if werkzaamheden_uren_gepland_not is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[not]', werkzaamheden_uren_gepland_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/planning_voertuigen',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    async def huishoudelijkafval_planning_voertuigen_retrieve_slash(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HuishoudelijkafvalplanningVoertuigen:
        """huishoudelijkafval_planning_voertuigen_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id2: Uniek identificerend kenmerk van het record.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalplanningVoertuigen",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_planning_voertuigen_retrieve_slash_with_http_info(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HuishoudelijkafvalplanningVoertuigen]:
        """huishoudelijkafval_planning_voertuigen_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id2: Uniek identificerend kenmerk van het record.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalplanningVoertuigen",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_planning_voertuigen_retrieve_slash_without_preload_content(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aantal_medewerkers: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal externe medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Aantal interne medewerkers dat op het voertuig is gepland.")] = None,
        aantal_medewerkers_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        aantal_medewerkers_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        aantal_medewerkers_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        aantal_medewerkers_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aantal_medewerkers_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aantal_medewerkers_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        aantal_medewerkers_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        aantal_medewerkers_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        activiteit: Annotated[Optional[StrictStr], Field(description="Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).")] = None,
        activiteit_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        activiteit_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        activiteit_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        activiteit_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        activiteit_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        categorie: Annotated[Optional[StrictStr], Field(description="Categorie afvalverwerking waar het voertuig op is gepland.")] = None,
        categorie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        categorie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        categorie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        categorie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        categorie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        datum_aanwezig_bron: Annotated[Optional[datetime], Field(description="Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).")] = None,
        datum_aanwezig_bron_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_aanwezig_bron_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_aanwezig_bron_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_aanwezig_bron_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen: Annotated[Optional[datetime], Field(description="Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).")] = None,
        datum_verwerkt_stadsdelen_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        datum_verwerkt_stadsdelen_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        datum_verwerkt_stadsdelen_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        datum_verwerkt_stadsdelen_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        fase: Annotated[Optional[StrictStr], Field(description="Label van de fase waarin de planning zich bevindt.")] = None,
        fase_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fase_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fase_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fase_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fase_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Uniek identificerend kenmerk van het record.")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        kenteken: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig.")] = None,
        kenteken_kort: Annotated[Optional[StrictStr], Field(description="Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).")] = None,
        kenteken_kort_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_kort_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_kort_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_kort_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_kort_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        kenteken_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        kenteken_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        kenteken_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        kenteken_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        kenteken_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        memo: Annotated[Optional[StrictStr], Field(description="Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.")] = None,
        memo_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        memo_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        memo_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        memo_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        memo_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.")] = None,
        pauze_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        pauze_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        pauze_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        pauze_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).")] = None,
        pauze_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        pauze_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        pauze_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        pauze_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        pauze_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        pauze_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        pauze_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        soort_werkzaamheden: Annotated[Optional[StrictStr], Field(description="Specificatie van soort planning (Inzet of Onderhoud).")] = None,
        soort_werkzaamheden_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_werkzaamheden_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_werkzaamheden_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_werkzaamheden_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_werkzaamheden_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        team: Annotated[Optional[StrictStr], Field(description="Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).")] = None,
        team_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        team_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        team_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        team_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        team_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        uren_inzet_medewerker_inhuur: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_inhuur_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_inhuur_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_inhuur_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_inhuur_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_inhuur_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_inhuur_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_medewerker_intern: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).")] = None,
        uren_inzet_medewerker_intern_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_medewerker_intern_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_medewerker_intern_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_medewerker_intern_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_medewerker_intern_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_medewerker_intern_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_medewerker_intern_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        uren_inzet_voertuig: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Netto inzeturen van het voertuig (bruto - pauze).")] = None,
        uren_inzet_voertuig_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        uren_inzet_voertuig_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        uren_inzet_voertuig_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        uren_inzet_voertuig_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        uren_inzet_voertuig_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        uren_inzet_voertuig_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        uren_inzet_voertuig_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        voertuig_inhuur_indicatie: Annotated[Optional[StrictStr], Field(description="Is het voertuig ingehuurd (Ja / Nee).")] = None,
        voertuig_inhuur_indicatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        voertuig_inhuur_indicatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        voertuig_inhuur_indicatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        voertuig_inhuur_indicatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        voertuig_inhuur_indicatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_code: Annotated[Optional[StrictStr], Field(description="Code voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_datum: Annotated[Optional[datetime], Field(description="Datum waarop de werkzaamheden zijn gepland.")] = None,
        werkzaamheden_datum_ref_id: Annotated[Optional[StrictInt], Field(description="Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.")] = None,
        werkzaamheden_datum_ref_id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        werkzaamheden_datum_ref_id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_ref_id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_ref_id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        werkzaamheden_datum_ref_id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_datum_ref_id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        werkzaamheden_datum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_datum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_datum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_datum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        werkzaamheden_eindtijd: Annotated[Optional[StrictStr], Field(description="Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.")] = None,
        werkzaamheden_eindtijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_eindtijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_eindtijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_eindtijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_eindtijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_omschrijving: Annotated[Optional[StrictStr], Field(description="Omschrijving voor de werkzaamheden waarop het voertuig is gepland.")] = None,
        werkzaamheden_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_starttijd: Annotated[Optional[StrictStr], Field(description="Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM")] = None,
        werkzaamheden_starttijd_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_starttijd_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        werkzaamheden_starttijd_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_starttijd_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        werkzaamheden_starttijd_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        werkzaamheden_uren_gepland: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).")] = None,
        werkzaamheden_uren_gepland_gt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than; number")] = None,
        werkzaamheden_uren_gepland_gte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Greater than or equal to; number")] = None,
        werkzaamheden_uren_gepland_in: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        werkzaamheden_uren_gepland_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        werkzaamheden_uren_gepland_lt: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than; number")] = None,
        werkzaamheden_uren_gepland_lte: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Less than or equal to; number")] = None,
        werkzaamheden_uren_gepland_not: Annotated[Optional[List[Union[StrictFloat, StrictInt]]], Field(description="Exclude matches; number")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_planning_voertuigen_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aantal_medewerkers: Aantal medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers: float
        :param aantal_medewerkers_inhuur: Aantal externe medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_inhuur: float
        :param aantal_medewerkers_inhuur_gt: Greater than; number
        :type aantal_medewerkers_inhuur_gt: float
        :param aantal_medewerkers_inhuur_gte: Greater than or equal to; number
        :type aantal_medewerkers_inhuur_gte: float
        :param aantal_medewerkers_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_inhuur_in: List[float]
        :param aantal_medewerkers_inhuur_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_inhuur_isnull: bool
        :param aantal_medewerkers_inhuur_lt: Less than; number
        :type aantal_medewerkers_inhuur_lt: float
        :param aantal_medewerkers_inhuur_lte: Less than or equal to; number
        :type aantal_medewerkers_inhuur_lte: float
        :param aantal_medewerkers_inhuur_not: Exclude matches; number
        :type aantal_medewerkers_inhuur_not: List[float]
        :param aantal_medewerkers_intern: Aantal interne medewerkers dat op het voertuig is gepland.
        :type aantal_medewerkers_intern: float
        :param aantal_medewerkers_intern_gt: Greater than; number
        :type aantal_medewerkers_intern_gt: float
        :param aantal_medewerkers_intern_gte: Greater than or equal to; number
        :type aantal_medewerkers_intern_gte: float
        :param aantal_medewerkers_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_intern_in: List[float]
        :param aantal_medewerkers_intern_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_intern_isnull: bool
        :param aantal_medewerkers_intern_lt: Less than; number
        :type aantal_medewerkers_intern_lt: float
        :param aantal_medewerkers_intern_lte: Less than or equal to; number
        :type aantal_medewerkers_intern_lte: float
        :param aantal_medewerkers_intern_not: Exclude matches; number
        :type aantal_medewerkers_intern_not: List[float]
        :param aantal_medewerkers_gt: Greater than; number
        :type aantal_medewerkers_gt: float
        :param aantal_medewerkers_gte: Greater than or equal to; number
        :type aantal_medewerkers_gte: float
        :param aantal_medewerkers_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aantal_medewerkers_in: List[float]
        :param aantal_medewerkers_isnull: Whether the field has a NULL value or not.
        :type aantal_medewerkers_isnull: bool
        :param aantal_medewerkers_lt: Less than; number
        :type aantal_medewerkers_lt: float
        :param aantal_medewerkers_lte: Less than or equal to; number
        :type aantal_medewerkers_lte: float
        :param aantal_medewerkers_not: Exclude matches; number
        :type aantal_medewerkers_not: List[float]
        :param activiteit: Fractie van de afvalverwerking (afgeleid van categorie, werkzaamheden en of memo).
        :type activiteit: str
        :param activiteit_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type activiteit_in: List[str]
        :param activiteit_isempty: Whether the field is empty or not.
        :type activiteit_isempty: bool
        :param activiteit_isnull: Whether the field has a NULL value or not.
        :type activiteit_isnull: bool
        :param activiteit_like: Matches text using wildcards (? and *).
        :type activiteit_like: str
        :param activiteit_not: Exclude matches; text
        :type activiteit_not: List[str]
        :param categorie: Categorie afvalverwerking waar het voertuig op is gepland.
        :type categorie: str
        :param categorie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type categorie_in: List[str]
        :param categorie_isempty: Whether the field is empty or not.
        :type categorie_isempty: bool
        :param categorie_isnull: Whether the field has a NULL value or not.
        :type categorie_isnull: bool
        :param categorie_like: Matches text using wildcards (? and *).
        :type categorie_like: str
        :param categorie_not: Exclude matches; text
        :type categorie_not: List[str]
        :param datum_aanwezig_bron: Indicatie over de actualiteit van de gegevens in deze set (laatste wijziging in de bron).
        :type datum_aanwezig_bron: datetime
        :param datum_aanwezig_bron_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gt: datetime
        :param datum_aanwezig_bron_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_gte: datetime
        :param datum_aanwezig_bron_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_aanwezig_bron_in: List[datetime]
        :param datum_aanwezig_bron_isnull: Whether the field has a NULL value or not.
        :type datum_aanwezig_bron_isnull: bool
        :param datum_aanwezig_bron_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lt: datetime
        :param datum_aanwezig_bron_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_lte: datetime
        :param datum_aanwezig_bron_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_aanwezig_bron_not: List[datetime]
        :param datum_verwerkt_stadsdelen: Moment van laden data vanuit het (planningsdata)bronsysteem in het DWH stadsdelen (als intermediair voor datalevering).
        :type datum_verwerkt_stadsdelen: datetime
        :param datum_verwerkt_stadsdelen_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gt: datetime
        :param datum_verwerkt_stadsdelen_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_gte: datetime
        :param datum_verwerkt_stadsdelen_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type datum_verwerkt_stadsdelen_in: List[datetime]
        :param datum_verwerkt_stadsdelen_isnull: Whether the field has a NULL value or not.
        :type datum_verwerkt_stadsdelen_isnull: bool
        :param datum_verwerkt_stadsdelen_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lt: datetime
        :param datum_verwerkt_stadsdelen_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_lte: datetime
        :param datum_verwerkt_stadsdelen_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type datum_verwerkt_stadsdelen_not: List[datetime]
        :param fase: Label van de fase waarin de planning zich bevindt.
        :type fase: str
        :param fase_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fase_in: List[str]
        :param fase_isempty: Whether the field is empty or not.
        :type fase_isempty: bool
        :param fase_isnull: Whether the field has a NULL value or not.
        :type fase_isnull: bool
        :param fase_like: Matches text using wildcards (? and *).
        :type fase_like: str
        :param fase_not: Exclude matches; text
        :type fase_not: List[str]
        :param id2: Uniek identificerend kenmerk van het record.
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param kenteken: Kenteken afvalinzamelingsvoertuig.
        :type kenteken: str
        :param kenteken_kort: Kenteken afvalinzamelingsvoertuig zonder koppeltekens (-).
        :type kenteken_kort: str
        :param kenteken_kort_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_kort_in: List[str]
        :param kenteken_kort_isempty: Whether the field is empty or not.
        :type kenteken_kort_isempty: bool
        :param kenteken_kort_isnull: Whether the field has a NULL value or not.
        :type kenteken_kort_isnull: bool
        :param kenteken_kort_like: Matches text using wildcards (? and *).
        :type kenteken_kort_like: str
        :param kenteken_kort_not: Exclude matches; text
        :type kenteken_kort_not: List[str]
        :param kenteken_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type kenteken_in: List[str]
        :param kenteken_isempty: Whether the field is empty or not.
        :type kenteken_isempty: bool
        :param kenteken_isnull: Whether the field has a NULL value or not.
        :type kenteken_isnull: bool
        :param kenteken_like: Matches text using wildcards (? and *).
        :type kenteken_like: str
        :param kenteken_not: Exclude matches; text
        :type kenteken_not: List[str]
        :param memo: Extra toelichting zoals opgegeven in (planningsdata)bronsysteem.
        :type memo: str
        :param memo_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type memo_in: List[str]
        :param memo_isempty: Whether the field is empty or not.
        :type memo_isempty: bool
        :param memo_isnull: Whether the field has a NULL value or not.
        :type memo_isnull: bool
        :param memo_like: Matches text using wildcards (? and *).
        :type memo_like: str
        :param memo_not: Exclude matches; text
        :type memo_not: List[str]
        :param pauze_eindtijd: Eindtijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_eindtijd: str
        :param pauze_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_eindtijd_in: List[str]
        :param pauze_eindtijd_isempty: Whether the field is empty or not.
        :type pauze_eindtijd_isempty: bool
        :param pauze_eindtijd_isnull: Whether the field has a NULL value or not.
        :type pauze_eindtijd_isnull: bool
        :param pauze_eindtijd_like: Matches text using wildcards (? and *).
        :type pauze_eindtijd_like: str
        :param pauze_eindtijd_not: Exclude matches; text
        :type pauze_eindtijd_not: List[str]
        :param pauze_starttijd: Starttijd van de pauze op de WERKZAAMHEDEN_DATUM.
        :type pauze_starttijd: str
        :param pauze_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_starttijd_in: List[str]
        :param pauze_starttijd_isempty: Whether the field is empty or not.
        :type pauze_starttijd_isempty: bool
        :param pauze_starttijd_isnull: Whether the field has a NULL value or not.
        :type pauze_starttijd_isnull: bool
        :param pauze_starttijd_like: Matches text using wildcards (? and *).
        :type pauze_starttijd_like: str
        :param pauze_starttijd_not: Exclude matches; text
        :type pauze_starttijd_not: List[str]
        :param pauze_uren_gepland: Berekening van het aantal bruto uren van de pauze (= eindtijd - starttijd).
        :type pauze_uren_gepland: float
        :param pauze_uren_gepland_gt: Greater than; number
        :type pauze_uren_gepland_gt: float
        :param pauze_uren_gepland_gte: Greater than or equal to; number
        :type pauze_uren_gepland_gte: float
        :param pauze_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type pauze_uren_gepland_in: List[float]
        :param pauze_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type pauze_uren_gepland_isnull: bool
        :param pauze_uren_gepland_lt: Less than; number
        :type pauze_uren_gepland_lt: float
        :param pauze_uren_gepland_lte: Less than or equal to; number
        :type pauze_uren_gepland_lte: float
        :param pauze_uren_gepland_not: Exclude matches; number
        :type pauze_uren_gepland_not: List[float]
        :param soort_werkzaamheden: Specificatie van soort planning (Inzet of Onderhoud).
        :type soort_werkzaamheden: str
        :param soort_werkzaamheden_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_werkzaamheden_in: List[str]
        :param soort_werkzaamheden_isempty: Whether the field is empty or not.
        :type soort_werkzaamheden_isempty: bool
        :param soort_werkzaamheden_isnull: Whether the field has a NULL value or not.
        :type soort_werkzaamheden_isnull: bool
        :param soort_werkzaamheden_like: Matches text using wildcards (? and *).
        :type soort_werkzaamheden_like: str
        :param soort_werkzaamheden_not: Exclude matches; text
        :type soort_werkzaamheden_not: List[str]
        :param team: Team waarvoor de voertuigplanning is gemaakt. In veel gevallen een stadsdeel, maar kan ook bijvoorbeeld Bedrijfsafval Centrum (BAC) zijn).
        :type team: str
        :param team_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type team_in: List[str]
        :param team_isempty: Whether the field is empty or not.
        :type team_isempty: bool
        :param team_isnull: Whether the field has a NULL value or not.
        :type team_isnull: bool
        :param team_like: Matches text using wildcards (? and *).
        :type team_like: str
        :param team_not: Exclude matches; text
        :type team_not: List[str]
        :param uren_inzet_medewerker_inhuur: Som van het totaal aantal netto uren van de externe medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_inhuur: float
        :param uren_inzet_medewerker_inhuur_gt: Greater than; number
        :type uren_inzet_medewerker_inhuur_gt: float
        :param uren_inzet_medewerker_inhuur_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_inhuur_gte: float
        :param uren_inzet_medewerker_inhuur_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_inhuur_in: List[float]
        :param uren_inzet_medewerker_inhuur_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_inhuur_isnull: bool
        :param uren_inzet_medewerker_inhuur_lt: Less than; number
        :type uren_inzet_medewerker_inhuur_lt: float
        :param uren_inzet_medewerker_inhuur_lte: Less than or equal to; number
        :type uren_inzet_medewerker_inhuur_lte: float
        :param uren_inzet_medewerker_inhuur_not: Exclude matches; number
        :type uren_inzet_medewerker_inhuur_not: List[float]
        :param uren_inzet_medewerker_intern: Som van het totaal aantal netto uren van de interne medewerkers die op de planning zijn gezet (excl pauze).
        :type uren_inzet_medewerker_intern: float
        :param uren_inzet_medewerker_intern_gt: Greater than; number
        :type uren_inzet_medewerker_intern_gt: float
        :param uren_inzet_medewerker_intern_gte: Greater than or equal to; number
        :type uren_inzet_medewerker_intern_gte: float
        :param uren_inzet_medewerker_intern_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_medewerker_intern_in: List[float]
        :param uren_inzet_medewerker_intern_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_medewerker_intern_isnull: bool
        :param uren_inzet_medewerker_intern_lt: Less than; number
        :type uren_inzet_medewerker_intern_lt: float
        :param uren_inzet_medewerker_intern_lte: Less than or equal to; number
        :type uren_inzet_medewerker_intern_lte: float
        :param uren_inzet_medewerker_intern_not: Exclude matches; number
        :type uren_inzet_medewerker_intern_not: List[float]
        :param uren_inzet_voertuig: Netto inzeturen van het voertuig (bruto - pauze).
        :type uren_inzet_voertuig: float
        :param uren_inzet_voertuig_gt: Greater than; number
        :type uren_inzet_voertuig_gt: float
        :param uren_inzet_voertuig_gte: Greater than or equal to; number
        :type uren_inzet_voertuig_gte: float
        :param uren_inzet_voertuig_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type uren_inzet_voertuig_in: List[float]
        :param uren_inzet_voertuig_isnull: Whether the field has a NULL value or not.
        :type uren_inzet_voertuig_isnull: bool
        :param uren_inzet_voertuig_lt: Less than; number
        :type uren_inzet_voertuig_lt: float
        :param uren_inzet_voertuig_lte: Less than or equal to; number
        :type uren_inzet_voertuig_lte: float
        :param uren_inzet_voertuig_not: Exclude matches; number
        :type uren_inzet_voertuig_not: List[float]
        :param voertuig_inhuur_indicatie: Is het voertuig ingehuurd (Ja / Nee).
        :type voertuig_inhuur_indicatie: str
        :param voertuig_inhuur_indicatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type voertuig_inhuur_indicatie_in: List[str]
        :param voertuig_inhuur_indicatie_isempty: Whether the field is empty or not.
        :type voertuig_inhuur_indicatie_isempty: bool
        :param voertuig_inhuur_indicatie_isnull: Whether the field has a NULL value or not.
        :type voertuig_inhuur_indicatie_isnull: bool
        :param voertuig_inhuur_indicatie_like: Matches text using wildcards (? and *).
        :type voertuig_inhuur_indicatie_like: str
        :param voertuig_inhuur_indicatie_not: Exclude matches; text
        :type voertuig_inhuur_indicatie_not: List[str]
        :param werkzaamheden_code: Code voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_code: str
        :param werkzaamheden_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_code_in: List[str]
        :param werkzaamheden_code_isempty: Whether the field is empty or not.
        :type werkzaamheden_code_isempty: bool
        :param werkzaamheden_code_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_code_isnull: bool
        :param werkzaamheden_code_like: Matches text using wildcards (? and *).
        :type werkzaamheden_code_like: str
        :param werkzaamheden_code_not: Exclude matches; text
        :type werkzaamheden_code_not: List[str]
        :param werkzaamheden_datum: Datum waarop de werkzaamheden zijn gepland.
        :type werkzaamheden_datum: datetime
        :param werkzaamheden_datum_ref_id: Sleutelveld. Bij niveaucode dag is dit in feite de juliaanse dag. Zo kan bijvoorbeeld het verschil tussen twee datums bepaald worden door het verschil tussen de ID waarden van de datums te berekenen. De id waarden zijn zo geconstrueerd dat dit altijd kan ongeacht de waarde van niveaucode. Dus als b.v. niveaucode is 'Week' dan bevat een verschil in id waarden het aantal weken tussen de twee week records.
        :type werkzaamheden_datum_ref_id: int
        :param werkzaamheden_datum_ref_id_gt: Greater than; number
        :type werkzaamheden_datum_ref_id_gt: int
        :param werkzaamheden_datum_ref_id_gte: Greater than or equal to; number
        :type werkzaamheden_datum_ref_id_gte: int
        :param werkzaamheden_datum_ref_id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_ref_id_in: List[int]
        :param werkzaamheden_datum_ref_id_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_ref_id_isnull: bool
        :param werkzaamheden_datum_ref_id_lt: Less than; number
        :type werkzaamheden_datum_ref_id_lt: int
        :param werkzaamheden_datum_ref_id_lte: Less than or equal to; number
        :type werkzaamheden_datum_ref_id_lte: int
        :param werkzaamheden_datum_ref_id_not: Exclude matches; number
        :type werkzaamheden_datum_ref_id_not: List[int]
        :param werkzaamheden_datum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gt: datetime
        :param werkzaamheden_datum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_gte: datetime
        :param werkzaamheden_datum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_datum_in: List[datetime]
        :param werkzaamheden_datum_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_datum_isnull: bool
        :param werkzaamheden_datum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lt: datetime
        :param werkzaamheden_datum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_lte: datetime
        :param werkzaamheden_datum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type werkzaamheden_datum_not: List[datetime]
        :param werkzaamheden_eindtijd: Eindtijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM.
        :type werkzaamheden_eindtijd: str
        :param werkzaamheden_eindtijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_eindtijd_in: List[str]
        :param werkzaamheden_eindtijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_eindtijd_isempty: bool
        :param werkzaamheden_eindtijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_eindtijd_isnull: bool
        :param werkzaamheden_eindtijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_eindtijd_like: str
        :param werkzaamheden_eindtijd_not: Exclude matches; text
        :type werkzaamheden_eindtijd_not: List[str]
        :param werkzaamheden_omschrijving: Omschrijving voor de werkzaamheden waarop het voertuig is gepland.
        :type werkzaamheden_omschrijving: str
        :param werkzaamheden_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_omschrijving_in: List[str]
        :param werkzaamheden_omschrijving_isempty: Whether the field is empty or not.
        :type werkzaamheden_omschrijving_isempty: bool
        :param werkzaamheden_omschrijving_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_omschrijving_isnull: bool
        :param werkzaamheden_omschrijving_like: Matches text using wildcards (? and *).
        :type werkzaamheden_omschrijving_like: str
        :param werkzaamheden_omschrijving_not: Exclude matches; text
        :type werkzaamheden_omschrijving_not: List[str]
        :param werkzaamheden_starttijd: Starttijd van de werkzaamheden op de WERKZAAMHEDEN_DATUM
        :type werkzaamheden_starttijd: str
        :param werkzaamheden_starttijd_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_starttijd_in: List[str]
        :param werkzaamheden_starttijd_isempty: Whether the field is empty or not.
        :type werkzaamheden_starttijd_isempty: bool
        :param werkzaamheden_starttijd_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_starttijd_isnull: bool
        :param werkzaamheden_starttijd_like: Matches text using wildcards (? and *).
        :type werkzaamheden_starttijd_like: str
        :param werkzaamheden_starttijd_not: Exclude matches; text
        :type werkzaamheden_starttijd_not: List[str]
        :param werkzaamheden_uren_gepland: Berekening van het aantal bruto uren van de werkzaamheden (= eindtijd - starttijd).
        :type werkzaamheden_uren_gepland: float
        :param werkzaamheden_uren_gepland_gt: Greater than; number
        :type werkzaamheden_uren_gepland_gt: float
        :param werkzaamheden_uren_gepland_gte: Greater than or equal to; number
        :type werkzaamheden_uren_gepland_gte: float
        :param werkzaamheden_uren_gepland_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type werkzaamheden_uren_gepland_in: List[float]
        :param werkzaamheden_uren_gepland_isnull: Whether the field has a NULL value or not.
        :type werkzaamheden_uren_gepland_isnull: bool
        :param werkzaamheden_uren_gepland_lt: Less than; number
        :type werkzaamheden_uren_gepland_lt: float
        :param werkzaamheden_uren_gepland_lte: Less than or equal to; number
        :type werkzaamheden_uren_gepland_lte: float
        :param werkzaamheden_uren_gepland_not: Exclude matches; number
        :type werkzaamheden_uren_gepland_not: List[float]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_planning_voertuigen_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aantal_medewerkers=aantal_medewerkers,
            aantal_medewerkers_inhuur=aantal_medewerkers_inhuur,
            aantal_medewerkers_inhuur_gt=aantal_medewerkers_inhuur_gt,
            aantal_medewerkers_inhuur_gte=aantal_medewerkers_inhuur_gte,
            aantal_medewerkers_inhuur_in=aantal_medewerkers_inhuur_in,
            aantal_medewerkers_inhuur_isnull=aantal_medewerkers_inhuur_isnull,
            aantal_medewerkers_inhuur_lt=aantal_medewerkers_inhuur_lt,
            aantal_medewerkers_inhuur_lte=aantal_medewerkers_inhuur_lte,
            aantal_medewerkers_inhuur_not=aantal_medewerkers_inhuur_not,
            aantal_medewerkers_intern=aantal_medewerkers_intern,
            aantal_medewerkers_intern_gt=aantal_medewerkers_intern_gt,
            aantal_medewerkers_intern_gte=aantal_medewerkers_intern_gte,
            aantal_medewerkers_intern_in=aantal_medewerkers_intern_in,
            aantal_medewerkers_intern_isnull=aantal_medewerkers_intern_isnull,
            aantal_medewerkers_intern_lt=aantal_medewerkers_intern_lt,
            aantal_medewerkers_intern_lte=aantal_medewerkers_intern_lte,
            aantal_medewerkers_intern_not=aantal_medewerkers_intern_not,
            aantal_medewerkers_gt=aantal_medewerkers_gt,
            aantal_medewerkers_gte=aantal_medewerkers_gte,
            aantal_medewerkers_in=aantal_medewerkers_in,
            aantal_medewerkers_isnull=aantal_medewerkers_isnull,
            aantal_medewerkers_lt=aantal_medewerkers_lt,
            aantal_medewerkers_lte=aantal_medewerkers_lte,
            aantal_medewerkers_not=aantal_medewerkers_not,
            activiteit=activiteit,
            activiteit_in=activiteit_in,
            activiteit_isempty=activiteit_isempty,
            activiteit_isnull=activiteit_isnull,
            activiteit_like=activiteit_like,
            activiteit_not=activiteit_not,
            categorie=categorie,
            categorie_in=categorie_in,
            categorie_isempty=categorie_isempty,
            categorie_isnull=categorie_isnull,
            categorie_like=categorie_like,
            categorie_not=categorie_not,
            datum_aanwezig_bron=datum_aanwezig_bron,
            datum_aanwezig_bron_gt=datum_aanwezig_bron_gt,
            datum_aanwezig_bron_gte=datum_aanwezig_bron_gte,
            datum_aanwezig_bron_in=datum_aanwezig_bron_in,
            datum_aanwezig_bron_isnull=datum_aanwezig_bron_isnull,
            datum_aanwezig_bron_lt=datum_aanwezig_bron_lt,
            datum_aanwezig_bron_lte=datum_aanwezig_bron_lte,
            datum_aanwezig_bron_not=datum_aanwezig_bron_not,
            datum_verwerkt_stadsdelen=datum_verwerkt_stadsdelen,
            datum_verwerkt_stadsdelen_gt=datum_verwerkt_stadsdelen_gt,
            datum_verwerkt_stadsdelen_gte=datum_verwerkt_stadsdelen_gte,
            datum_verwerkt_stadsdelen_in=datum_verwerkt_stadsdelen_in,
            datum_verwerkt_stadsdelen_isnull=datum_verwerkt_stadsdelen_isnull,
            datum_verwerkt_stadsdelen_lt=datum_verwerkt_stadsdelen_lt,
            datum_verwerkt_stadsdelen_lte=datum_verwerkt_stadsdelen_lte,
            datum_verwerkt_stadsdelen_not=datum_verwerkt_stadsdelen_not,
            fase=fase,
            fase_in=fase_in,
            fase_isempty=fase_isempty,
            fase_isnull=fase_isnull,
            fase_like=fase_like,
            fase_not=fase_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            kenteken=kenteken,
            kenteken_kort=kenteken_kort,
            kenteken_kort_in=kenteken_kort_in,
            kenteken_kort_isempty=kenteken_kort_isempty,
            kenteken_kort_isnull=kenteken_kort_isnull,
            kenteken_kort_like=kenteken_kort_like,
            kenteken_kort_not=kenteken_kort_not,
            kenteken_in=kenteken_in,
            kenteken_isempty=kenteken_isempty,
            kenteken_isnull=kenteken_isnull,
            kenteken_like=kenteken_like,
            kenteken_not=kenteken_not,
            memo=memo,
            memo_in=memo_in,
            memo_isempty=memo_isempty,
            memo_isnull=memo_isnull,
            memo_like=memo_like,
            memo_not=memo_not,
            pauze_eindtijd=pauze_eindtijd,
            pauze_eindtijd_in=pauze_eindtijd_in,
            pauze_eindtijd_isempty=pauze_eindtijd_isempty,
            pauze_eindtijd_isnull=pauze_eindtijd_isnull,
            pauze_eindtijd_like=pauze_eindtijd_like,
            pauze_eindtijd_not=pauze_eindtijd_not,
            pauze_starttijd=pauze_starttijd,
            pauze_starttijd_in=pauze_starttijd_in,
            pauze_starttijd_isempty=pauze_starttijd_isempty,
            pauze_starttijd_isnull=pauze_starttijd_isnull,
            pauze_starttijd_like=pauze_starttijd_like,
            pauze_starttijd_not=pauze_starttijd_not,
            pauze_uren_gepland=pauze_uren_gepland,
            pauze_uren_gepland_gt=pauze_uren_gepland_gt,
            pauze_uren_gepland_gte=pauze_uren_gepland_gte,
            pauze_uren_gepland_in=pauze_uren_gepland_in,
            pauze_uren_gepland_isnull=pauze_uren_gepland_isnull,
            pauze_uren_gepland_lt=pauze_uren_gepland_lt,
            pauze_uren_gepland_lte=pauze_uren_gepland_lte,
            pauze_uren_gepland_not=pauze_uren_gepland_not,
            soort_werkzaamheden=soort_werkzaamheden,
            soort_werkzaamheden_in=soort_werkzaamheden_in,
            soort_werkzaamheden_isempty=soort_werkzaamheden_isempty,
            soort_werkzaamheden_isnull=soort_werkzaamheden_isnull,
            soort_werkzaamheden_like=soort_werkzaamheden_like,
            soort_werkzaamheden_not=soort_werkzaamheden_not,
            team=team,
            team_in=team_in,
            team_isempty=team_isempty,
            team_isnull=team_isnull,
            team_like=team_like,
            team_not=team_not,
            uren_inzet_medewerker_inhuur=uren_inzet_medewerker_inhuur,
            uren_inzet_medewerker_inhuur_gt=uren_inzet_medewerker_inhuur_gt,
            uren_inzet_medewerker_inhuur_gte=uren_inzet_medewerker_inhuur_gte,
            uren_inzet_medewerker_inhuur_in=uren_inzet_medewerker_inhuur_in,
            uren_inzet_medewerker_inhuur_isnull=uren_inzet_medewerker_inhuur_isnull,
            uren_inzet_medewerker_inhuur_lt=uren_inzet_medewerker_inhuur_lt,
            uren_inzet_medewerker_inhuur_lte=uren_inzet_medewerker_inhuur_lte,
            uren_inzet_medewerker_inhuur_not=uren_inzet_medewerker_inhuur_not,
            uren_inzet_medewerker_intern=uren_inzet_medewerker_intern,
            uren_inzet_medewerker_intern_gt=uren_inzet_medewerker_intern_gt,
            uren_inzet_medewerker_intern_gte=uren_inzet_medewerker_intern_gte,
            uren_inzet_medewerker_intern_in=uren_inzet_medewerker_intern_in,
            uren_inzet_medewerker_intern_isnull=uren_inzet_medewerker_intern_isnull,
            uren_inzet_medewerker_intern_lt=uren_inzet_medewerker_intern_lt,
            uren_inzet_medewerker_intern_lte=uren_inzet_medewerker_intern_lte,
            uren_inzet_medewerker_intern_not=uren_inzet_medewerker_intern_not,
            uren_inzet_voertuig=uren_inzet_voertuig,
            uren_inzet_voertuig_gt=uren_inzet_voertuig_gt,
            uren_inzet_voertuig_gte=uren_inzet_voertuig_gte,
            uren_inzet_voertuig_in=uren_inzet_voertuig_in,
            uren_inzet_voertuig_isnull=uren_inzet_voertuig_isnull,
            uren_inzet_voertuig_lt=uren_inzet_voertuig_lt,
            uren_inzet_voertuig_lte=uren_inzet_voertuig_lte,
            uren_inzet_voertuig_not=uren_inzet_voertuig_not,
            voertuig_inhuur_indicatie=voertuig_inhuur_indicatie,
            voertuig_inhuur_indicatie_in=voertuig_inhuur_indicatie_in,
            voertuig_inhuur_indicatie_isempty=voertuig_inhuur_indicatie_isempty,
            voertuig_inhuur_indicatie_isnull=voertuig_inhuur_indicatie_isnull,
            voertuig_inhuur_indicatie_like=voertuig_inhuur_indicatie_like,
            voertuig_inhuur_indicatie_not=voertuig_inhuur_indicatie_not,
            werkzaamheden_code=werkzaamheden_code,
            werkzaamheden_code_in=werkzaamheden_code_in,
            werkzaamheden_code_isempty=werkzaamheden_code_isempty,
            werkzaamheden_code_isnull=werkzaamheden_code_isnull,
            werkzaamheden_code_like=werkzaamheden_code_like,
            werkzaamheden_code_not=werkzaamheden_code_not,
            werkzaamheden_datum=werkzaamheden_datum,
            werkzaamheden_datum_ref_id=werkzaamheden_datum_ref_id,
            werkzaamheden_datum_ref_id_gt=werkzaamheden_datum_ref_id_gt,
            werkzaamheden_datum_ref_id_gte=werkzaamheden_datum_ref_id_gte,
            werkzaamheden_datum_ref_id_in=werkzaamheden_datum_ref_id_in,
            werkzaamheden_datum_ref_id_isnull=werkzaamheden_datum_ref_id_isnull,
            werkzaamheden_datum_ref_id_lt=werkzaamheden_datum_ref_id_lt,
            werkzaamheden_datum_ref_id_lte=werkzaamheden_datum_ref_id_lte,
            werkzaamheden_datum_ref_id_not=werkzaamheden_datum_ref_id_not,
            werkzaamheden_datum_gt=werkzaamheden_datum_gt,
            werkzaamheden_datum_gte=werkzaamheden_datum_gte,
            werkzaamheden_datum_in=werkzaamheden_datum_in,
            werkzaamheden_datum_isnull=werkzaamheden_datum_isnull,
            werkzaamheden_datum_lt=werkzaamheden_datum_lt,
            werkzaamheden_datum_lte=werkzaamheden_datum_lte,
            werkzaamheden_datum_not=werkzaamheden_datum_not,
            werkzaamheden_eindtijd=werkzaamheden_eindtijd,
            werkzaamheden_eindtijd_in=werkzaamheden_eindtijd_in,
            werkzaamheden_eindtijd_isempty=werkzaamheden_eindtijd_isempty,
            werkzaamheden_eindtijd_isnull=werkzaamheden_eindtijd_isnull,
            werkzaamheden_eindtijd_like=werkzaamheden_eindtijd_like,
            werkzaamheden_eindtijd_not=werkzaamheden_eindtijd_not,
            werkzaamheden_omschrijving=werkzaamheden_omschrijving,
            werkzaamheden_omschrijving_in=werkzaamheden_omschrijving_in,
            werkzaamheden_omschrijving_isempty=werkzaamheden_omschrijving_isempty,
            werkzaamheden_omschrijving_isnull=werkzaamheden_omschrijving_isnull,
            werkzaamheden_omschrijving_like=werkzaamheden_omschrijving_like,
            werkzaamheden_omschrijving_not=werkzaamheden_omschrijving_not,
            werkzaamheden_starttijd=werkzaamheden_starttijd,
            werkzaamheden_starttijd_in=werkzaamheden_starttijd_in,
            werkzaamheden_starttijd_isempty=werkzaamheden_starttijd_isempty,
            werkzaamheden_starttijd_isnull=werkzaamheden_starttijd_isnull,
            werkzaamheden_starttijd_like=werkzaamheden_starttijd_like,
            werkzaamheden_starttijd_not=werkzaamheden_starttijd_not,
            werkzaamheden_uren_gepland=werkzaamheden_uren_gepland,
            werkzaamheden_uren_gepland_gt=werkzaamheden_uren_gepland_gt,
            werkzaamheden_uren_gepland_gte=werkzaamheden_uren_gepland_gte,
            werkzaamheden_uren_gepland_in=werkzaamheden_uren_gepland_in,
            werkzaamheden_uren_gepland_isnull=werkzaamheden_uren_gepland_isnull,
            werkzaamheden_uren_gepland_lt=werkzaamheden_uren_gepland_lt,
            werkzaamheden_uren_gepland_lte=werkzaamheden_uren_gepland_lte,
            werkzaamheden_uren_gepland_not=werkzaamheden_uren_gepland_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HuishoudelijkafvalplanningVoertuigen",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_planning_voertuigen_retrieve_slash_serialize(
        self,
        id,
        accept_crs,
        content_crs,
        x_api_key,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        sort,
        aantal_medewerkers,
        aantal_medewerkers_inhuur,
        aantal_medewerkers_inhuur_gt,
        aantal_medewerkers_inhuur_gte,
        aantal_medewerkers_inhuur_in,
        aantal_medewerkers_inhuur_isnull,
        aantal_medewerkers_inhuur_lt,
        aantal_medewerkers_inhuur_lte,
        aantal_medewerkers_inhuur_not,
        aantal_medewerkers_intern,
        aantal_medewerkers_intern_gt,
        aantal_medewerkers_intern_gte,
        aantal_medewerkers_intern_in,
        aantal_medewerkers_intern_isnull,
        aantal_medewerkers_intern_lt,
        aantal_medewerkers_intern_lte,
        aantal_medewerkers_intern_not,
        aantal_medewerkers_gt,
        aantal_medewerkers_gte,
        aantal_medewerkers_in,
        aantal_medewerkers_isnull,
        aantal_medewerkers_lt,
        aantal_medewerkers_lte,
        aantal_medewerkers_not,
        activiteit,
        activiteit_in,
        activiteit_isempty,
        activiteit_isnull,
        activiteit_like,
        activiteit_not,
        categorie,
        categorie_in,
        categorie_isempty,
        categorie_isnull,
        categorie_like,
        categorie_not,
        datum_aanwezig_bron,
        datum_aanwezig_bron_gt,
        datum_aanwezig_bron_gte,
        datum_aanwezig_bron_in,
        datum_aanwezig_bron_isnull,
        datum_aanwezig_bron_lt,
        datum_aanwezig_bron_lte,
        datum_aanwezig_bron_not,
        datum_verwerkt_stadsdelen,
        datum_verwerkt_stadsdelen_gt,
        datum_verwerkt_stadsdelen_gte,
        datum_verwerkt_stadsdelen_in,
        datum_verwerkt_stadsdelen_isnull,
        datum_verwerkt_stadsdelen_lt,
        datum_verwerkt_stadsdelen_lte,
        datum_verwerkt_stadsdelen_not,
        fase,
        fase_in,
        fase_isempty,
        fase_isnull,
        fase_like,
        fase_not,
        id2,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        kenteken,
        kenteken_kort,
        kenteken_kort_in,
        kenteken_kort_isempty,
        kenteken_kort_isnull,
        kenteken_kort_like,
        kenteken_kort_not,
        kenteken_in,
        kenteken_isempty,
        kenteken_isnull,
        kenteken_like,
        kenteken_not,
        memo,
        memo_in,
        memo_isempty,
        memo_isnull,
        memo_like,
        memo_not,
        pauze_eindtijd,
        pauze_eindtijd_in,
        pauze_eindtijd_isempty,
        pauze_eindtijd_isnull,
        pauze_eindtijd_like,
        pauze_eindtijd_not,
        pauze_starttijd,
        pauze_starttijd_in,
        pauze_starttijd_isempty,
        pauze_starttijd_isnull,
        pauze_starttijd_like,
        pauze_starttijd_not,
        pauze_uren_gepland,
        pauze_uren_gepland_gt,
        pauze_uren_gepland_gte,
        pauze_uren_gepland_in,
        pauze_uren_gepland_isnull,
        pauze_uren_gepland_lt,
        pauze_uren_gepland_lte,
        pauze_uren_gepland_not,
        soort_werkzaamheden,
        soort_werkzaamheden_in,
        soort_werkzaamheden_isempty,
        soort_werkzaamheden_isnull,
        soort_werkzaamheden_like,
        soort_werkzaamheden_not,
        team,
        team_in,
        team_isempty,
        team_isnull,
        team_like,
        team_not,
        uren_inzet_medewerker_inhuur,
        uren_inzet_medewerker_inhuur_gt,
        uren_inzet_medewerker_inhuur_gte,
        uren_inzet_medewerker_inhuur_in,
        uren_inzet_medewerker_inhuur_isnull,
        uren_inzet_medewerker_inhuur_lt,
        uren_inzet_medewerker_inhuur_lte,
        uren_inzet_medewerker_inhuur_not,
        uren_inzet_medewerker_intern,
        uren_inzet_medewerker_intern_gt,
        uren_inzet_medewerker_intern_gte,
        uren_inzet_medewerker_intern_in,
        uren_inzet_medewerker_intern_isnull,
        uren_inzet_medewerker_intern_lt,
        uren_inzet_medewerker_intern_lte,
        uren_inzet_medewerker_intern_not,
        uren_inzet_voertuig,
        uren_inzet_voertuig_gt,
        uren_inzet_voertuig_gte,
        uren_inzet_voertuig_in,
        uren_inzet_voertuig_isnull,
        uren_inzet_voertuig_lt,
        uren_inzet_voertuig_lte,
        uren_inzet_voertuig_not,
        voertuig_inhuur_indicatie,
        voertuig_inhuur_indicatie_in,
        voertuig_inhuur_indicatie_isempty,
        voertuig_inhuur_indicatie_isnull,
        voertuig_inhuur_indicatie_like,
        voertuig_inhuur_indicatie_not,
        werkzaamheden_code,
        werkzaamheden_code_in,
        werkzaamheden_code_isempty,
        werkzaamheden_code_isnull,
        werkzaamheden_code_like,
        werkzaamheden_code_not,
        werkzaamheden_datum,
        werkzaamheden_datum_ref_id,
        werkzaamheden_datum_ref_id_gt,
        werkzaamheden_datum_ref_id_gte,
        werkzaamheden_datum_ref_id_in,
        werkzaamheden_datum_ref_id_isnull,
        werkzaamheden_datum_ref_id_lt,
        werkzaamheden_datum_ref_id_lte,
        werkzaamheden_datum_ref_id_not,
        werkzaamheden_datum_gt,
        werkzaamheden_datum_gte,
        werkzaamheden_datum_in,
        werkzaamheden_datum_isnull,
        werkzaamheden_datum_lt,
        werkzaamheden_datum_lte,
        werkzaamheden_datum_not,
        werkzaamheden_eindtijd,
        werkzaamheden_eindtijd_in,
        werkzaamheden_eindtijd_isempty,
        werkzaamheden_eindtijd_isnull,
        werkzaamheden_eindtijd_like,
        werkzaamheden_eindtijd_not,
        werkzaamheden_omschrijving,
        werkzaamheden_omschrijving_in,
        werkzaamheden_omschrijving_isempty,
        werkzaamheden_omschrijving_isnull,
        werkzaamheden_omschrijving_like,
        werkzaamheden_omschrijving_not,
        werkzaamheden_starttijd,
        werkzaamheden_starttijd_in,
        werkzaamheden_starttijd_isempty,
        werkzaamheden_starttijd_isnull,
        werkzaamheden_starttijd_like,
        werkzaamheden_starttijd_not,
        werkzaamheden_uren_gepland,
        werkzaamheden_uren_gepland_gt,
        werkzaamheden_uren_gepland_gte,
        werkzaamheden_uren_gepland_in,
        werkzaamheden_uren_gepland_isnull,
        werkzaamheden_uren_gepland_lt,
        werkzaamheden_uren_gepland_lte,
        werkzaamheden_uren_gepland_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aantalMedewerkersInhuur[in]': 'csv',
            'aantalMedewerkersInhuur[not]': 'multi',
            'aantalMedewerkersIntern[in]': 'csv',
            'aantalMedewerkersIntern[not]': 'multi',
            'aantalMedewerkers[in]': 'csv',
            'aantalMedewerkers[not]': 'multi',
            'activiteit[in]': 'csv',
            'activiteit[not]': 'multi',
            'categorie[in]': 'csv',
            'categorie[not]': 'multi',
            'datumAanwezigBron[in]': 'csv',
            'datumAanwezigBron[not]': 'multi',
            'datumVerwerktStadsdelen[in]': 'csv',
            'datumVerwerktStadsdelen[not]': 'multi',
            'fase[in]': 'csv',
            'fase[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'kentekenKort[in]': 'csv',
            'kentekenKort[not]': 'multi',
            'kenteken[in]': 'csv',
            'kenteken[not]': 'multi',
            'memo[in]': 'csv',
            'memo[not]': 'multi',
            'pauzeEindtijd[in]': 'csv',
            'pauzeEindtijd[not]': 'multi',
            'pauzeStarttijd[in]': 'csv',
            'pauzeStarttijd[not]': 'multi',
            'pauzeUrenGepland[in]': 'csv',
            'pauzeUrenGepland[not]': 'multi',
            'soortWerkzaamheden[in]': 'csv',
            'soortWerkzaamheden[not]': 'multi',
            'team[in]': 'csv',
            'team[not]': 'multi',
            'urenInzetMedewerkerInhuur[in]': 'csv',
            'urenInzetMedewerkerInhuur[not]': 'multi',
            'urenInzetMedewerkerIntern[in]': 'csv',
            'urenInzetMedewerkerIntern[not]': 'multi',
            'urenInzetVoertuig[in]': 'csv',
            'urenInzetVoertuig[not]': 'multi',
            'voertuigInhuurIndicatie[in]': 'csv',
            'voertuigInhuurIndicatie[not]': 'multi',
            'werkzaamhedenCode[in]': 'csv',
            'werkzaamhedenCode[not]': 'multi',
            'werkzaamhedenDatumRef.id[in]': 'csv',
            'werkzaamhedenDatumRef.id[not]': 'multi',
            'werkzaamhedenDatum[in]': 'csv',
            'werkzaamhedenDatum[not]': 'multi',
            'werkzaamhedenEindtijd[in]': 'csv',
            'werkzaamhedenEindtijd[not]': 'multi',
            'werkzaamhedenOmschrijving[in]': 'csv',
            'werkzaamhedenOmschrijving[not]': 'multi',
            'werkzaamhedenStarttijd[in]': 'csv',
            'werkzaamhedenStarttijd[not]': 'multi',
            'werkzaamhedenUrenGepland[in]': 'csv',
            'werkzaamhedenUrenGepland[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aantal_medewerkers is not None:
            
            _query_params.append(('aantalMedewerkers', aantal_medewerkers))
            
        if aantal_medewerkers_inhuur is not None:
            
            _query_params.append(('aantalMedewerkersInhuur', aantal_medewerkers_inhuur))
            
        if aantal_medewerkers_inhuur_gt is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[gt]', aantal_medewerkers_inhuur_gt))
            
        if aantal_medewerkers_inhuur_gte is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[gte]', aantal_medewerkers_inhuur_gte))
            
        if aantal_medewerkers_inhuur_in is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[in]', aantal_medewerkers_inhuur_in))
            
        if aantal_medewerkers_inhuur_isnull is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[isnull]', aantal_medewerkers_inhuur_isnull))
            
        if aantal_medewerkers_inhuur_lt is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[lt]', aantal_medewerkers_inhuur_lt))
            
        if aantal_medewerkers_inhuur_lte is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[lte]', aantal_medewerkers_inhuur_lte))
            
        if aantal_medewerkers_inhuur_not is not None:
            
            _query_params.append(('aantalMedewerkersInhuur[not]', aantal_medewerkers_inhuur_not))
            
        if aantal_medewerkers_intern is not None:
            
            _query_params.append(('aantalMedewerkersIntern', aantal_medewerkers_intern))
            
        if aantal_medewerkers_intern_gt is not None:
            
            _query_params.append(('aantalMedewerkersIntern[gt]', aantal_medewerkers_intern_gt))
            
        if aantal_medewerkers_intern_gte is not None:
            
            _query_params.append(('aantalMedewerkersIntern[gte]', aantal_medewerkers_intern_gte))
            
        if aantal_medewerkers_intern_in is not None:
            
            _query_params.append(('aantalMedewerkersIntern[in]', aantal_medewerkers_intern_in))
            
        if aantal_medewerkers_intern_isnull is not None:
            
            _query_params.append(('aantalMedewerkersIntern[isnull]', aantal_medewerkers_intern_isnull))
            
        if aantal_medewerkers_intern_lt is not None:
            
            _query_params.append(('aantalMedewerkersIntern[lt]', aantal_medewerkers_intern_lt))
            
        if aantal_medewerkers_intern_lte is not None:
            
            _query_params.append(('aantalMedewerkersIntern[lte]', aantal_medewerkers_intern_lte))
            
        if aantal_medewerkers_intern_not is not None:
            
            _query_params.append(('aantalMedewerkersIntern[not]', aantal_medewerkers_intern_not))
            
        if aantal_medewerkers_gt is not None:
            
            _query_params.append(('aantalMedewerkers[gt]', aantal_medewerkers_gt))
            
        if aantal_medewerkers_gte is not None:
            
            _query_params.append(('aantalMedewerkers[gte]', aantal_medewerkers_gte))
            
        if aantal_medewerkers_in is not None:
            
            _query_params.append(('aantalMedewerkers[in]', aantal_medewerkers_in))
            
        if aantal_medewerkers_isnull is not None:
            
            _query_params.append(('aantalMedewerkers[isnull]', aantal_medewerkers_isnull))
            
        if aantal_medewerkers_lt is not None:
            
            _query_params.append(('aantalMedewerkers[lt]', aantal_medewerkers_lt))
            
        if aantal_medewerkers_lte is not None:
            
            _query_params.append(('aantalMedewerkers[lte]', aantal_medewerkers_lte))
            
        if aantal_medewerkers_not is not None:
            
            _query_params.append(('aantalMedewerkers[not]', aantal_medewerkers_not))
            
        if activiteit is not None:
            
            _query_params.append(('activiteit', activiteit))
            
        if activiteit_in is not None:
            
            _query_params.append(('activiteit[in]', activiteit_in))
            
        if activiteit_isempty is not None:
            
            _query_params.append(('activiteit[isempty]', activiteit_isempty))
            
        if activiteit_isnull is not None:
            
            _query_params.append(('activiteit[isnull]', activiteit_isnull))
            
        if activiteit_like is not None:
            
            _query_params.append(('activiteit[like]', activiteit_like))
            
        if activiteit_not is not None:
            
            _query_params.append(('activiteit[not]', activiteit_not))
            
        if categorie is not None:
            
            _query_params.append(('categorie', categorie))
            
        if categorie_in is not None:
            
            _query_params.append(('categorie[in]', categorie_in))
            
        if categorie_isempty is not None:
            
            _query_params.append(('categorie[isempty]', categorie_isempty))
            
        if categorie_isnull is not None:
            
            _query_params.append(('categorie[isnull]', categorie_isnull))
            
        if categorie_like is not None:
            
            _query_params.append(('categorie[like]', categorie_like))
            
        if categorie_not is not None:
            
            _query_params.append(('categorie[not]', categorie_not))
            
        if datum_aanwezig_bron is not None:
            if isinstance(datum_aanwezig_bron, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron',
                        datum_aanwezig_bron.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron', datum_aanwezig_bron))
            
        if datum_aanwezig_bron_gt is not None:
            if isinstance(datum_aanwezig_bron_gt, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[gt]',
                        datum_aanwezig_bron_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[gt]', datum_aanwezig_bron_gt))
            
        if datum_aanwezig_bron_gte is not None:
            if isinstance(datum_aanwezig_bron_gte, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[gte]',
                        datum_aanwezig_bron_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[gte]', datum_aanwezig_bron_gte))
            
        if datum_aanwezig_bron_in is not None:
            
            _query_params.append(('datumAanwezigBron[in]', datum_aanwezig_bron_in))
            
        if datum_aanwezig_bron_isnull is not None:
            
            _query_params.append(('datumAanwezigBron[isnull]', datum_aanwezig_bron_isnull))
            
        if datum_aanwezig_bron_lt is not None:
            if isinstance(datum_aanwezig_bron_lt, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[lt]',
                        datum_aanwezig_bron_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[lt]', datum_aanwezig_bron_lt))
            
        if datum_aanwezig_bron_lte is not None:
            if isinstance(datum_aanwezig_bron_lte, datetime):
                _query_params.append(
                    (
                        'datumAanwezigBron[lte]',
                        datum_aanwezig_bron_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumAanwezigBron[lte]', datum_aanwezig_bron_lte))
            
        if datum_aanwezig_bron_not is not None:
            
            _query_params.append(('datumAanwezigBron[not]', datum_aanwezig_bron_not))
            
        if datum_verwerkt_stadsdelen is not None:
            if isinstance(datum_verwerkt_stadsdelen, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen',
                        datum_verwerkt_stadsdelen.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen', datum_verwerkt_stadsdelen))
            
        if datum_verwerkt_stadsdelen_gt is not None:
            if isinstance(datum_verwerkt_stadsdelen_gt, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[gt]',
                        datum_verwerkt_stadsdelen_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[gt]', datum_verwerkt_stadsdelen_gt))
            
        if datum_verwerkt_stadsdelen_gte is not None:
            if isinstance(datum_verwerkt_stadsdelen_gte, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[gte]',
                        datum_verwerkt_stadsdelen_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[gte]', datum_verwerkt_stadsdelen_gte))
            
        if datum_verwerkt_stadsdelen_in is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[in]', datum_verwerkt_stadsdelen_in))
            
        if datum_verwerkt_stadsdelen_isnull is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[isnull]', datum_verwerkt_stadsdelen_isnull))
            
        if datum_verwerkt_stadsdelen_lt is not None:
            if isinstance(datum_verwerkt_stadsdelen_lt, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[lt]',
                        datum_verwerkt_stadsdelen_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[lt]', datum_verwerkt_stadsdelen_lt))
            
        if datum_verwerkt_stadsdelen_lte is not None:
            if isinstance(datum_verwerkt_stadsdelen_lte, datetime):
                _query_params.append(
                    (
                        'datumVerwerktStadsdelen[lte]',
                        datum_verwerkt_stadsdelen_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('datumVerwerktStadsdelen[lte]', datum_verwerkt_stadsdelen_lte))
            
        if datum_verwerkt_stadsdelen_not is not None:
            
            _query_params.append(('datumVerwerktStadsdelen[not]', datum_verwerkt_stadsdelen_not))
            
        if fase is not None:
            
            _query_params.append(('fase', fase))
            
        if fase_in is not None:
            
            _query_params.append(('fase[in]', fase_in))
            
        if fase_isempty is not None:
            
            _query_params.append(('fase[isempty]', fase_isempty))
            
        if fase_isnull is not None:
            
            _query_params.append(('fase[isnull]', fase_isnull))
            
        if fase_like is not None:
            
            _query_params.append(('fase[like]', fase_like))
            
        if fase_not is not None:
            
            _query_params.append(('fase[not]', fase_not))
            
        if id2 is not None:
            
            _query_params.append(('id', id2))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if kenteken is not None:
            
            _query_params.append(('kenteken', kenteken))
            
        if kenteken_kort is not None:
            
            _query_params.append(('kentekenKort', kenteken_kort))
            
        if kenteken_kort_in is not None:
            
            _query_params.append(('kentekenKort[in]', kenteken_kort_in))
            
        if kenteken_kort_isempty is not None:
            
            _query_params.append(('kentekenKort[isempty]', kenteken_kort_isempty))
            
        if kenteken_kort_isnull is not None:
            
            _query_params.append(('kentekenKort[isnull]', kenteken_kort_isnull))
            
        if kenteken_kort_like is not None:
            
            _query_params.append(('kentekenKort[like]', kenteken_kort_like))
            
        if kenteken_kort_not is not None:
            
            _query_params.append(('kentekenKort[not]', kenteken_kort_not))
            
        if kenteken_in is not None:
            
            _query_params.append(('kenteken[in]', kenteken_in))
            
        if kenteken_isempty is not None:
            
            _query_params.append(('kenteken[isempty]', kenteken_isempty))
            
        if kenteken_isnull is not None:
            
            _query_params.append(('kenteken[isnull]', kenteken_isnull))
            
        if kenteken_like is not None:
            
            _query_params.append(('kenteken[like]', kenteken_like))
            
        if kenteken_not is not None:
            
            _query_params.append(('kenteken[not]', kenteken_not))
            
        if memo is not None:
            
            _query_params.append(('memo', memo))
            
        if memo_in is not None:
            
            _query_params.append(('memo[in]', memo_in))
            
        if memo_isempty is not None:
            
            _query_params.append(('memo[isempty]', memo_isempty))
            
        if memo_isnull is not None:
            
            _query_params.append(('memo[isnull]', memo_isnull))
            
        if memo_like is not None:
            
            _query_params.append(('memo[like]', memo_like))
            
        if memo_not is not None:
            
            _query_params.append(('memo[not]', memo_not))
            
        if pauze_eindtijd is not None:
            
            _query_params.append(('pauzeEindtijd', pauze_eindtijd))
            
        if pauze_eindtijd_in is not None:
            
            _query_params.append(('pauzeEindtijd[in]', pauze_eindtijd_in))
            
        if pauze_eindtijd_isempty is not None:
            
            _query_params.append(('pauzeEindtijd[isempty]', pauze_eindtijd_isempty))
            
        if pauze_eindtijd_isnull is not None:
            
            _query_params.append(('pauzeEindtijd[isnull]', pauze_eindtijd_isnull))
            
        if pauze_eindtijd_like is not None:
            
            _query_params.append(('pauzeEindtijd[like]', pauze_eindtijd_like))
            
        if pauze_eindtijd_not is not None:
            
            _query_params.append(('pauzeEindtijd[not]', pauze_eindtijd_not))
            
        if pauze_starttijd is not None:
            
            _query_params.append(('pauzeStarttijd', pauze_starttijd))
            
        if pauze_starttijd_in is not None:
            
            _query_params.append(('pauzeStarttijd[in]', pauze_starttijd_in))
            
        if pauze_starttijd_isempty is not None:
            
            _query_params.append(('pauzeStarttijd[isempty]', pauze_starttijd_isempty))
            
        if pauze_starttijd_isnull is not None:
            
            _query_params.append(('pauzeStarttijd[isnull]', pauze_starttijd_isnull))
            
        if pauze_starttijd_like is not None:
            
            _query_params.append(('pauzeStarttijd[like]', pauze_starttijd_like))
            
        if pauze_starttijd_not is not None:
            
            _query_params.append(('pauzeStarttijd[not]', pauze_starttijd_not))
            
        if pauze_uren_gepland is not None:
            
            _query_params.append(('pauzeUrenGepland', pauze_uren_gepland))
            
        if pauze_uren_gepland_gt is not None:
            
            _query_params.append(('pauzeUrenGepland[gt]', pauze_uren_gepland_gt))
            
        if pauze_uren_gepland_gte is not None:
            
            _query_params.append(('pauzeUrenGepland[gte]', pauze_uren_gepland_gte))
            
        if pauze_uren_gepland_in is not None:
            
            _query_params.append(('pauzeUrenGepland[in]', pauze_uren_gepland_in))
            
        if pauze_uren_gepland_isnull is not None:
            
            _query_params.append(('pauzeUrenGepland[isnull]', pauze_uren_gepland_isnull))
            
        if pauze_uren_gepland_lt is not None:
            
            _query_params.append(('pauzeUrenGepland[lt]', pauze_uren_gepland_lt))
            
        if pauze_uren_gepland_lte is not None:
            
            _query_params.append(('pauzeUrenGepland[lte]', pauze_uren_gepland_lte))
            
        if pauze_uren_gepland_not is not None:
            
            _query_params.append(('pauzeUrenGepland[not]', pauze_uren_gepland_not))
            
        if soort_werkzaamheden is not None:
            
            _query_params.append(('soortWerkzaamheden', soort_werkzaamheden))
            
        if soort_werkzaamheden_in is not None:
            
            _query_params.append(('soortWerkzaamheden[in]', soort_werkzaamheden_in))
            
        if soort_werkzaamheden_isempty is not None:
            
            _query_params.append(('soortWerkzaamheden[isempty]', soort_werkzaamheden_isempty))
            
        if soort_werkzaamheden_isnull is not None:
            
            _query_params.append(('soortWerkzaamheden[isnull]', soort_werkzaamheden_isnull))
            
        if soort_werkzaamheden_like is not None:
            
            _query_params.append(('soortWerkzaamheden[like]', soort_werkzaamheden_like))
            
        if soort_werkzaamheden_not is not None:
            
            _query_params.append(('soortWerkzaamheden[not]', soort_werkzaamheden_not))
            
        if team is not None:
            
            _query_params.append(('team', team))
            
        if team_in is not None:
            
            _query_params.append(('team[in]', team_in))
            
        if team_isempty is not None:
            
            _query_params.append(('team[isempty]', team_isempty))
            
        if team_isnull is not None:
            
            _query_params.append(('team[isnull]', team_isnull))
            
        if team_like is not None:
            
            _query_params.append(('team[like]', team_like))
            
        if team_not is not None:
            
            _query_params.append(('team[not]', team_not))
            
        if uren_inzet_medewerker_inhuur is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur', uren_inzet_medewerker_inhuur))
            
        if uren_inzet_medewerker_inhuur_gt is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[gt]', uren_inzet_medewerker_inhuur_gt))
            
        if uren_inzet_medewerker_inhuur_gte is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[gte]', uren_inzet_medewerker_inhuur_gte))
            
        if uren_inzet_medewerker_inhuur_in is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[in]', uren_inzet_medewerker_inhuur_in))
            
        if uren_inzet_medewerker_inhuur_isnull is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[isnull]', uren_inzet_medewerker_inhuur_isnull))
            
        if uren_inzet_medewerker_inhuur_lt is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[lt]', uren_inzet_medewerker_inhuur_lt))
            
        if uren_inzet_medewerker_inhuur_lte is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[lte]', uren_inzet_medewerker_inhuur_lte))
            
        if uren_inzet_medewerker_inhuur_not is not None:
            
            _query_params.append(('urenInzetMedewerkerInhuur[not]', uren_inzet_medewerker_inhuur_not))
            
        if uren_inzet_medewerker_intern is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern', uren_inzet_medewerker_intern))
            
        if uren_inzet_medewerker_intern_gt is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[gt]', uren_inzet_medewerker_intern_gt))
            
        if uren_inzet_medewerker_intern_gte is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[gte]', uren_inzet_medewerker_intern_gte))
            
        if uren_inzet_medewerker_intern_in is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[in]', uren_inzet_medewerker_intern_in))
            
        if uren_inzet_medewerker_intern_isnull is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[isnull]', uren_inzet_medewerker_intern_isnull))
            
        if uren_inzet_medewerker_intern_lt is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[lt]', uren_inzet_medewerker_intern_lt))
            
        if uren_inzet_medewerker_intern_lte is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[lte]', uren_inzet_medewerker_intern_lte))
            
        if uren_inzet_medewerker_intern_not is not None:
            
            _query_params.append(('urenInzetMedewerkerIntern[not]', uren_inzet_medewerker_intern_not))
            
        if uren_inzet_voertuig is not None:
            
            _query_params.append(('urenInzetVoertuig', uren_inzet_voertuig))
            
        if uren_inzet_voertuig_gt is not None:
            
            _query_params.append(('urenInzetVoertuig[gt]', uren_inzet_voertuig_gt))
            
        if uren_inzet_voertuig_gte is not None:
            
            _query_params.append(('urenInzetVoertuig[gte]', uren_inzet_voertuig_gte))
            
        if uren_inzet_voertuig_in is not None:
            
            _query_params.append(('urenInzetVoertuig[in]', uren_inzet_voertuig_in))
            
        if uren_inzet_voertuig_isnull is not None:
            
            _query_params.append(('urenInzetVoertuig[isnull]', uren_inzet_voertuig_isnull))
            
        if uren_inzet_voertuig_lt is not None:
            
            _query_params.append(('urenInzetVoertuig[lt]', uren_inzet_voertuig_lt))
            
        if uren_inzet_voertuig_lte is not None:
            
            _query_params.append(('urenInzetVoertuig[lte]', uren_inzet_voertuig_lte))
            
        if uren_inzet_voertuig_not is not None:
            
            _query_params.append(('urenInzetVoertuig[not]', uren_inzet_voertuig_not))
            
        if voertuig_inhuur_indicatie is not None:
            
            _query_params.append(('voertuigInhuurIndicatie', voertuig_inhuur_indicatie))
            
        if voertuig_inhuur_indicatie_in is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[in]', voertuig_inhuur_indicatie_in))
            
        if voertuig_inhuur_indicatie_isempty is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[isempty]', voertuig_inhuur_indicatie_isempty))
            
        if voertuig_inhuur_indicatie_isnull is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[isnull]', voertuig_inhuur_indicatie_isnull))
            
        if voertuig_inhuur_indicatie_like is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[like]', voertuig_inhuur_indicatie_like))
            
        if voertuig_inhuur_indicatie_not is not None:
            
            _query_params.append(('voertuigInhuurIndicatie[not]', voertuig_inhuur_indicatie_not))
            
        if werkzaamheden_code is not None:
            
            _query_params.append(('werkzaamhedenCode', werkzaamheden_code))
            
        if werkzaamheden_code_in is not None:
            
            _query_params.append(('werkzaamhedenCode[in]', werkzaamheden_code_in))
            
        if werkzaamheden_code_isempty is not None:
            
            _query_params.append(('werkzaamhedenCode[isempty]', werkzaamheden_code_isempty))
            
        if werkzaamheden_code_isnull is not None:
            
            _query_params.append(('werkzaamhedenCode[isnull]', werkzaamheden_code_isnull))
            
        if werkzaamheden_code_like is not None:
            
            _query_params.append(('werkzaamhedenCode[like]', werkzaamheden_code_like))
            
        if werkzaamheden_code_not is not None:
            
            _query_params.append(('werkzaamhedenCode[not]', werkzaamheden_code_not))
            
        if werkzaamheden_datum is not None:
            if isinstance(werkzaamheden_datum, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum',
                        werkzaamheden_datum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum', werkzaamheden_datum))
            
        if werkzaamheden_datum_ref_id is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id', werkzaamheden_datum_ref_id))
            
        if werkzaamheden_datum_ref_id_gt is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[gt]', werkzaamheden_datum_ref_id_gt))
            
        if werkzaamheden_datum_ref_id_gte is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[gte]', werkzaamheden_datum_ref_id_gte))
            
        if werkzaamheden_datum_ref_id_in is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[in]', werkzaamheden_datum_ref_id_in))
            
        if werkzaamheden_datum_ref_id_isnull is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[isnull]', werkzaamheden_datum_ref_id_isnull))
            
        if werkzaamheden_datum_ref_id_lt is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[lt]', werkzaamheden_datum_ref_id_lt))
            
        if werkzaamheden_datum_ref_id_lte is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[lte]', werkzaamheden_datum_ref_id_lte))
            
        if werkzaamheden_datum_ref_id_not is not None:
            
            _query_params.append(('werkzaamhedenDatumRef.id[not]', werkzaamheden_datum_ref_id_not))
            
        if werkzaamheden_datum_gt is not None:
            if isinstance(werkzaamheden_datum_gt, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[gt]',
                        werkzaamheden_datum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[gt]', werkzaamheden_datum_gt))
            
        if werkzaamheden_datum_gte is not None:
            if isinstance(werkzaamheden_datum_gte, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[gte]',
                        werkzaamheden_datum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[gte]', werkzaamheden_datum_gte))
            
        if werkzaamheden_datum_in is not None:
            
            _query_params.append(('werkzaamhedenDatum[in]', werkzaamheden_datum_in))
            
        if werkzaamheden_datum_isnull is not None:
            
            _query_params.append(('werkzaamhedenDatum[isnull]', werkzaamheden_datum_isnull))
            
        if werkzaamheden_datum_lt is not None:
            if isinstance(werkzaamheden_datum_lt, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[lt]',
                        werkzaamheden_datum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[lt]', werkzaamheden_datum_lt))
            
        if werkzaamheden_datum_lte is not None:
            if isinstance(werkzaamheden_datum_lte, datetime):
                _query_params.append(
                    (
                        'werkzaamhedenDatum[lte]',
                        werkzaamheden_datum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('werkzaamhedenDatum[lte]', werkzaamheden_datum_lte))
            
        if werkzaamheden_datum_not is not None:
            
            _query_params.append(('werkzaamhedenDatum[not]', werkzaamheden_datum_not))
            
        if werkzaamheden_eindtijd is not None:
            
            _query_params.append(('werkzaamhedenEindtijd', werkzaamheden_eindtijd))
            
        if werkzaamheden_eindtijd_in is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[in]', werkzaamheden_eindtijd_in))
            
        if werkzaamheden_eindtijd_isempty is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[isempty]', werkzaamheden_eindtijd_isempty))
            
        if werkzaamheden_eindtijd_isnull is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[isnull]', werkzaamheden_eindtijd_isnull))
            
        if werkzaamheden_eindtijd_like is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[like]', werkzaamheden_eindtijd_like))
            
        if werkzaamheden_eindtijd_not is not None:
            
            _query_params.append(('werkzaamhedenEindtijd[not]', werkzaamheden_eindtijd_not))
            
        if werkzaamheden_omschrijving is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving', werkzaamheden_omschrijving))
            
        if werkzaamheden_omschrijving_in is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[in]', werkzaamheden_omschrijving_in))
            
        if werkzaamheden_omschrijving_isempty is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[isempty]', werkzaamheden_omschrijving_isempty))
            
        if werkzaamheden_omschrijving_isnull is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[isnull]', werkzaamheden_omschrijving_isnull))
            
        if werkzaamheden_omschrijving_like is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[like]', werkzaamheden_omschrijving_like))
            
        if werkzaamheden_omschrijving_not is not None:
            
            _query_params.append(('werkzaamhedenOmschrijving[not]', werkzaamheden_omschrijving_not))
            
        if werkzaamheden_starttijd is not None:
            
            _query_params.append(('werkzaamhedenStarttijd', werkzaamheden_starttijd))
            
        if werkzaamheden_starttijd_in is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[in]', werkzaamheden_starttijd_in))
            
        if werkzaamheden_starttijd_isempty is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[isempty]', werkzaamheden_starttijd_isempty))
            
        if werkzaamheden_starttijd_isnull is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[isnull]', werkzaamheden_starttijd_isnull))
            
        if werkzaamheden_starttijd_like is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[like]', werkzaamheden_starttijd_like))
            
        if werkzaamheden_starttijd_not is not None:
            
            _query_params.append(('werkzaamhedenStarttijd[not]', werkzaamheden_starttijd_not))
            
        if werkzaamheden_uren_gepland is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland', werkzaamheden_uren_gepland))
            
        if werkzaamheden_uren_gepland_gt is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[gt]', werkzaamheden_uren_gepland_gt))
            
        if werkzaamheden_uren_gepland_gte is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[gte]', werkzaamheden_uren_gepland_gte))
            
        if werkzaamheden_uren_gepland_in is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[in]', werkzaamheden_uren_gepland_in))
            
        if werkzaamheden_uren_gepland_isnull is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[isnull]', werkzaamheden_uren_gepland_isnull))
            
        if werkzaamheden_uren_gepland_lt is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[lt]', werkzaamheden_uren_gepland_lt))
            
        if werkzaamheden_uren_gepland_lte is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[lte]', werkzaamheden_uren_gepland_lte))
            
        if werkzaamheden_uren_gepland_not is not None:
            
            _query_params.append(('werkzaamhedenUrenGepland[not]', werkzaamheden_uren_gepland_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/planning_voertuigen/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


