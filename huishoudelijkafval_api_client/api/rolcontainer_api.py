# coding: utf-8

"""
    Afvalcontainers, putten en weeggegevens

    Alle locaties van afvalcontainers (ondergrondse afvalcontainers, bovengrondse afvalcontainers en rolcontainers) en  betonputten van de Gemeente Amsterdam. De locaties worden dagelijks bijgewerkt en bevatten de fracties Rest, Papier, Glas en Textiel. Naast de objectinformatie zijn ook de weeggegevens beschikbaar.

    The version of the OpenAPI document: 2.5.0
    Contact: datapunt@amsterdam.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import date, datetime
from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from huishoudelijkafval_api_client.models.huishoudelijkafvalrolcontainer import Huishoudelijkafvalrolcontainer
from huishoudelijkafval_api_client.models.paginated_huishoudelijkafvalrolcontainer_list import PaginatedHuishoudelijkafvalrolcontainerList

from huishoudelijkafval_api_client.api_client import ApiClient, RequestSerialized
from huishoudelijkafval_api_client.api_response import ApiResponse
from huishoudelijkafval_api_client.rest import RESTResponseType


class RolcontainerApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    async def huishoudelijkafval_rolcontainer_list_slash(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedHuishoudelijkafvalrolcontainerList:
        """huishoudelijkafval_rolcontainer_list_slash

        Deze tabel bevat informatie over de stanmgegevens van de rolcontainers in Gemeente Amsterdam

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id: Unieke aanduiding van een rolcontainer
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param page: A page number within the paginated result set.
        :type page: int
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            page=page,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_rolcontainer_list_slash_with_http_info(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedHuishoudelijkafvalrolcontainerList]:
        """huishoudelijkafval_rolcontainer_list_slash

        Deze tabel bevat informatie over de stanmgegevens van de rolcontainers in Gemeente Amsterdam

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id: Unieke aanduiding van een rolcontainer
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param page: A page number within the paginated result set.
        :type page: int
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            page=page,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_rolcontainer_list_slash_without_preload_content(
        self,
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        count: Annotated[Optional[StrictBool], Field(description="Include a count of the total result set and the number of pages.Only works for responses that return a page.")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of results to return per page.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        page: Annotated[Optional[StrictInt], Field(description="A page number within the paginated result set.")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_rolcontainer_list_slash

        Deze tabel bevat informatie over de stanmgegevens van de rolcontainers in Gemeente Amsterdam

        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param count: Include a count of the total result set and the number of pages.Only works for responses that return a page.
        :type count: bool
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param page_size: Number of results to return per page.
        :type page_size: int
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id: Unieke aanduiding van een rolcontainer
        :type id: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param page: A page number within the paginated result set.
        :type page: int
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_list_slash_serialize(
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            count=count,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            page_size=page_size,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id=id,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            page=page,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedHuishoudelijkafvalrolcontainerList",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_rolcontainer_list_slash_serialize(
        self,
        accept_crs,
        content_crs,
        x_api_key,
        count,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        page_size,
        sort,
        aanmaakdatum,
        aanmaakdatum_gt,
        aanmaakdatum_gte,
        aanmaakdatum_in,
        aanmaakdatum_isnull,
        aanmaakdatum_lt,
        aanmaakdatum_lte,
        aanmaakdatum_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_openbareruimte_identificatie,
        bag_openbareruimte_identificatie_in,
        bag_openbareruimte_identificatie_isempty,
        bag_openbareruimte_identificatie_isnull,
        bag_openbareruimte_identificatie_like,
        bag_openbareruimte_identificatie_not,
        bag_verblijfsobject_identificatie,
        bag_verblijfsobject_identificatie_in,
        bag_verblijfsobject_identificatie_isempty,
        bag_verblijfsobject_identificatie_isnull,
        bag_verblijfsobject_identificatie_like,
        bag_verblijfsobject_identificatie_not,
        bag_woonplaats_identificatie,
        bag_woonplaats_identificatie_in,
        bag_woonplaats_identificatie_isempty,
        bag_woonplaats_identificatie_isnull,
        bag_woonplaats_identificatie_like,
        bag_woonplaats_identificatie_not,
        barcode,
        barcode_in,
        barcode_isempty,
        barcode_isnull,
        barcode_like,
        barcode_not,
        chip_nummer,
        chip_nummer_in,
        chip_nummer_isempty,
        chip_nummer_isnull,
        chip_nummer_like,
        chip_nummer_not,
        chip_type,
        chip_type_in,
        chip_type_isempty,
        chip_type_isnull,
        chip_type_like,
        chip_type_not,
        fractie_omschrijving,
        fractie_omschrijving_in,
        fractie_omschrijving_isempty,
        fractie_omschrijving_isnull,
        fractie_omschrijving_like,
        fractie_omschrijving_not,
        gebied_buurt_identificatie,
        gebied_buurt_identificatie_in,
        gebied_buurt_identificatie_isempty,
        gebied_buurt_identificatie_isnull,
        gebied_buurt_identificatie_like,
        gebied_buurt_identificatie_not,
        gebied_buurt_code,
        gebied_buurt_code_in,
        gebied_buurt_code_isempty,
        gebied_buurt_code_isnull,
        gebied_buurt_code_like,
        gebied_buurt_code_not,
        gebied_buurt_naam,
        gebied_buurt_naam_in,
        gebied_buurt_naam_isempty,
        gebied_buurt_naam_isnull,
        gebied_buurt_naam_like,
        gebied_buurt_naam_not,
        gebied_ggw_identificatie,
        gebied_ggw_identificatie_in,
        gebied_ggw_identificatie_isempty,
        gebied_ggw_identificatie_isnull,
        gebied_ggw_identificatie_like,
        gebied_ggw_identificatie_not,
        gebied_ggw_code,
        gebied_ggw_code_in,
        gebied_ggw_code_isempty,
        gebied_ggw_code_isnull,
        gebied_ggw_code_like,
        gebied_ggw_code_not,
        gebied_ggw_naam,
        gebied_ggw_naam_in,
        gebied_ggw_naam_isempty,
        gebied_ggw_naam_isnull,
        gebied_ggw_naam_like,
        gebied_ggw_naam_not,
        gebied_stadsdeel_identificatie,
        gebied_stadsdeel_identificatie_in,
        gebied_stadsdeel_identificatie_isempty,
        gebied_stadsdeel_identificatie_isnull,
        gebied_stadsdeel_identificatie_like,
        gebied_stadsdeel_identificatie_not,
        gebied_stadsdeel_code,
        gebied_stadsdeel_code_in,
        gebied_stadsdeel_code_isempty,
        gebied_stadsdeel_code_isnull,
        gebied_stadsdeel_code_like,
        gebied_stadsdeel_code_not,
        gebied_stadsdeel_naam,
        gebied_stadsdeel_naam_in,
        gebied_stadsdeel_naam_isempty,
        gebied_stadsdeel_naam_isnull,
        gebied_stadsdeel_naam_like,
        gebied_stadsdeel_naam_not,
        gebied_wijk_identificatie,
        gebied_wijk_identificatie_in,
        gebied_wijk_identificatie_isempty,
        gebied_wijk_identificatie_isnull,
        gebied_wijk_identificatie_like,
        gebied_wijk_identificatie_not,
        gebied_wijk_code,
        gebied_wijk_code_in,
        gebied_wijk_code_isempty,
        gebied_wijk_code_isnull,
        gebied_wijk_code_like,
        gebied_wijk_code_not,
        gebied_wijk_naam,
        gebied_wijk_naam_in,
        gebied_wijk_naam_isempty,
        gebied_wijk_naam_isnull,
        gebied_wijk_naam_like,
        gebied_wijk_naam_not,
        gebruiksdoel,
        gebruiksdoel_in,
        gebruiksdoel_isempty,
        gebruiksdoel_isnull,
        gebruiksdoel_like,
        gebruiksdoel_not,
        geometrie,
        geometrie_intersects,
        geometrie_isnull,
        geometrie_not,
        heeft_barcode_sinds,
        heeft_barcode_sinds_gt,
        heeft_barcode_sinds_gte,
        heeft_barcode_sinds_in,
        heeft_barcode_sinds_isnull,
        heeft_barcode_sinds_lt,
        heeft_barcode_sinds_lte,
        heeft_barcode_sinds_not,
        heeft_chip_sinds,
        heeft_chip_sinds_gt,
        heeft_chip_sinds_gte,
        heeft_chip_sinds_in,
        heeft_chip_sinds_isnull,
        heeft_chip_sinds_lt,
        heeft_chip_sinds_lte,
        heeft_chip_sinds_not,
        huisletter,
        huisletter_in,
        huisletter_isempty,
        huisletter_isnull,
        huisletter_like,
        huisletter_not,
        huisnummer,
        huisnummer_gt,
        huisnummer_gte,
        huisnummer_in,
        huisnummer_isnull,
        huisnummer_lt,
        huisnummer_lte,
        huisnummer_not,
        huisnummertoevoeging,
        huisnummertoevoeging_in,
        huisnummertoevoeging_isempty,
        huisnummertoevoeging_isnull,
        huisnummertoevoeging_like,
        huisnummertoevoeging_not,
        id,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        page,
        postcode,
        postcode_in,
        postcode_isempty,
        postcode_isnull,
        postcode_like,
        postcode_not,
        soort_container,
        soort_container_in,
        soort_container_isempty,
        soort_container_isnull,
        soort_container_like,
        soort_container_not,
        status,
        status_sinds,
        status_sinds_gt,
        status_sinds_gte,
        status_sinds_in,
        status_sinds_isnull,
        status_sinds_lt,
        status_sinds_lte,
        status_sinds_not,
        status_in,
        status_isempty,
        status_isnull,
        status_like,
        status_not,
        straatnaam,
        straatnaam_in,
        straatnaam_isempty,
        straatnaam_isnull,
        straatnaam_like,
        straatnaam_not,
        typeadresseerbaarobject,
        typeadresseerbaarobject_in,
        typeadresseerbaarobject_isempty,
        typeadresseerbaarobject_isnull,
        typeadresseerbaarobject_like,
        typeadresseerbaarobject_not,
        wijzigingsdatum,
        wijzigingsdatum_gt,
        wijzigingsdatum_gte,
        wijzigingsdatum_in,
        wijzigingsdatum_isnull,
        wijzigingsdatum_lt,
        wijzigingsdatum_lte,
        wijzigingsdatum_not,
        woonplaats_naam,
        woonplaats_naam_in,
        woonplaats_naam_isempty,
        woonplaats_naam_isnull,
        woonplaats_naam_like,
        woonplaats_naam_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aanmaakdatum[in]': 'csv',
            'aanmaakdatum[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagOpenbareruimte.identificatie[in]': 'csv',
            'bagOpenbareruimte.identificatie[not]': 'multi',
            'bagVerblijfsobject.identificatie[in]': 'csv',
            'bagVerblijfsobject.identificatie[not]': 'multi',
            'bagWoonplaats.identificatie[in]': 'csv',
            'bagWoonplaats.identificatie[not]': 'multi',
            'barcode[in]': 'csv',
            'barcode[not]': 'multi',
            'chipNummer[in]': 'csv',
            'chipNummer[not]': 'multi',
            'chipType[in]': 'csv',
            'chipType[not]': 'multi',
            'fractieOmschrijving[in]': 'csv',
            'fractieOmschrijving[not]': 'multi',
            'gebiedBuurt.identificatie[in]': 'csv',
            'gebiedBuurt.identificatie[not]': 'multi',
            'gebiedBuurtCode[in]': 'csv',
            'gebiedBuurtCode[not]': 'multi',
            'gebiedBuurtNaam[in]': 'csv',
            'gebiedBuurtNaam[not]': 'multi',
            'gebiedGgw.identificatie[in]': 'csv',
            'gebiedGgw.identificatie[not]': 'multi',
            'gebiedGgwCode[in]': 'csv',
            'gebiedGgwCode[not]': 'multi',
            'gebiedGgwNaam[in]': 'csv',
            'gebiedGgwNaam[not]': 'multi',
            'gebiedStadsdeel.identificatie[in]': 'csv',
            'gebiedStadsdeel.identificatie[not]': 'multi',
            'gebiedStadsdeelCode[in]': 'csv',
            'gebiedStadsdeelCode[not]': 'multi',
            'gebiedStadsdeelNaam[in]': 'csv',
            'gebiedStadsdeelNaam[not]': 'multi',
            'gebiedWijk.identificatie[in]': 'csv',
            'gebiedWijk.identificatie[not]': 'multi',
            'gebiedWijkCode[in]': 'csv',
            'gebiedWijkCode[not]': 'multi',
            'gebiedWijkNaam[in]': 'csv',
            'gebiedWijkNaam[not]': 'multi',
            'gebruiksdoel[in]': 'csv',
            'gebruiksdoel[not]': 'multi',
            'heeftBarcodeSinds[in]': 'csv',
            'heeftBarcodeSinds[not]': 'multi',
            'heeftChipSinds[in]': 'csv',
            'heeftChipSinds[not]': 'multi',
            'huisletter[in]': 'csv',
            'huisletter[not]': 'multi',
            'huisnummer[in]': 'csv',
            'huisnummer[not]': 'multi',
            'huisnummertoevoeging[in]': 'csv',
            'huisnummertoevoeging[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'postcode[in]': 'csv',
            'postcode[not]': 'multi',
            'soortContainer[in]': 'csv',
            'soortContainer[not]': 'multi',
            'statusSinds[in]': 'csv',
            'statusSinds[not]': 'multi',
            'status[in]': 'csv',
            'status[not]': 'multi',
            'straatnaam[in]': 'csv',
            'straatnaam[not]': 'multi',
            'typeadresseerbaarobject[in]': 'csv',
            'typeadresseerbaarobject[not]': 'multi',
            'wijzigingsdatum[in]': 'csv',
            'wijzigingsdatum[not]': 'multi',
            'woonplaatsNaam[in]': 'csv',
            'woonplaatsNaam[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if count is not None:
            
            _query_params.append(('_count', count))
            
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if page_size is not None:
            
            _query_params.append(('_pageSize', page_size))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aanmaakdatum is not None:
            if isinstance(aanmaakdatum, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum',
                        aanmaakdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum', aanmaakdatum))
            
        if aanmaakdatum_gt is not None:
            if isinstance(aanmaakdatum_gt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gt]',
                        aanmaakdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gt]', aanmaakdatum_gt))
            
        if aanmaakdatum_gte is not None:
            if isinstance(aanmaakdatum_gte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gte]',
                        aanmaakdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gte]', aanmaakdatum_gte))
            
        if aanmaakdatum_in is not None:
            
            _query_params.append(('aanmaakdatum[in]', aanmaakdatum_in))
            
        if aanmaakdatum_isnull is not None:
            
            _query_params.append(('aanmaakdatum[isnull]', aanmaakdatum_isnull))
            
        if aanmaakdatum_lt is not None:
            if isinstance(aanmaakdatum_lt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lt]',
                        aanmaakdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lt]', aanmaakdatum_lt))
            
        if aanmaakdatum_lte is not None:
            if isinstance(aanmaakdatum_lte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lte]',
                        aanmaakdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lte]', aanmaakdatum_lte))
            
        if aanmaakdatum_not is not None:
            
            _query_params.append(('aanmaakdatum[not]', aanmaakdatum_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_openbareruimte_identificatie is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie', bag_openbareruimte_identificatie))
            
        if bag_openbareruimte_identificatie_in is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[in]', bag_openbareruimte_identificatie_in))
            
        if bag_openbareruimte_identificatie_isempty is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isempty]', bag_openbareruimte_identificatie_isempty))
            
        if bag_openbareruimte_identificatie_isnull is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isnull]', bag_openbareruimte_identificatie_isnull))
            
        if bag_openbareruimte_identificatie_like is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[like]', bag_openbareruimte_identificatie_like))
            
        if bag_openbareruimte_identificatie_not is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[not]', bag_openbareruimte_identificatie_not))
            
        if bag_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie', bag_verblijfsobject_identificatie))
            
        if bag_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[in]', bag_verblijfsobject_identificatie_in))
            
        if bag_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isempty]', bag_verblijfsobject_identificatie_isempty))
            
        if bag_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isnull]', bag_verblijfsobject_identificatie_isnull))
            
        if bag_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[like]', bag_verblijfsobject_identificatie_like))
            
        if bag_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[not]', bag_verblijfsobject_identificatie_not))
            
        if bag_woonplaats_identificatie is not None:
            
            _query_params.append(('bagWoonplaats.identificatie', bag_woonplaats_identificatie))
            
        if bag_woonplaats_identificatie_in is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[in]', bag_woonplaats_identificatie_in))
            
        if bag_woonplaats_identificatie_isempty is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[isempty]', bag_woonplaats_identificatie_isempty))
            
        if bag_woonplaats_identificatie_isnull is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[isnull]', bag_woonplaats_identificatie_isnull))
            
        if bag_woonplaats_identificatie_like is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[like]', bag_woonplaats_identificatie_like))
            
        if bag_woonplaats_identificatie_not is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[not]', bag_woonplaats_identificatie_not))
            
        if barcode is not None:
            
            _query_params.append(('barcode', barcode))
            
        if barcode_in is not None:
            
            _query_params.append(('barcode[in]', barcode_in))
            
        if barcode_isempty is not None:
            
            _query_params.append(('barcode[isempty]', barcode_isempty))
            
        if barcode_isnull is not None:
            
            _query_params.append(('barcode[isnull]', barcode_isnull))
            
        if barcode_like is not None:
            
            _query_params.append(('barcode[like]', barcode_like))
            
        if barcode_not is not None:
            
            _query_params.append(('barcode[not]', barcode_not))
            
        if chip_nummer is not None:
            
            _query_params.append(('chipNummer', chip_nummer))
            
        if chip_nummer_in is not None:
            
            _query_params.append(('chipNummer[in]', chip_nummer_in))
            
        if chip_nummer_isempty is not None:
            
            _query_params.append(('chipNummer[isempty]', chip_nummer_isempty))
            
        if chip_nummer_isnull is not None:
            
            _query_params.append(('chipNummer[isnull]', chip_nummer_isnull))
            
        if chip_nummer_like is not None:
            
            _query_params.append(('chipNummer[like]', chip_nummer_like))
            
        if chip_nummer_not is not None:
            
            _query_params.append(('chipNummer[not]', chip_nummer_not))
            
        if chip_type is not None:
            
            _query_params.append(('chipType', chip_type))
            
        if chip_type_in is not None:
            
            _query_params.append(('chipType[in]', chip_type_in))
            
        if chip_type_isempty is not None:
            
            _query_params.append(('chipType[isempty]', chip_type_isempty))
            
        if chip_type_isnull is not None:
            
            _query_params.append(('chipType[isnull]', chip_type_isnull))
            
        if chip_type_like is not None:
            
            _query_params.append(('chipType[like]', chip_type_like))
            
        if chip_type_not is not None:
            
            _query_params.append(('chipType[not]', chip_type_not))
            
        if fractie_omschrijving is not None:
            
            _query_params.append(('fractieOmschrijving', fractie_omschrijving))
            
        if fractie_omschrijving_in is not None:
            
            _query_params.append(('fractieOmschrijving[in]', fractie_omschrijving_in))
            
        if fractie_omschrijving_isempty is not None:
            
            _query_params.append(('fractieOmschrijving[isempty]', fractie_omschrijving_isempty))
            
        if fractie_omschrijving_isnull is not None:
            
            _query_params.append(('fractieOmschrijving[isnull]', fractie_omschrijving_isnull))
            
        if fractie_omschrijving_like is not None:
            
            _query_params.append(('fractieOmschrijving[like]', fractie_omschrijving_like))
            
        if fractie_omschrijving_not is not None:
            
            _query_params.append(('fractieOmschrijving[not]', fractie_omschrijving_not))
            
        if gebied_buurt_identificatie is not None:
            
            _query_params.append(('gebiedBuurt.identificatie', gebied_buurt_identificatie))
            
        if gebied_buurt_identificatie_in is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[in]', gebied_buurt_identificatie_in))
            
        if gebied_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[isempty]', gebied_buurt_identificatie_isempty))
            
        if gebied_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[isnull]', gebied_buurt_identificatie_isnull))
            
        if gebied_buurt_identificatie_like is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[like]', gebied_buurt_identificatie_like))
            
        if gebied_buurt_identificatie_not is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[not]', gebied_buurt_identificatie_not))
            
        if gebied_buurt_code is not None:
            
            _query_params.append(('gebiedBuurtCode', gebied_buurt_code))
            
        if gebied_buurt_code_in is not None:
            
            _query_params.append(('gebiedBuurtCode[in]', gebied_buurt_code_in))
            
        if gebied_buurt_code_isempty is not None:
            
            _query_params.append(('gebiedBuurtCode[isempty]', gebied_buurt_code_isempty))
            
        if gebied_buurt_code_isnull is not None:
            
            _query_params.append(('gebiedBuurtCode[isnull]', gebied_buurt_code_isnull))
            
        if gebied_buurt_code_like is not None:
            
            _query_params.append(('gebiedBuurtCode[like]', gebied_buurt_code_like))
            
        if gebied_buurt_code_not is not None:
            
            _query_params.append(('gebiedBuurtCode[not]', gebied_buurt_code_not))
            
        if gebied_buurt_naam is not None:
            
            _query_params.append(('gebiedBuurtNaam', gebied_buurt_naam))
            
        if gebied_buurt_naam_in is not None:
            
            _query_params.append(('gebiedBuurtNaam[in]', gebied_buurt_naam_in))
            
        if gebied_buurt_naam_isempty is not None:
            
            _query_params.append(('gebiedBuurtNaam[isempty]', gebied_buurt_naam_isempty))
            
        if gebied_buurt_naam_isnull is not None:
            
            _query_params.append(('gebiedBuurtNaam[isnull]', gebied_buurt_naam_isnull))
            
        if gebied_buurt_naam_like is not None:
            
            _query_params.append(('gebiedBuurtNaam[like]', gebied_buurt_naam_like))
            
        if gebied_buurt_naam_not is not None:
            
            _query_params.append(('gebiedBuurtNaam[not]', gebied_buurt_naam_not))
            
        if gebied_ggw_identificatie is not None:
            
            _query_params.append(('gebiedGgw.identificatie', gebied_ggw_identificatie))
            
        if gebied_ggw_identificatie_in is not None:
            
            _query_params.append(('gebiedGgw.identificatie[in]', gebied_ggw_identificatie_in))
            
        if gebied_ggw_identificatie_isempty is not None:
            
            _query_params.append(('gebiedGgw.identificatie[isempty]', gebied_ggw_identificatie_isempty))
            
        if gebied_ggw_identificatie_isnull is not None:
            
            _query_params.append(('gebiedGgw.identificatie[isnull]', gebied_ggw_identificatie_isnull))
            
        if gebied_ggw_identificatie_like is not None:
            
            _query_params.append(('gebiedGgw.identificatie[like]', gebied_ggw_identificatie_like))
            
        if gebied_ggw_identificatie_not is not None:
            
            _query_params.append(('gebiedGgw.identificatie[not]', gebied_ggw_identificatie_not))
            
        if gebied_ggw_code is not None:
            
            _query_params.append(('gebiedGgwCode', gebied_ggw_code))
            
        if gebied_ggw_code_in is not None:
            
            _query_params.append(('gebiedGgwCode[in]', gebied_ggw_code_in))
            
        if gebied_ggw_code_isempty is not None:
            
            _query_params.append(('gebiedGgwCode[isempty]', gebied_ggw_code_isempty))
            
        if gebied_ggw_code_isnull is not None:
            
            _query_params.append(('gebiedGgwCode[isnull]', gebied_ggw_code_isnull))
            
        if gebied_ggw_code_like is not None:
            
            _query_params.append(('gebiedGgwCode[like]', gebied_ggw_code_like))
            
        if gebied_ggw_code_not is not None:
            
            _query_params.append(('gebiedGgwCode[not]', gebied_ggw_code_not))
            
        if gebied_ggw_naam is not None:
            
            _query_params.append(('gebiedGgwNaam', gebied_ggw_naam))
            
        if gebied_ggw_naam_in is not None:
            
            _query_params.append(('gebiedGgwNaam[in]', gebied_ggw_naam_in))
            
        if gebied_ggw_naam_isempty is not None:
            
            _query_params.append(('gebiedGgwNaam[isempty]', gebied_ggw_naam_isempty))
            
        if gebied_ggw_naam_isnull is not None:
            
            _query_params.append(('gebiedGgwNaam[isnull]', gebied_ggw_naam_isnull))
            
        if gebied_ggw_naam_like is not None:
            
            _query_params.append(('gebiedGgwNaam[like]', gebied_ggw_naam_like))
            
        if gebied_ggw_naam_not is not None:
            
            _query_params.append(('gebiedGgwNaam[not]', gebied_ggw_naam_not))
            
        if gebied_stadsdeel_identificatie is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie', gebied_stadsdeel_identificatie))
            
        if gebied_stadsdeel_identificatie_in is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[in]', gebied_stadsdeel_identificatie_in))
            
        if gebied_stadsdeel_identificatie_isempty is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[isempty]', gebied_stadsdeel_identificatie_isempty))
            
        if gebied_stadsdeel_identificatie_isnull is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[isnull]', gebied_stadsdeel_identificatie_isnull))
            
        if gebied_stadsdeel_identificatie_like is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[like]', gebied_stadsdeel_identificatie_like))
            
        if gebied_stadsdeel_identificatie_not is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[not]', gebied_stadsdeel_identificatie_not))
            
        if gebied_stadsdeel_code is not None:
            
            _query_params.append(('gebiedStadsdeelCode', gebied_stadsdeel_code))
            
        if gebied_stadsdeel_code_in is not None:
            
            _query_params.append(('gebiedStadsdeelCode[in]', gebied_stadsdeel_code_in))
            
        if gebied_stadsdeel_code_isempty is not None:
            
            _query_params.append(('gebiedStadsdeelCode[isempty]', gebied_stadsdeel_code_isempty))
            
        if gebied_stadsdeel_code_isnull is not None:
            
            _query_params.append(('gebiedStadsdeelCode[isnull]', gebied_stadsdeel_code_isnull))
            
        if gebied_stadsdeel_code_like is not None:
            
            _query_params.append(('gebiedStadsdeelCode[like]', gebied_stadsdeel_code_like))
            
        if gebied_stadsdeel_code_not is not None:
            
            _query_params.append(('gebiedStadsdeelCode[not]', gebied_stadsdeel_code_not))
            
        if gebied_stadsdeel_naam is not None:
            
            _query_params.append(('gebiedStadsdeelNaam', gebied_stadsdeel_naam))
            
        if gebied_stadsdeel_naam_in is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[in]', gebied_stadsdeel_naam_in))
            
        if gebied_stadsdeel_naam_isempty is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[isempty]', gebied_stadsdeel_naam_isempty))
            
        if gebied_stadsdeel_naam_isnull is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[isnull]', gebied_stadsdeel_naam_isnull))
            
        if gebied_stadsdeel_naam_like is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[like]', gebied_stadsdeel_naam_like))
            
        if gebied_stadsdeel_naam_not is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[not]', gebied_stadsdeel_naam_not))
            
        if gebied_wijk_identificatie is not None:
            
            _query_params.append(('gebiedWijk.identificatie', gebied_wijk_identificatie))
            
        if gebied_wijk_identificatie_in is not None:
            
            _query_params.append(('gebiedWijk.identificatie[in]', gebied_wijk_identificatie_in))
            
        if gebied_wijk_identificatie_isempty is not None:
            
            _query_params.append(('gebiedWijk.identificatie[isempty]', gebied_wijk_identificatie_isempty))
            
        if gebied_wijk_identificatie_isnull is not None:
            
            _query_params.append(('gebiedWijk.identificatie[isnull]', gebied_wijk_identificatie_isnull))
            
        if gebied_wijk_identificatie_like is not None:
            
            _query_params.append(('gebiedWijk.identificatie[like]', gebied_wijk_identificatie_like))
            
        if gebied_wijk_identificatie_not is not None:
            
            _query_params.append(('gebiedWijk.identificatie[not]', gebied_wijk_identificatie_not))
            
        if gebied_wijk_code is not None:
            
            _query_params.append(('gebiedWijkCode', gebied_wijk_code))
            
        if gebied_wijk_code_in is not None:
            
            _query_params.append(('gebiedWijkCode[in]', gebied_wijk_code_in))
            
        if gebied_wijk_code_isempty is not None:
            
            _query_params.append(('gebiedWijkCode[isempty]', gebied_wijk_code_isempty))
            
        if gebied_wijk_code_isnull is not None:
            
            _query_params.append(('gebiedWijkCode[isnull]', gebied_wijk_code_isnull))
            
        if gebied_wijk_code_like is not None:
            
            _query_params.append(('gebiedWijkCode[like]', gebied_wijk_code_like))
            
        if gebied_wijk_code_not is not None:
            
            _query_params.append(('gebiedWijkCode[not]', gebied_wijk_code_not))
            
        if gebied_wijk_naam is not None:
            
            _query_params.append(('gebiedWijkNaam', gebied_wijk_naam))
            
        if gebied_wijk_naam_in is not None:
            
            _query_params.append(('gebiedWijkNaam[in]', gebied_wijk_naam_in))
            
        if gebied_wijk_naam_isempty is not None:
            
            _query_params.append(('gebiedWijkNaam[isempty]', gebied_wijk_naam_isempty))
            
        if gebied_wijk_naam_isnull is not None:
            
            _query_params.append(('gebiedWijkNaam[isnull]', gebied_wijk_naam_isnull))
            
        if gebied_wijk_naam_like is not None:
            
            _query_params.append(('gebiedWijkNaam[like]', gebied_wijk_naam_like))
            
        if gebied_wijk_naam_not is not None:
            
            _query_params.append(('gebiedWijkNaam[not]', gebied_wijk_naam_not))
            
        if gebruiksdoel is not None:
            
            _query_params.append(('gebruiksdoel', gebruiksdoel))
            
        if gebruiksdoel_in is not None:
            
            _query_params.append(('gebruiksdoel[in]', gebruiksdoel_in))
            
        if gebruiksdoel_isempty is not None:
            
            _query_params.append(('gebruiksdoel[isempty]', gebruiksdoel_isempty))
            
        if gebruiksdoel_isnull is not None:
            
            _query_params.append(('gebruiksdoel[isnull]', gebruiksdoel_isnull))
            
        if gebruiksdoel_like is not None:
            
            _query_params.append(('gebruiksdoel[like]', gebruiksdoel_like))
            
        if gebruiksdoel_not is not None:
            
            _query_params.append(('gebruiksdoel[not]', gebruiksdoel_not))
            
        if geometrie is not None:
            
            _query_params.append(('geometrie', geometrie))
            
        if geometrie_intersects is not None:
            
            _query_params.append(('geometrie[intersects]', geometrie_intersects))
            
        if geometrie_isnull is not None:
            
            _query_params.append(('geometrie[isnull]', geometrie_isnull))
            
        if geometrie_not is not None:
            
            _query_params.append(('geometrie[not]', geometrie_not))
            
        if heeft_barcode_sinds is not None:
            if isinstance(heeft_barcode_sinds, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds',
                        heeft_barcode_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds', heeft_barcode_sinds))
            
        if heeft_barcode_sinds_gt is not None:
            if isinstance(heeft_barcode_sinds_gt, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[gt]',
                        heeft_barcode_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[gt]', heeft_barcode_sinds_gt))
            
        if heeft_barcode_sinds_gte is not None:
            if isinstance(heeft_barcode_sinds_gte, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[gte]',
                        heeft_barcode_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[gte]', heeft_barcode_sinds_gte))
            
        if heeft_barcode_sinds_in is not None:
            
            _query_params.append(('heeftBarcodeSinds[in]', heeft_barcode_sinds_in))
            
        if heeft_barcode_sinds_isnull is not None:
            
            _query_params.append(('heeftBarcodeSinds[isnull]', heeft_barcode_sinds_isnull))
            
        if heeft_barcode_sinds_lt is not None:
            if isinstance(heeft_barcode_sinds_lt, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[lt]',
                        heeft_barcode_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[lt]', heeft_barcode_sinds_lt))
            
        if heeft_barcode_sinds_lte is not None:
            if isinstance(heeft_barcode_sinds_lte, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[lte]',
                        heeft_barcode_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[lte]', heeft_barcode_sinds_lte))
            
        if heeft_barcode_sinds_not is not None:
            
            _query_params.append(('heeftBarcodeSinds[not]', heeft_barcode_sinds_not))
            
        if heeft_chip_sinds is not None:
            if isinstance(heeft_chip_sinds, date):
                _query_params.append(
                    (
                        'heeftChipSinds',
                        heeft_chip_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds', heeft_chip_sinds))
            
        if heeft_chip_sinds_gt is not None:
            if isinstance(heeft_chip_sinds_gt, date):
                _query_params.append(
                    (
                        'heeftChipSinds[gt]',
                        heeft_chip_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[gt]', heeft_chip_sinds_gt))
            
        if heeft_chip_sinds_gte is not None:
            if isinstance(heeft_chip_sinds_gte, date):
                _query_params.append(
                    (
                        'heeftChipSinds[gte]',
                        heeft_chip_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[gte]', heeft_chip_sinds_gte))
            
        if heeft_chip_sinds_in is not None:
            
            _query_params.append(('heeftChipSinds[in]', heeft_chip_sinds_in))
            
        if heeft_chip_sinds_isnull is not None:
            
            _query_params.append(('heeftChipSinds[isnull]', heeft_chip_sinds_isnull))
            
        if heeft_chip_sinds_lt is not None:
            if isinstance(heeft_chip_sinds_lt, date):
                _query_params.append(
                    (
                        'heeftChipSinds[lt]',
                        heeft_chip_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[lt]', heeft_chip_sinds_lt))
            
        if heeft_chip_sinds_lte is not None:
            if isinstance(heeft_chip_sinds_lte, date):
                _query_params.append(
                    (
                        'heeftChipSinds[lte]',
                        heeft_chip_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[lte]', heeft_chip_sinds_lte))
            
        if heeft_chip_sinds_not is not None:
            
            _query_params.append(('heeftChipSinds[not]', heeft_chip_sinds_not))
            
        if huisletter is not None:
            
            _query_params.append(('huisletter', huisletter))
            
        if huisletter_in is not None:
            
            _query_params.append(('huisletter[in]', huisletter_in))
            
        if huisletter_isempty is not None:
            
            _query_params.append(('huisletter[isempty]', huisletter_isempty))
            
        if huisletter_isnull is not None:
            
            _query_params.append(('huisletter[isnull]', huisletter_isnull))
            
        if huisletter_like is not None:
            
            _query_params.append(('huisletter[like]', huisletter_like))
            
        if huisletter_not is not None:
            
            _query_params.append(('huisletter[not]', huisletter_not))
            
        if huisnummer is not None:
            
            _query_params.append(('huisnummer', huisnummer))
            
        if huisnummer_gt is not None:
            
            _query_params.append(('huisnummer[gt]', huisnummer_gt))
            
        if huisnummer_gte is not None:
            
            _query_params.append(('huisnummer[gte]', huisnummer_gte))
            
        if huisnummer_in is not None:
            
            _query_params.append(('huisnummer[in]', huisnummer_in))
            
        if huisnummer_isnull is not None:
            
            _query_params.append(('huisnummer[isnull]', huisnummer_isnull))
            
        if huisnummer_lt is not None:
            
            _query_params.append(('huisnummer[lt]', huisnummer_lt))
            
        if huisnummer_lte is not None:
            
            _query_params.append(('huisnummer[lte]', huisnummer_lte))
            
        if huisnummer_not is not None:
            
            _query_params.append(('huisnummer[not]', huisnummer_not))
            
        if huisnummertoevoeging is not None:
            
            _query_params.append(('huisnummertoevoeging', huisnummertoevoeging))
            
        if huisnummertoevoeging_in is not None:
            
            _query_params.append(('huisnummertoevoeging[in]', huisnummertoevoeging_in))
            
        if huisnummertoevoeging_isempty is not None:
            
            _query_params.append(('huisnummertoevoeging[isempty]', huisnummertoevoeging_isempty))
            
        if huisnummertoevoeging_isnull is not None:
            
            _query_params.append(('huisnummertoevoeging[isnull]', huisnummertoevoeging_isnull))
            
        if huisnummertoevoeging_like is not None:
            
            _query_params.append(('huisnummertoevoeging[like]', huisnummertoevoeging_like))
            
        if huisnummertoevoeging_not is not None:
            
            _query_params.append(('huisnummertoevoeging[not]', huisnummertoevoeging_not))
            
        if id is not None:
            
            _query_params.append(('id', id))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if postcode is not None:
            
            _query_params.append(('postcode', postcode))
            
        if postcode_in is not None:
            
            _query_params.append(('postcode[in]', postcode_in))
            
        if postcode_isempty is not None:
            
            _query_params.append(('postcode[isempty]', postcode_isempty))
            
        if postcode_isnull is not None:
            
            _query_params.append(('postcode[isnull]', postcode_isnull))
            
        if postcode_like is not None:
            
            _query_params.append(('postcode[like]', postcode_like))
            
        if postcode_not is not None:
            
            _query_params.append(('postcode[not]', postcode_not))
            
        if soort_container is not None:
            
            _query_params.append(('soortContainer', soort_container))
            
        if soort_container_in is not None:
            
            _query_params.append(('soortContainer[in]', soort_container_in))
            
        if soort_container_isempty is not None:
            
            _query_params.append(('soortContainer[isempty]', soort_container_isempty))
            
        if soort_container_isnull is not None:
            
            _query_params.append(('soortContainer[isnull]', soort_container_isnull))
            
        if soort_container_like is not None:
            
            _query_params.append(('soortContainer[like]', soort_container_like))
            
        if soort_container_not is not None:
            
            _query_params.append(('soortContainer[not]', soort_container_not))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if status_sinds is not None:
            if isinstance(status_sinds, date):
                _query_params.append(
                    (
                        'statusSinds',
                        status_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds', status_sinds))
            
        if status_sinds_gt is not None:
            if isinstance(status_sinds_gt, date):
                _query_params.append(
                    (
                        'statusSinds[gt]',
                        status_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[gt]', status_sinds_gt))
            
        if status_sinds_gte is not None:
            if isinstance(status_sinds_gte, date):
                _query_params.append(
                    (
                        'statusSinds[gte]',
                        status_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[gte]', status_sinds_gte))
            
        if status_sinds_in is not None:
            
            _query_params.append(('statusSinds[in]', status_sinds_in))
            
        if status_sinds_isnull is not None:
            
            _query_params.append(('statusSinds[isnull]', status_sinds_isnull))
            
        if status_sinds_lt is not None:
            if isinstance(status_sinds_lt, date):
                _query_params.append(
                    (
                        'statusSinds[lt]',
                        status_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[lt]', status_sinds_lt))
            
        if status_sinds_lte is not None:
            if isinstance(status_sinds_lte, date):
                _query_params.append(
                    (
                        'statusSinds[lte]',
                        status_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[lte]', status_sinds_lte))
            
        if status_sinds_not is not None:
            
            _query_params.append(('statusSinds[not]', status_sinds_not))
            
        if status_in is not None:
            
            _query_params.append(('status[in]', status_in))
            
        if status_isempty is not None:
            
            _query_params.append(('status[isempty]', status_isempty))
            
        if status_isnull is not None:
            
            _query_params.append(('status[isnull]', status_isnull))
            
        if status_like is not None:
            
            _query_params.append(('status[like]', status_like))
            
        if status_not is not None:
            
            _query_params.append(('status[not]', status_not))
            
        if straatnaam is not None:
            
            _query_params.append(('straatnaam', straatnaam))
            
        if straatnaam_in is not None:
            
            _query_params.append(('straatnaam[in]', straatnaam_in))
            
        if straatnaam_isempty is not None:
            
            _query_params.append(('straatnaam[isempty]', straatnaam_isempty))
            
        if straatnaam_isnull is not None:
            
            _query_params.append(('straatnaam[isnull]', straatnaam_isnull))
            
        if straatnaam_like is not None:
            
            _query_params.append(('straatnaam[like]', straatnaam_like))
            
        if straatnaam_not is not None:
            
            _query_params.append(('straatnaam[not]', straatnaam_not))
            
        if typeadresseerbaarobject is not None:
            
            _query_params.append(('typeadresseerbaarobject', typeadresseerbaarobject))
            
        if typeadresseerbaarobject_in is not None:
            
            _query_params.append(('typeadresseerbaarobject[in]', typeadresseerbaarobject_in))
            
        if typeadresseerbaarobject_isempty is not None:
            
            _query_params.append(('typeadresseerbaarobject[isempty]', typeadresseerbaarobject_isempty))
            
        if typeadresseerbaarobject_isnull is not None:
            
            _query_params.append(('typeadresseerbaarobject[isnull]', typeadresseerbaarobject_isnull))
            
        if typeadresseerbaarobject_like is not None:
            
            _query_params.append(('typeadresseerbaarobject[like]', typeadresseerbaarobject_like))
            
        if typeadresseerbaarobject_not is not None:
            
            _query_params.append(('typeadresseerbaarobject[not]', typeadresseerbaarobject_not))
            
        if wijzigingsdatum is not None:
            if isinstance(wijzigingsdatum, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum',
                        wijzigingsdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum', wijzigingsdatum))
            
        if wijzigingsdatum_gt is not None:
            if isinstance(wijzigingsdatum_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gt]',
                        wijzigingsdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gt]', wijzigingsdatum_gt))
            
        if wijzigingsdatum_gte is not None:
            if isinstance(wijzigingsdatum_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gte]',
                        wijzigingsdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gte]', wijzigingsdatum_gte))
            
        if wijzigingsdatum_in is not None:
            
            _query_params.append(('wijzigingsdatum[in]', wijzigingsdatum_in))
            
        if wijzigingsdatum_isnull is not None:
            
            _query_params.append(('wijzigingsdatum[isnull]', wijzigingsdatum_isnull))
            
        if wijzigingsdatum_lt is not None:
            if isinstance(wijzigingsdatum_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lt]',
                        wijzigingsdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lt]', wijzigingsdatum_lt))
            
        if wijzigingsdatum_lte is not None:
            if isinstance(wijzigingsdatum_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lte]',
                        wijzigingsdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lte]', wijzigingsdatum_lte))
            
        if wijzigingsdatum_not is not None:
            
            _query_params.append(('wijzigingsdatum[not]', wijzigingsdatum_not))
            
        if woonplaats_naam is not None:
            
            _query_params.append(('woonplaatsNaam', woonplaats_naam))
            
        if woonplaats_naam_in is not None:
            
            _query_params.append(('woonplaatsNaam[in]', woonplaats_naam_in))
            
        if woonplaats_naam_isempty is not None:
            
            _query_params.append(('woonplaatsNaam[isempty]', woonplaats_naam_isempty))
            
        if woonplaats_naam_isnull is not None:
            
            _query_params.append(('woonplaatsNaam[isnull]', woonplaats_naam_isnull))
            
        if woonplaats_naam_like is not None:
            
            _query_params.append(('woonplaatsNaam[like]', woonplaats_naam_like))
            
        if woonplaats_naam_not is not None:
            
            _query_params.append(('woonplaatsNaam[not]', woonplaats_naam_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/rolcontainer',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    async def huishoudelijkafval_rolcontainer_retrieve_slash(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Huishoudelijkafvalrolcontainer:
        """huishoudelijkafval_rolcontainer_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id2: Unieke aanduiding van een rolcontainer
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalrolcontainer",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    async def huishoudelijkafval_rolcontainer_retrieve_slash_with_http_info(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Huishoudelijkafvalrolcontainer]:
        """huishoudelijkafval_rolcontainer_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id2: Unieke aanduiding van een rolcontainer
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalrolcontainer",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        await response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    async def huishoudelijkafval_rolcontainer_retrieve_slash_without_preload_content(
        self,
        id: Annotated[str, Field(strict=True)],
        accept_crs: Annotated[Optional[StrictStr], Field(description="Accept-Crs header for Geo queries")] = None,
        content_crs: Annotated[Optional[StrictStr], Field(description="Content-Crs header for Geo queries")] = None,
        x_api_key: Annotated[Optional[StrictStr], Field(description="Api Key for statistical purposes, not for authentication")] = None,
        csv_header: Annotated[Optional[StrictStr], Field(description="Specify type of header for csv file")] = None,
        csv_separator: Annotated[Optional[StrictStr], Field(description="Specify type of separator for csv file")] = None,
        expand: Annotated[Optional[StrictBool], Field(description="Allow to expand relations.")] = None,
        expand_scope: Annotated[Optional[StrictStr], Field(description="Comma separated list of named relations to expand.")] = None,
        fields: Annotated[Optional[StrictStr], Field(description="Comma-separated list of fields to display")] = None,
        format: Annotated[Optional[StrictStr], Field(description="Select the export format")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Which field to use when ordering the results.")] = None,
        aanmaakdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem is aangemaakt")] = None,
        aanmaakdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        aanmaakdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        aanmaakdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        aanmaakdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        bag_nummeraanduiding_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een nummeraanduiding")] = None,
        bag_nummeraanduiding_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_nummeraanduiding_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_nummeraanduiding_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_nummeraanduiding_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_nummeraanduiding_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_openbareruimte_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van een openbare ruimte")] = None,
        bag_openbareruimte_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_openbareruimte_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_openbareruimte_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_openbareruimte_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_openbareruimte_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_verblijfsobject_identificatie: Annotated[Optional[StrictStr], Field(description="De unieke aanduiding van een verblijfsobject")] = None,
        bag_verblijfsobject_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_verblijfsobject_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_verblijfsobject_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_verblijfsobject_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_verblijfsobject_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        bag_woonplaats_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van een woonplaats")] = None,
        bag_woonplaats_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        bag_woonplaats_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        bag_woonplaats_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        bag_woonplaats_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        bag_woonplaats_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        barcode: Annotated[Optional[StrictStr], Field(description="De barcode van de chip dat van buitenaf leesbaar is.")] = None,
        barcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        barcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        barcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        barcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        barcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_nummer: Annotated[Optional[StrictStr], Field(description="Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.")] = None,
        chip_nummer_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_nummer_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_nummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_nummer_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_nummer_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        chip_type: Annotated[Optional[StrictStr], Field(description="Het type van de chip dat aan de rolcontainer is bevestigd.")] = None,
        chip_type_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        chip_type_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        chip_type_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        chip_type_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        chip_type_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        fractie_omschrijving: Annotated[Optional[StrictStr], Field(description="Container fractieomschrijving zoals door leverancier is geleverd.")] = None,
        fractie_omschrijving_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        fractie_omschrijving_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        fractie_omschrijving_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        fractie_omschrijving_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        fractie_omschrijving_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_buurt_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_code: Annotated[Optional[StrictStr], Field(description="Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)")] = None,
        gebied_buurt_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_buurt_naam: Annotated[Optional[StrictStr], Field(description="De naam van het object")] = None,
        gebied_buurt_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_buurt_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_buurt_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_buurt_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_buurt_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_ggw_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_code: Annotated[Optional[StrictStr], Field(description="De unieke code van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_ggw_naam: Annotated[Optional[StrictStr], Field(description="De naam van het gebiedsgericht werken gebied")] = None,
        gebied_ggw_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_ggw_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_ggw_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_ggw_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_ggw_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_stadsdeel_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_code: Annotated[Optional[StrictStr], Field(description="Officile code van het stadsdeel")] = None,
        gebied_stadsdeel_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_stadsdeel_naam: Annotated[Optional[StrictStr], Field(description="De naam van het stadsdeel.")] = None,
        gebied_stadsdeel_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_stadsdeel_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_stadsdeel_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_stadsdeel_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_stadsdeel_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_identificatie: Annotated[Optional[StrictStr], Field(description="Unieke identificatie van het object")] = None,
        gebied_wijk_identificatie_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_identificatie_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_identificatie_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_identificatie_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_identificatie_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_code: Annotated[Optional[StrictStr], Field(description="Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode")] = None,
        gebied_wijk_code_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_code_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_code_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_code_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_code_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebied_wijk_naam: Annotated[Optional[StrictStr], Field(description="De naam van de wijk")] = None,
        gebied_wijk_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebied_wijk_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebied_wijk_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebied_wijk_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebied_wijk_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        gebruiksdoel: Annotated[Optional[StrictStr], Field(description="Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan")] = None,
        gebruiksdoel_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        gebruiksdoel_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        gebruiksdoel_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        gebruiksdoel_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        gebruiksdoel_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        geometrie: Annotated[Optional[StrictStr], Field(description="Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. ")] = None,
        geometrie_intersects: Annotated[Optional[StrictStr], Field(description="Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON")] = None,
        geometrie_isnull: Annotated[Optional[StrictStr], Field(description="Whether the field has a NULL value or not.")] = None,
        geometrie_not: Annotated[Optional[StrictStr], Field(description="GeoJSON | GEOMETRY(...)")] = None,
        heeft_barcode_sinds: Annotated[Optional[date], Field(description="Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..")] = None,
        heeft_barcode_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_barcode_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_barcode_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_barcode_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        heeft_chip_sinds: Annotated[Optional[date], Field(description="Datum waarop de chip aan de rolcontainer is bevestigd. ")] = None,
        heeft_chip_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        heeft_chip_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        heeft_chip_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        heeft_chip_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        huisletter: Annotated[Optional[StrictStr], Field(description="Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.")] = None,
        huisletter_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisletter_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisletter_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisletter_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisletter_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        huisnummer: Annotated[Optional[StrictInt], Field(description="De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.")] = None,
        huisnummer_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        huisnummer_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        huisnummer_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummer_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummer_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        huisnummer_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        huisnummer_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        huisnummertoevoeging: Annotated[Optional[StrictStr], Field(description="Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer")] = None,
        huisnummertoevoeging_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        huisnummertoevoeging_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        huisnummertoevoeging_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        huisnummertoevoeging_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        huisnummertoevoeging_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        id2: Annotated[Optional[StrictInt], Field(description="Unieke aanduiding van een rolcontainer")] = None,
        id_gt: Annotated[Optional[StrictInt], Field(description="Greater than; number")] = None,
        id_gte: Annotated[Optional[StrictInt], Field(description="Greater than or equal to; number")] = None,
        id_in: Annotated[Optional[List[StrictInt]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        id_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        id_lt: Annotated[Optional[StrictInt], Field(description="Less than; number")] = None,
        id_lte: Annotated[Optional[StrictInt], Field(description="Less than or equal to; number")] = None,
        id_not: Annotated[Optional[List[StrictInt]], Field(description="Exclude matches; number")] = None,
        postcode: Annotated[Optional[StrictStr], Field(description="De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.")] = None,
        postcode_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        postcode_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        postcode_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        postcode_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        postcode_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        soort_container: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.")] = None,
        soort_container_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        soort_container_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        soort_container_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        soort_container_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        soort_container_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.")] = None,
        status_sinds: Annotated[Optional[date], Field(description="Datum waarop de laatste status van een rolcontainer van toepassing is")] = None,
        status_sinds_gt: Annotated[Optional[date], Field(description="Greater than; use yyyy-mm-dd")] = None,
        status_sinds_gte: Annotated[Optional[date], Field(description="Greater than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_in: Annotated[Optional[List[date]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_sinds_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_sinds_lt: Annotated[Optional[date], Field(description="Less than; use yyyy-mm-dd")] = None,
        status_sinds_lte: Annotated[Optional[date], Field(description="Less than or equal to; use yyyy-mm-dd")] = None,
        status_sinds_not: Annotated[Optional[List[date]], Field(description="Exclude matches; use yyyy-mm-dd")] = None,
        status_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        status_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        status_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        status_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        status_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        straatnaam: Annotated[Optional[StrictStr], Field(description="Naam van de straat")] = None,
        straatnaam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        straatnaam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        straatnaam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        straatnaam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        straatnaam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        typeadresseerbaarobject: Annotated[Optional[StrictStr], Field(description="Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend")] = None,
        typeadresseerbaarobject_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        typeadresseerbaarobject_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        typeadresseerbaarobject_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        typeadresseerbaarobject_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        typeadresseerbaarobject_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        wijzigingsdatum: Annotated[Optional[datetime], Field(description="Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast")] = None,
        wijzigingsdatum_gt: Annotated[Optional[datetime], Field(description="Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_gte: Annotated[Optional[datetime], Field(description="Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_in: Annotated[Optional[List[datetime]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        wijzigingsdatum_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        wijzigingsdatum_lt: Annotated[Optional[datetime], Field(description="Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_lte: Annotated[Optional[datetime], Field(description="Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        wijzigingsdatum_not: Annotated[Optional[List[datetime]], Field(description="Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]")] = None,
        woonplaats_naam: Annotated[Optional[StrictStr], Field(description="Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.")] = None,
        woonplaats_naam_in: Annotated[Optional[List[StrictStr]], Field(description="Matches any value from a comma-separated list: val1,val2,valN.")] = None,
        woonplaats_naam_isempty: Annotated[Optional[StrictBool], Field(description="Whether the field is empty or not.")] = None,
        woonplaats_naam_isnull: Annotated[Optional[StrictBool], Field(description="Whether the field has a NULL value or not.")] = None,
        woonplaats_naam_like: Annotated[Optional[StrictStr], Field(description="Matches text using wildcards (? and *).")] = None,
        woonplaats_naam_not: Annotated[Optional[List[StrictStr]], Field(description="Exclude matches; text")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """huishoudelijkafval_rolcontainer_retrieve_slash


        :param id: (required)
        :type id: str
        :param accept_crs: Accept-Crs header for Geo queries
        :type accept_crs: str
        :param content_crs: Content-Crs header for Geo queries
        :type content_crs: str
        :param x_api_key: Api Key for statistical purposes, not for authentication
        :type x_api_key: str
        :param csv_header: Specify type of header for csv file
        :type csv_header: str
        :param csv_separator: Specify type of separator for csv file
        :type csv_separator: str
        :param expand: Allow to expand relations.
        :type expand: bool
        :param expand_scope: Comma separated list of named relations to expand.
        :type expand_scope: str
        :param fields: Comma-separated list of fields to display
        :type fields: str
        :param format: Select the export format
        :type format: str
        :param sort: Which field to use when ordering the results.
        :type sort: str
        :param aanmaakdatum: Datum tijd waarop de rolcontainer in het systeem is aangemaakt
        :type aanmaakdatum: datetime
        :param aanmaakdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gt: datetime
        :param aanmaakdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_gte: datetime
        :param aanmaakdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type aanmaakdatum_in: List[datetime]
        :param aanmaakdatum_isnull: Whether the field has a NULL value or not.
        :type aanmaakdatum_isnull: bool
        :param aanmaakdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lt: datetime
        :param aanmaakdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_lte: datetime
        :param aanmaakdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type aanmaakdatum_not: List[datetime]
        :param bag_nummeraanduiding_identificatie: De unieke aanduiding van een nummeraanduiding
        :type bag_nummeraanduiding_identificatie: str
        :param bag_nummeraanduiding_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_nummeraanduiding_identificatie_in: List[str]
        :param bag_nummeraanduiding_identificatie_isempty: Whether the field is empty or not.
        :type bag_nummeraanduiding_identificatie_isempty: bool
        :param bag_nummeraanduiding_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_nummeraanduiding_identificatie_isnull: bool
        :param bag_nummeraanduiding_identificatie_like: Matches text using wildcards (? and *).
        :type bag_nummeraanduiding_identificatie_like: str
        :param bag_nummeraanduiding_identificatie_not: Exclude matches; text
        :type bag_nummeraanduiding_identificatie_not: List[str]
        :param bag_openbareruimte_identificatie: Unieke identificatie van een openbare ruimte
        :type bag_openbareruimte_identificatie: str
        :param bag_openbareruimte_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_openbareruimte_identificatie_in: List[str]
        :param bag_openbareruimte_identificatie_isempty: Whether the field is empty or not.
        :type bag_openbareruimte_identificatie_isempty: bool
        :param bag_openbareruimte_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_openbareruimte_identificatie_isnull: bool
        :param bag_openbareruimte_identificatie_like: Matches text using wildcards (? and *).
        :type bag_openbareruimte_identificatie_like: str
        :param bag_openbareruimte_identificatie_not: Exclude matches; text
        :type bag_openbareruimte_identificatie_not: List[str]
        :param bag_verblijfsobject_identificatie: De unieke aanduiding van een verblijfsobject
        :type bag_verblijfsobject_identificatie: str
        :param bag_verblijfsobject_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_verblijfsobject_identificatie_in: List[str]
        :param bag_verblijfsobject_identificatie_isempty: Whether the field is empty or not.
        :type bag_verblijfsobject_identificatie_isempty: bool
        :param bag_verblijfsobject_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_verblijfsobject_identificatie_isnull: bool
        :param bag_verblijfsobject_identificatie_like: Matches text using wildcards (? and *).
        :type bag_verblijfsobject_identificatie_like: str
        :param bag_verblijfsobject_identificatie_not: Exclude matches; text
        :type bag_verblijfsobject_identificatie_not: List[str]
        :param bag_woonplaats_identificatie: Unieke aanduiding van een woonplaats
        :type bag_woonplaats_identificatie: str
        :param bag_woonplaats_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type bag_woonplaats_identificatie_in: List[str]
        :param bag_woonplaats_identificatie_isempty: Whether the field is empty or not.
        :type bag_woonplaats_identificatie_isempty: bool
        :param bag_woonplaats_identificatie_isnull: Whether the field has a NULL value or not.
        :type bag_woonplaats_identificatie_isnull: bool
        :param bag_woonplaats_identificatie_like: Matches text using wildcards (? and *).
        :type bag_woonplaats_identificatie_like: str
        :param bag_woonplaats_identificatie_not: Exclude matches; text
        :type bag_woonplaats_identificatie_not: List[str]
        :param barcode: De barcode van de chip dat van buitenaf leesbaar is.
        :type barcode: str
        :param barcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type barcode_in: List[str]
        :param barcode_isempty: Whether the field is empty or not.
        :type barcode_isempty: bool
        :param barcode_isnull: Whether the field has a NULL value or not.
        :type barcode_isnull: bool
        :param barcode_like: Matches text using wildcards (? and *).
        :type barcode_like: str
        :param barcode_not: Exclude matches; text
        :type barcode_not: List[str]
        :param chip_nummer: Unieke aanduiding van de chip dat aan de rolcontainer is bevestigd. Het chipnummer is van buitenaf niet leesbaar.
        :type chip_nummer: str
        :param chip_nummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_nummer_in: List[str]
        :param chip_nummer_isempty: Whether the field is empty or not.
        :type chip_nummer_isempty: bool
        :param chip_nummer_isnull: Whether the field has a NULL value or not.
        :type chip_nummer_isnull: bool
        :param chip_nummer_like: Matches text using wildcards (? and *).
        :type chip_nummer_like: str
        :param chip_nummer_not: Exclude matches; text
        :type chip_nummer_not: List[str]
        :param chip_type: Het type van de chip dat aan de rolcontainer is bevestigd.
        :type chip_type: str
        :param chip_type_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type chip_type_in: List[str]
        :param chip_type_isempty: Whether the field is empty or not.
        :type chip_type_isempty: bool
        :param chip_type_isnull: Whether the field has a NULL value or not.
        :type chip_type_isnull: bool
        :param chip_type_like: Matches text using wildcards (? and *).
        :type chip_type_like: str
        :param chip_type_not: Exclude matches; text
        :type chip_type_not: List[str]
        :param fractie_omschrijving: Container fractieomschrijving zoals door leverancier is geleverd.
        :type fractie_omschrijving: str
        :param fractie_omschrijving_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type fractie_omschrijving_in: List[str]
        :param fractie_omschrijving_isempty: Whether the field is empty or not.
        :type fractie_omschrijving_isempty: bool
        :param fractie_omschrijving_isnull: Whether the field has a NULL value or not.
        :type fractie_omschrijving_isnull: bool
        :param fractie_omschrijving_like: Matches text using wildcards (? and *).
        :type fractie_omschrijving_like: str
        :param fractie_omschrijving_not: Exclude matches; text
        :type fractie_omschrijving_not: List[str]
        :param gebied_buurt_identificatie: Unieke identificatie van het object
        :type gebied_buurt_identificatie: str
        :param gebied_buurt_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_identificatie_in: List[str]
        :param gebied_buurt_identificatie_isempty: Whether the field is empty or not.
        :type gebied_buurt_identificatie_isempty: bool
        :param gebied_buurt_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_identificatie_isnull: bool
        :param gebied_buurt_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_buurt_identificatie_like: str
        :param gebied_buurt_identificatie_not: Exclude matches; text
        :type gebied_buurt_identificatie_not: List[str]
        :param gebied_buurt_code: Unieke code (hier in zie je de Stadsdeel- en Wijkcode terug)
        :type gebied_buurt_code: str
        :param gebied_buurt_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_code_in: List[str]
        :param gebied_buurt_code_isempty: Whether the field is empty or not.
        :type gebied_buurt_code_isempty: bool
        :param gebied_buurt_code_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_code_isnull: bool
        :param gebied_buurt_code_like: Matches text using wildcards (? and *).
        :type gebied_buurt_code_like: str
        :param gebied_buurt_code_not: Exclude matches; text
        :type gebied_buurt_code_not: List[str]
        :param gebied_buurt_naam: De naam van het object
        :type gebied_buurt_naam: str
        :param gebied_buurt_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_buurt_naam_in: List[str]
        :param gebied_buurt_naam_isempty: Whether the field is empty or not.
        :type gebied_buurt_naam_isempty: bool
        :param gebied_buurt_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_buurt_naam_isnull: bool
        :param gebied_buurt_naam_like: Matches text using wildcards (? and *).
        :type gebied_buurt_naam_like: str
        :param gebied_buurt_naam_not: Exclude matches; text
        :type gebied_buurt_naam_not: List[str]
        :param gebied_ggw_identificatie: Unieke identificatie van het object
        :type gebied_ggw_identificatie: str
        :param gebied_ggw_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_identificatie_in: List[str]
        :param gebied_ggw_identificatie_isempty: Whether the field is empty or not.
        :type gebied_ggw_identificatie_isempty: bool
        :param gebied_ggw_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_identificatie_isnull: bool
        :param gebied_ggw_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_ggw_identificatie_like: str
        :param gebied_ggw_identificatie_not: Exclude matches; text
        :type gebied_ggw_identificatie_not: List[str]
        :param gebied_ggw_code: De unieke code van het gebiedsgericht werken gebied
        :type gebied_ggw_code: str
        :param gebied_ggw_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_code_in: List[str]
        :param gebied_ggw_code_isempty: Whether the field is empty or not.
        :type gebied_ggw_code_isempty: bool
        :param gebied_ggw_code_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_code_isnull: bool
        :param gebied_ggw_code_like: Matches text using wildcards (? and *).
        :type gebied_ggw_code_like: str
        :param gebied_ggw_code_not: Exclude matches; text
        :type gebied_ggw_code_not: List[str]
        :param gebied_ggw_naam: De naam van het gebiedsgericht werken gebied
        :type gebied_ggw_naam: str
        :param gebied_ggw_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_ggw_naam_in: List[str]
        :param gebied_ggw_naam_isempty: Whether the field is empty or not.
        :type gebied_ggw_naam_isempty: bool
        :param gebied_ggw_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_ggw_naam_isnull: bool
        :param gebied_ggw_naam_like: Matches text using wildcards (? and *).
        :type gebied_ggw_naam_like: str
        :param gebied_ggw_naam_not: Exclude matches; text
        :type gebied_ggw_naam_not: List[str]
        :param gebied_stadsdeel_identificatie: Unieke identificatie van het object
        :type gebied_stadsdeel_identificatie: str
        :param gebied_stadsdeel_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_identificatie_in: List[str]
        :param gebied_stadsdeel_identificatie_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_identificatie_isempty: bool
        :param gebied_stadsdeel_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_identificatie_isnull: bool
        :param gebied_stadsdeel_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_identificatie_like: str
        :param gebied_stadsdeel_identificatie_not: Exclude matches; text
        :type gebied_stadsdeel_identificatie_not: List[str]
        :param gebied_stadsdeel_code: Officile code van het stadsdeel
        :type gebied_stadsdeel_code: str
        :param gebied_stadsdeel_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_code_in: List[str]
        :param gebied_stadsdeel_code_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_code_isempty: bool
        :param gebied_stadsdeel_code_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_code_isnull: bool
        :param gebied_stadsdeel_code_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_code_like: str
        :param gebied_stadsdeel_code_not: Exclude matches; text
        :type gebied_stadsdeel_code_not: List[str]
        :param gebied_stadsdeel_naam: De naam van het stadsdeel.
        :type gebied_stadsdeel_naam: str
        :param gebied_stadsdeel_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_stadsdeel_naam_in: List[str]
        :param gebied_stadsdeel_naam_isempty: Whether the field is empty or not.
        :type gebied_stadsdeel_naam_isempty: bool
        :param gebied_stadsdeel_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_stadsdeel_naam_isnull: bool
        :param gebied_stadsdeel_naam_like: Matches text using wildcards (? and *).
        :type gebied_stadsdeel_naam_like: str
        :param gebied_stadsdeel_naam_not: Exclude matches; text
        :type gebied_stadsdeel_naam_not: List[str]
        :param gebied_wijk_identificatie: Unieke identificatie van het object
        :type gebied_wijk_identificatie: str
        :param gebied_wijk_identificatie_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_identificatie_in: List[str]
        :param gebied_wijk_identificatie_isempty: Whether the field is empty or not.
        :type gebied_wijk_identificatie_isempty: bool
        :param gebied_wijk_identificatie_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_identificatie_isnull: bool
        :param gebied_wijk_identificatie_like: Matches text using wildcards (? and *).
        :type gebied_wijk_identificatie_like: str
        :param gebied_wijk_identificatie_not: Exclude matches; text
        :type gebied_wijk_identificatie_not: List[str]
        :param gebied_wijk_code: Volledige, samengestelde, code, bestaande uit stadsdeelcode en wijkcode
        :type gebied_wijk_code: str
        :param gebied_wijk_code_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_code_in: List[str]
        :param gebied_wijk_code_isempty: Whether the field is empty or not.
        :type gebied_wijk_code_isempty: bool
        :param gebied_wijk_code_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_code_isnull: bool
        :param gebied_wijk_code_like: Matches text using wildcards (? and *).
        :type gebied_wijk_code_like: str
        :param gebied_wijk_code_not: Exclude matches; text
        :type gebied_wijk_code_not: List[str]
        :param gebied_wijk_naam: De naam van de wijk
        :type gebied_wijk_naam: str
        :param gebied_wijk_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebied_wijk_naam_in: List[str]
        :param gebied_wijk_naam_isempty: Whether the field is empty or not.
        :type gebied_wijk_naam_isempty: bool
        :param gebied_wijk_naam_isnull: Whether the field has a NULL value or not.
        :type gebied_wijk_naam_isnull: bool
        :param gebied_wijk_naam_like: Matches text using wildcards (? and *).
        :type gebied_wijk_naam_like: str
        :param gebied_wijk_naam_not: Exclude matches; text
        :type gebied_wijk_naam_not: List[str]
        :param gebruiksdoel: Een categorisering van de gebruiksdoelen van het betreffende adreseerbareobject, zoals dit door de overheid als zodanig is toegestaan
        :type gebruiksdoel: str
        :param gebruiksdoel_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type gebruiksdoel_in: List[str]
        :param gebruiksdoel_isempty: Whether the field is empty or not.
        :type gebruiksdoel_isempty: bool
        :param gebruiksdoel_isnull: Whether the field has a NULL value or not.
        :type gebruiksdoel_isnull: bool
        :param gebruiksdoel_like: Matches text using wildcards (? and *).
        :type gebruiksdoel_like: str
        :param gebruiksdoel_not: Exclude matches; text
        :type gebruiksdoel_not: List[str]
        :param geometrie: Geometrie van het type POINT van de rolcontainer RD (epsg:28992). De geometrieën zijn afkomstig uit BAG. 
        :type geometrie: str
        :param geometrie_intersects: Use WKT (POLYGON((x1 y1, x2 y2, ...))) or GeoJSON
        :type geometrie_intersects: str
        :param geometrie_isnull: Whether the field has a NULL value or not.
        :type geometrie_isnull: str
        :param geometrie_not: GeoJSON | GEOMETRY(...)
        :type geometrie_not: str
        :param heeft_barcode_sinds: Dit attribuut, heeft_barcode_sinds, geeft de datum aan waarop de chip is voorzien van een barcode..
        :type heeft_barcode_sinds: date
        :param heeft_barcode_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_barcode_sinds_gt: date
        :param heeft_barcode_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_gte: date
        :param heeft_barcode_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_barcode_sinds_in: List[date]
        :param heeft_barcode_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_barcode_sinds_isnull: bool
        :param heeft_barcode_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_barcode_sinds_lt: date
        :param heeft_barcode_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_barcode_sinds_lte: date
        :param heeft_barcode_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_barcode_sinds_not: List[date]
        :param heeft_chip_sinds: Datum waarop de chip aan de rolcontainer is bevestigd. 
        :type heeft_chip_sinds: date
        :param heeft_chip_sinds_gt: Greater than; use yyyy-mm-dd
        :type heeft_chip_sinds_gt: date
        :param heeft_chip_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_gte: date
        :param heeft_chip_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type heeft_chip_sinds_in: List[date]
        :param heeft_chip_sinds_isnull: Whether the field has a NULL value or not.
        :type heeft_chip_sinds_isnull: bool
        :param heeft_chip_sinds_lt: Less than; use yyyy-mm-dd
        :type heeft_chip_sinds_lt: date
        :param heeft_chip_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type heeft_chip_sinds_lte: date
        :param heeft_chip_sinds_not: Exclude matches; use yyyy-mm-dd
        :type heeft_chip_sinds_not: List[date]
        :param huisletter: Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
        :type huisletter: str
        :param huisletter_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisletter_in: List[str]
        :param huisletter_isempty: Whether the field is empty or not.
        :type huisletter_isempty: bool
        :param huisletter_isnull: Whether the field has a NULL value or not.
        :type huisletter_isnull: bool
        :param huisletter_like: Matches text using wildcards (? and *).
        :type huisletter_like: str
        :param huisletter_not: Exclude matches; text
        :type huisletter_not: List[str]
        :param huisnummer: De numerieke aanduiding zoals deze door het gemeente bestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
        :type huisnummer: int
        :param huisnummer_gt: Greater than; number
        :type huisnummer_gt: int
        :param huisnummer_gte: Greater than or equal to; number
        :type huisnummer_gte: int
        :param huisnummer_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummer_in: List[int]
        :param huisnummer_isnull: Whether the field has a NULL value or not.
        :type huisnummer_isnull: bool
        :param huisnummer_lt: Less than; number
        :type huisnummer_lt: int
        :param huisnummer_lte: Less than or equal to; number
        :type huisnummer_lte: int
        :param huisnummer_not: Exclude matches; number
        :type huisnummer_not: List[int]
        :param huisnummertoevoeging: Die let­ters of te­kens die nood­za­ke­lijk zijn om, naast huis­num­mer en -let­ter, de brie­ven­bus te vin­den dan wel een door of na­mens het be­voeg­de ge­meen­te­lij­ke or­gaan ten aan­zien van een adres­seer­baar ob­ject toe­ge­ken­de toe­voe­ging aan een huis­num­mer of een com­bi­na­tie van huis­let­ter en huis­num­mer
        :type huisnummertoevoeging: str
        :param huisnummertoevoeging_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type huisnummertoevoeging_in: List[str]
        :param huisnummertoevoeging_isempty: Whether the field is empty or not.
        :type huisnummertoevoeging_isempty: bool
        :param huisnummertoevoeging_isnull: Whether the field has a NULL value or not.
        :type huisnummertoevoeging_isnull: bool
        :param huisnummertoevoeging_like: Matches text using wildcards (? and *).
        :type huisnummertoevoeging_like: str
        :param huisnummertoevoeging_not: Exclude matches; text
        :type huisnummertoevoeging_not: List[str]
        :param id2: Unieke aanduiding van een rolcontainer
        :type id2: int
        :param id_gt: Greater than; number
        :type id_gt: int
        :param id_gte: Greater than or equal to; number
        :type id_gte: int
        :param id_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type id_in: List[int]
        :param id_isnull: Whether the field has a NULL value or not.
        :type id_isnull: bool
        :param id_lt: Less than; number
        :type id_lt: int
        :param id_lte: Less than or equal to; number
        :type id_lte: int
        :param id_not: Exclude matches; number
        :type id_not: List[int]
        :param postcode: De door de Post NL vast­ge­stel­de code be­ho­rend bij de straat­naam en het huis­num­mer dan wel de door Post NL vast­ge­stel­de code be­ho­ren­de bij een be­paal­de com­bi­na­tie van een naam open­ba­re ruim­te en een huis­num­mer.
        :type postcode: str
        :param postcode_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type postcode_in: List[str]
        :param postcode_isempty: Whether the field is empty or not.
        :type postcode_isempty: bool
        :param postcode_isnull: Whether the field has a NULL value or not.
        :type postcode_isnull: bool
        :param postcode_like: Matches text using wildcards (? and *).
        :type postcode_like: str
        :param postcode_not: Exclude matches; text
        :type postcode_not: List[str]
        :param soort_container: Dit attribuut geeft een aantal kenmerken (materieel, inhoud in liter en fractie) van een rolcontainer. Bijvoorbeeld: GFE/T 140 Kunststof.
        :type soort_container: str
        :param soort_container_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type soort_container_in: List[str]
        :param soort_container_isempty: Whether the field is empty or not.
        :type soort_container_isempty: bool
        :param soort_container_isnull: Whether the field has a NULL value or not.
        :type soort_container_isnull: bool
        :param soort_container_like: Matches text using wildcards (? and *).
        :type soort_container_like: str
        :param soort_container_not: Exclude matches; text
        :type soort_container_not: List[str]
        :param status: Dit attribuut geeft de actuele status van een rolcontainer aan. De volgende statussen zijn mogelijk.  Active, inactive en blocked.
        :type status: str
        :param status_sinds: Datum waarop de laatste status van een rolcontainer van toepassing is
        :type status_sinds: date
        :param status_sinds_gt: Greater than; use yyyy-mm-dd
        :type status_sinds_gt: date
        :param status_sinds_gte: Greater than or equal to; use yyyy-mm-dd
        :type status_sinds_gte: date
        :param status_sinds_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_sinds_in: List[date]
        :param status_sinds_isnull: Whether the field has a NULL value or not.
        :type status_sinds_isnull: bool
        :param status_sinds_lt: Less than; use yyyy-mm-dd
        :type status_sinds_lt: date
        :param status_sinds_lte: Less than or equal to; use yyyy-mm-dd
        :type status_sinds_lte: date
        :param status_sinds_not: Exclude matches; use yyyy-mm-dd
        :type status_sinds_not: List[date]
        :param status_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type status_in: List[str]
        :param status_isempty: Whether the field is empty or not.
        :type status_isempty: bool
        :param status_isnull: Whether the field has a NULL value or not.
        :type status_isnull: bool
        :param status_like: Matches text using wildcards (? and *).
        :type status_like: str
        :param status_not: Exclude matches; text
        :type status_not: List[str]
        :param straatnaam: Naam van de straat
        :type straatnaam: str
        :param straatnaam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type straatnaam_in: List[str]
        :param straatnaam_isempty: Whether the field is empty or not.
        :type straatnaam_isempty: bool
        :param straatnaam_isnull: Whether the field has a NULL value or not.
        :type straatnaam_isnull: bool
        :param straatnaam_like: Matches text using wildcards (? and *).
        :type straatnaam_like: str
        :param straatnaam_not: Exclude matches; text
        :type straatnaam_not: List[str]
        :param typeadresseerbaarobject: Een Adresseerbaar object is een (abstract) object waaraan adressen kunnen worden toegekend
        :type typeadresseerbaarobject: str
        :param typeadresseerbaarobject_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type typeadresseerbaarobject_in: List[str]
        :param typeadresseerbaarobject_isempty: Whether the field is empty or not.
        :type typeadresseerbaarobject_isempty: bool
        :param typeadresseerbaarobject_isnull: Whether the field has a NULL value or not.
        :type typeadresseerbaarobject_isnull: bool
        :param typeadresseerbaarobject_like: Matches text using wildcards (? and *).
        :type typeadresseerbaarobject_like: str
        :param typeadresseerbaarobject_not: Exclude matches; text
        :type typeadresseerbaarobject_not: List[str]
        :param wijzigingsdatum: Datum tijd waarop de rolcontainer in het systeem voor het laatst is aangepast
        :type wijzigingsdatum: datetime
        :param wijzigingsdatum_gt: Greater than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gt: datetime
        :param wijzigingsdatum_gte: Greater than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_gte: datetime
        :param wijzigingsdatum_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type wijzigingsdatum_in: List[datetime]
        :param wijzigingsdatum_isnull: Whether the field has a NULL value or not.
        :type wijzigingsdatum_isnull: bool
        :param wijzigingsdatum_lt: Less than; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lt: datetime
        :param wijzigingsdatum_lte: Less than or equal to; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_lte: datetime
        :param wijzigingsdatum_not: Exclude matches; use yyyy-mm-dd or yyyy-mm-ddThh:mm[:ss[.ms]]
        :type wijzigingsdatum_not: List[datetime]
        :param woonplaats_naam: Een Woonplaats is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen en van een naam voorzien gedeelte van het grondgebied van de gemeente.
        :type woonplaats_naam: str
        :param woonplaats_naam_in: Matches any value from a comma-separated list: val1,val2,valN.
        :type woonplaats_naam_in: List[str]
        :param woonplaats_naam_isempty: Whether the field is empty or not.
        :type woonplaats_naam_isempty: bool
        :param woonplaats_naam_isnull: Whether the field has a NULL value or not.
        :type woonplaats_naam_isnull: bool
        :param woonplaats_naam_like: Matches text using wildcards (? and *).
        :type woonplaats_naam_like: str
        :param woonplaats_naam_not: Exclude matches; text
        :type woonplaats_naam_not: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._huishoudelijkafval_rolcontainer_retrieve_slash_serialize(
            id=id,
            accept_crs=accept_crs,
            content_crs=content_crs,
            x_api_key=x_api_key,
            csv_header=csv_header,
            csv_separator=csv_separator,
            expand=expand,
            expand_scope=expand_scope,
            fields=fields,
            format=format,
            sort=sort,
            aanmaakdatum=aanmaakdatum,
            aanmaakdatum_gt=aanmaakdatum_gt,
            aanmaakdatum_gte=aanmaakdatum_gte,
            aanmaakdatum_in=aanmaakdatum_in,
            aanmaakdatum_isnull=aanmaakdatum_isnull,
            aanmaakdatum_lt=aanmaakdatum_lt,
            aanmaakdatum_lte=aanmaakdatum_lte,
            aanmaakdatum_not=aanmaakdatum_not,
            bag_nummeraanduiding_identificatie=bag_nummeraanduiding_identificatie,
            bag_nummeraanduiding_identificatie_in=bag_nummeraanduiding_identificatie_in,
            bag_nummeraanduiding_identificatie_isempty=bag_nummeraanduiding_identificatie_isempty,
            bag_nummeraanduiding_identificatie_isnull=bag_nummeraanduiding_identificatie_isnull,
            bag_nummeraanduiding_identificatie_like=bag_nummeraanduiding_identificatie_like,
            bag_nummeraanduiding_identificatie_not=bag_nummeraanduiding_identificatie_not,
            bag_openbareruimte_identificatie=bag_openbareruimte_identificatie,
            bag_openbareruimte_identificatie_in=bag_openbareruimte_identificatie_in,
            bag_openbareruimte_identificatie_isempty=bag_openbareruimte_identificatie_isempty,
            bag_openbareruimte_identificatie_isnull=bag_openbareruimte_identificatie_isnull,
            bag_openbareruimte_identificatie_like=bag_openbareruimte_identificatie_like,
            bag_openbareruimte_identificatie_not=bag_openbareruimte_identificatie_not,
            bag_verblijfsobject_identificatie=bag_verblijfsobject_identificatie,
            bag_verblijfsobject_identificatie_in=bag_verblijfsobject_identificatie_in,
            bag_verblijfsobject_identificatie_isempty=bag_verblijfsobject_identificatie_isempty,
            bag_verblijfsobject_identificatie_isnull=bag_verblijfsobject_identificatie_isnull,
            bag_verblijfsobject_identificatie_like=bag_verblijfsobject_identificatie_like,
            bag_verblijfsobject_identificatie_not=bag_verblijfsobject_identificatie_not,
            bag_woonplaats_identificatie=bag_woonplaats_identificatie,
            bag_woonplaats_identificatie_in=bag_woonplaats_identificatie_in,
            bag_woonplaats_identificatie_isempty=bag_woonplaats_identificatie_isempty,
            bag_woonplaats_identificatie_isnull=bag_woonplaats_identificatie_isnull,
            bag_woonplaats_identificatie_like=bag_woonplaats_identificatie_like,
            bag_woonplaats_identificatie_not=bag_woonplaats_identificatie_not,
            barcode=barcode,
            barcode_in=barcode_in,
            barcode_isempty=barcode_isempty,
            barcode_isnull=barcode_isnull,
            barcode_like=barcode_like,
            barcode_not=barcode_not,
            chip_nummer=chip_nummer,
            chip_nummer_in=chip_nummer_in,
            chip_nummer_isempty=chip_nummer_isempty,
            chip_nummer_isnull=chip_nummer_isnull,
            chip_nummer_like=chip_nummer_like,
            chip_nummer_not=chip_nummer_not,
            chip_type=chip_type,
            chip_type_in=chip_type_in,
            chip_type_isempty=chip_type_isempty,
            chip_type_isnull=chip_type_isnull,
            chip_type_like=chip_type_like,
            chip_type_not=chip_type_not,
            fractie_omschrijving=fractie_omschrijving,
            fractie_omschrijving_in=fractie_omschrijving_in,
            fractie_omschrijving_isempty=fractie_omschrijving_isempty,
            fractie_omschrijving_isnull=fractie_omschrijving_isnull,
            fractie_omschrijving_like=fractie_omschrijving_like,
            fractie_omschrijving_not=fractie_omschrijving_not,
            gebied_buurt_identificatie=gebied_buurt_identificatie,
            gebied_buurt_identificatie_in=gebied_buurt_identificatie_in,
            gebied_buurt_identificatie_isempty=gebied_buurt_identificatie_isempty,
            gebied_buurt_identificatie_isnull=gebied_buurt_identificatie_isnull,
            gebied_buurt_identificatie_like=gebied_buurt_identificatie_like,
            gebied_buurt_identificatie_not=gebied_buurt_identificatie_not,
            gebied_buurt_code=gebied_buurt_code,
            gebied_buurt_code_in=gebied_buurt_code_in,
            gebied_buurt_code_isempty=gebied_buurt_code_isempty,
            gebied_buurt_code_isnull=gebied_buurt_code_isnull,
            gebied_buurt_code_like=gebied_buurt_code_like,
            gebied_buurt_code_not=gebied_buurt_code_not,
            gebied_buurt_naam=gebied_buurt_naam,
            gebied_buurt_naam_in=gebied_buurt_naam_in,
            gebied_buurt_naam_isempty=gebied_buurt_naam_isempty,
            gebied_buurt_naam_isnull=gebied_buurt_naam_isnull,
            gebied_buurt_naam_like=gebied_buurt_naam_like,
            gebied_buurt_naam_not=gebied_buurt_naam_not,
            gebied_ggw_identificatie=gebied_ggw_identificatie,
            gebied_ggw_identificatie_in=gebied_ggw_identificatie_in,
            gebied_ggw_identificatie_isempty=gebied_ggw_identificatie_isempty,
            gebied_ggw_identificatie_isnull=gebied_ggw_identificatie_isnull,
            gebied_ggw_identificatie_like=gebied_ggw_identificatie_like,
            gebied_ggw_identificatie_not=gebied_ggw_identificatie_not,
            gebied_ggw_code=gebied_ggw_code,
            gebied_ggw_code_in=gebied_ggw_code_in,
            gebied_ggw_code_isempty=gebied_ggw_code_isempty,
            gebied_ggw_code_isnull=gebied_ggw_code_isnull,
            gebied_ggw_code_like=gebied_ggw_code_like,
            gebied_ggw_code_not=gebied_ggw_code_not,
            gebied_ggw_naam=gebied_ggw_naam,
            gebied_ggw_naam_in=gebied_ggw_naam_in,
            gebied_ggw_naam_isempty=gebied_ggw_naam_isempty,
            gebied_ggw_naam_isnull=gebied_ggw_naam_isnull,
            gebied_ggw_naam_like=gebied_ggw_naam_like,
            gebied_ggw_naam_not=gebied_ggw_naam_not,
            gebied_stadsdeel_identificatie=gebied_stadsdeel_identificatie,
            gebied_stadsdeel_identificatie_in=gebied_stadsdeel_identificatie_in,
            gebied_stadsdeel_identificatie_isempty=gebied_stadsdeel_identificatie_isempty,
            gebied_stadsdeel_identificatie_isnull=gebied_stadsdeel_identificatie_isnull,
            gebied_stadsdeel_identificatie_like=gebied_stadsdeel_identificatie_like,
            gebied_stadsdeel_identificatie_not=gebied_stadsdeel_identificatie_not,
            gebied_stadsdeel_code=gebied_stadsdeel_code,
            gebied_stadsdeel_code_in=gebied_stadsdeel_code_in,
            gebied_stadsdeel_code_isempty=gebied_stadsdeel_code_isempty,
            gebied_stadsdeel_code_isnull=gebied_stadsdeel_code_isnull,
            gebied_stadsdeel_code_like=gebied_stadsdeel_code_like,
            gebied_stadsdeel_code_not=gebied_stadsdeel_code_not,
            gebied_stadsdeel_naam=gebied_stadsdeel_naam,
            gebied_stadsdeel_naam_in=gebied_stadsdeel_naam_in,
            gebied_stadsdeel_naam_isempty=gebied_stadsdeel_naam_isempty,
            gebied_stadsdeel_naam_isnull=gebied_stadsdeel_naam_isnull,
            gebied_stadsdeel_naam_like=gebied_stadsdeel_naam_like,
            gebied_stadsdeel_naam_not=gebied_stadsdeel_naam_not,
            gebied_wijk_identificatie=gebied_wijk_identificatie,
            gebied_wijk_identificatie_in=gebied_wijk_identificatie_in,
            gebied_wijk_identificatie_isempty=gebied_wijk_identificatie_isempty,
            gebied_wijk_identificatie_isnull=gebied_wijk_identificatie_isnull,
            gebied_wijk_identificatie_like=gebied_wijk_identificatie_like,
            gebied_wijk_identificatie_not=gebied_wijk_identificatie_not,
            gebied_wijk_code=gebied_wijk_code,
            gebied_wijk_code_in=gebied_wijk_code_in,
            gebied_wijk_code_isempty=gebied_wijk_code_isempty,
            gebied_wijk_code_isnull=gebied_wijk_code_isnull,
            gebied_wijk_code_like=gebied_wijk_code_like,
            gebied_wijk_code_not=gebied_wijk_code_not,
            gebied_wijk_naam=gebied_wijk_naam,
            gebied_wijk_naam_in=gebied_wijk_naam_in,
            gebied_wijk_naam_isempty=gebied_wijk_naam_isempty,
            gebied_wijk_naam_isnull=gebied_wijk_naam_isnull,
            gebied_wijk_naam_like=gebied_wijk_naam_like,
            gebied_wijk_naam_not=gebied_wijk_naam_not,
            gebruiksdoel=gebruiksdoel,
            gebruiksdoel_in=gebruiksdoel_in,
            gebruiksdoel_isempty=gebruiksdoel_isempty,
            gebruiksdoel_isnull=gebruiksdoel_isnull,
            gebruiksdoel_like=gebruiksdoel_like,
            gebruiksdoel_not=gebruiksdoel_not,
            geometrie=geometrie,
            geometrie_intersects=geometrie_intersects,
            geometrie_isnull=geometrie_isnull,
            geometrie_not=geometrie_not,
            heeft_barcode_sinds=heeft_barcode_sinds,
            heeft_barcode_sinds_gt=heeft_barcode_sinds_gt,
            heeft_barcode_sinds_gte=heeft_barcode_sinds_gte,
            heeft_barcode_sinds_in=heeft_barcode_sinds_in,
            heeft_barcode_sinds_isnull=heeft_barcode_sinds_isnull,
            heeft_barcode_sinds_lt=heeft_barcode_sinds_lt,
            heeft_barcode_sinds_lte=heeft_barcode_sinds_lte,
            heeft_barcode_sinds_not=heeft_barcode_sinds_not,
            heeft_chip_sinds=heeft_chip_sinds,
            heeft_chip_sinds_gt=heeft_chip_sinds_gt,
            heeft_chip_sinds_gte=heeft_chip_sinds_gte,
            heeft_chip_sinds_in=heeft_chip_sinds_in,
            heeft_chip_sinds_isnull=heeft_chip_sinds_isnull,
            heeft_chip_sinds_lt=heeft_chip_sinds_lt,
            heeft_chip_sinds_lte=heeft_chip_sinds_lte,
            heeft_chip_sinds_not=heeft_chip_sinds_not,
            huisletter=huisletter,
            huisletter_in=huisletter_in,
            huisletter_isempty=huisletter_isempty,
            huisletter_isnull=huisletter_isnull,
            huisletter_like=huisletter_like,
            huisletter_not=huisletter_not,
            huisnummer=huisnummer,
            huisnummer_gt=huisnummer_gt,
            huisnummer_gte=huisnummer_gte,
            huisnummer_in=huisnummer_in,
            huisnummer_isnull=huisnummer_isnull,
            huisnummer_lt=huisnummer_lt,
            huisnummer_lte=huisnummer_lte,
            huisnummer_not=huisnummer_not,
            huisnummertoevoeging=huisnummertoevoeging,
            huisnummertoevoeging_in=huisnummertoevoeging_in,
            huisnummertoevoeging_isempty=huisnummertoevoeging_isempty,
            huisnummertoevoeging_isnull=huisnummertoevoeging_isnull,
            huisnummertoevoeging_like=huisnummertoevoeging_like,
            huisnummertoevoeging_not=huisnummertoevoeging_not,
            id2=id2,
            id_gt=id_gt,
            id_gte=id_gte,
            id_in=id_in,
            id_isnull=id_isnull,
            id_lt=id_lt,
            id_lte=id_lte,
            id_not=id_not,
            postcode=postcode,
            postcode_in=postcode_in,
            postcode_isempty=postcode_isempty,
            postcode_isnull=postcode_isnull,
            postcode_like=postcode_like,
            postcode_not=postcode_not,
            soort_container=soort_container,
            soort_container_in=soort_container_in,
            soort_container_isempty=soort_container_isempty,
            soort_container_isnull=soort_container_isnull,
            soort_container_like=soort_container_like,
            soort_container_not=soort_container_not,
            status=status,
            status_sinds=status_sinds,
            status_sinds_gt=status_sinds_gt,
            status_sinds_gte=status_sinds_gte,
            status_sinds_in=status_sinds_in,
            status_sinds_isnull=status_sinds_isnull,
            status_sinds_lt=status_sinds_lt,
            status_sinds_lte=status_sinds_lte,
            status_sinds_not=status_sinds_not,
            status_in=status_in,
            status_isempty=status_isempty,
            status_isnull=status_isnull,
            status_like=status_like,
            status_not=status_not,
            straatnaam=straatnaam,
            straatnaam_in=straatnaam_in,
            straatnaam_isempty=straatnaam_isempty,
            straatnaam_isnull=straatnaam_isnull,
            straatnaam_like=straatnaam_like,
            straatnaam_not=straatnaam_not,
            typeadresseerbaarobject=typeadresseerbaarobject,
            typeadresseerbaarobject_in=typeadresseerbaarobject_in,
            typeadresseerbaarobject_isempty=typeadresseerbaarobject_isempty,
            typeadresseerbaarobject_isnull=typeadresseerbaarobject_isnull,
            typeadresseerbaarobject_like=typeadresseerbaarobject_like,
            typeadresseerbaarobject_not=typeadresseerbaarobject_not,
            wijzigingsdatum=wijzigingsdatum,
            wijzigingsdatum_gt=wijzigingsdatum_gt,
            wijzigingsdatum_gte=wijzigingsdatum_gte,
            wijzigingsdatum_in=wijzigingsdatum_in,
            wijzigingsdatum_isnull=wijzigingsdatum_isnull,
            wijzigingsdatum_lt=wijzigingsdatum_lt,
            wijzigingsdatum_lte=wijzigingsdatum_lte,
            wijzigingsdatum_not=wijzigingsdatum_not,
            woonplaats_naam=woonplaats_naam,
            woonplaats_naam_in=woonplaats_naam_in,
            woonplaats_naam_isempty=woonplaats_naam_isempty,
            woonplaats_naam_isnull=woonplaats_naam_isnull,
            woonplaats_naam_like=woonplaats_naam_like,
            woonplaats_naam_not=woonplaats_naam_not,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Huishoudelijkafvalrolcontainer",
        }
        response_data = await self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _huishoudelijkafval_rolcontainer_retrieve_slash_serialize(
        self,
        id,
        accept_crs,
        content_crs,
        x_api_key,
        csv_header,
        csv_separator,
        expand,
        expand_scope,
        fields,
        format,
        sort,
        aanmaakdatum,
        aanmaakdatum_gt,
        aanmaakdatum_gte,
        aanmaakdatum_in,
        aanmaakdatum_isnull,
        aanmaakdatum_lt,
        aanmaakdatum_lte,
        aanmaakdatum_not,
        bag_nummeraanduiding_identificatie,
        bag_nummeraanduiding_identificatie_in,
        bag_nummeraanduiding_identificatie_isempty,
        bag_nummeraanduiding_identificatie_isnull,
        bag_nummeraanduiding_identificatie_like,
        bag_nummeraanduiding_identificatie_not,
        bag_openbareruimte_identificatie,
        bag_openbareruimte_identificatie_in,
        bag_openbareruimte_identificatie_isempty,
        bag_openbareruimte_identificatie_isnull,
        bag_openbareruimte_identificatie_like,
        bag_openbareruimte_identificatie_not,
        bag_verblijfsobject_identificatie,
        bag_verblijfsobject_identificatie_in,
        bag_verblijfsobject_identificatie_isempty,
        bag_verblijfsobject_identificatie_isnull,
        bag_verblijfsobject_identificatie_like,
        bag_verblijfsobject_identificatie_not,
        bag_woonplaats_identificatie,
        bag_woonplaats_identificatie_in,
        bag_woonplaats_identificatie_isempty,
        bag_woonplaats_identificatie_isnull,
        bag_woonplaats_identificatie_like,
        bag_woonplaats_identificatie_not,
        barcode,
        barcode_in,
        barcode_isempty,
        barcode_isnull,
        barcode_like,
        barcode_not,
        chip_nummer,
        chip_nummer_in,
        chip_nummer_isempty,
        chip_nummer_isnull,
        chip_nummer_like,
        chip_nummer_not,
        chip_type,
        chip_type_in,
        chip_type_isempty,
        chip_type_isnull,
        chip_type_like,
        chip_type_not,
        fractie_omschrijving,
        fractie_omschrijving_in,
        fractie_omschrijving_isempty,
        fractie_omschrijving_isnull,
        fractie_omschrijving_like,
        fractie_omschrijving_not,
        gebied_buurt_identificatie,
        gebied_buurt_identificatie_in,
        gebied_buurt_identificatie_isempty,
        gebied_buurt_identificatie_isnull,
        gebied_buurt_identificatie_like,
        gebied_buurt_identificatie_not,
        gebied_buurt_code,
        gebied_buurt_code_in,
        gebied_buurt_code_isempty,
        gebied_buurt_code_isnull,
        gebied_buurt_code_like,
        gebied_buurt_code_not,
        gebied_buurt_naam,
        gebied_buurt_naam_in,
        gebied_buurt_naam_isempty,
        gebied_buurt_naam_isnull,
        gebied_buurt_naam_like,
        gebied_buurt_naam_not,
        gebied_ggw_identificatie,
        gebied_ggw_identificatie_in,
        gebied_ggw_identificatie_isempty,
        gebied_ggw_identificatie_isnull,
        gebied_ggw_identificatie_like,
        gebied_ggw_identificatie_not,
        gebied_ggw_code,
        gebied_ggw_code_in,
        gebied_ggw_code_isempty,
        gebied_ggw_code_isnull,
        gebied_ggw_code_like,
        gebied_ggw_code_not,
        gebied_ggw_naam,
        gebied_ggw_naam_in,
        gebied_ggw_naam_isempty,
        gebied_ggw_naam_isnull,
        gebied_ggw_naam_like,
        gebied_ggw_naam_not,
        gebied_stadsdeel_identificatie,
        gebied_stadsdeel_identificatie_in,
        gebied_stadsdeel_identificatie_isempty,
        gebied_stadsdeel_identificatie_isnull,
        gebied_stadsdeel_identificatie_like,
        gebied_stadsdeel_identificatie_not,
        gebied_stadsdeel_code,
        gebied_stadsdeel_code_in,
        gebied_stadsdeel_code_isempty,
        gebied_stadsdeel_code_isnull,
        gebied_stadsdeel_code_like,
        gebied_stadsdeel_code_not,
        gebied_stadsdeel_naam,
        gebied_stadsdeel_naam_in,
        gebied_stadsdeel_naam_isempty,
        gebied_stadsdeel_naam_isnull,
        gebied_stadsdeel_naam_like,
        gebied_stadsdeel_naam_not,
        gebied_wijk_identificatie,
        gebied_wijk_identificatie_in,
        gebied_wijk_identificatie_isempty,
        gebied_wijk_identificatie_isnull,
        gebied_wijk_identificatie_like,
        gebied_wijk_identificatie_not,
        gebied_wijk_code,
        gebied_wijk_code_in,
        gebied_wijk_code_isempty,
        gebied_wijk_code_isnull,
        gebied_wijk_code_like,
        gebied_wijk_code_not,
        gebied_wijk_naam,
        gebied_wijk_naam_in,
        gebied_wijk_naam_isempty,
        gebied_wijk_naam_isnull,
        gebied_wijk_naam_like,
        gebied_wijk_naam_not,
        gebruiksdoel,
        gebruiksdoel_in,
        gebruiksdoel_isempty,
        gebruiksdoel_isnull,
        gebruiksdoel_like,
        gebruiksdoel_not,
        geometrie,
        geometrie_intersects,
        geometrie_isnull,
        geometrie_not,
        heeft_barcode_sinds,
        heeft_barcode_sinds_gt,
        heeft_barcode_sinds_gte,
        heeft_barcode_sinds_in,
        heeft_barcode_sinds_isnull,
        heeft_barcode_sinds_lt,
        heeft_barcode_sinds_lte,
        heeft_barcode_sinds_not,
        heeft_chip_sinds,
        heeft_chip_sinds_gt,
        heeft_chip_sinds_gte,
        heeft_chip_sinds_in,
        heeft_chip_sinds_isnull,
        heeft_chip_sinds_lt,
        heeft_chip_sinds_lte,
        heeft_chip_sinds_not,
        huisletter,
        huisletter_in,
        huisletter_isempty,
        huisletter_isnull,
        huisletter_like,
        huisletter_not,
        huisnummer,
        huisnummer_gt,
        huisnummer_gte,
        huisnummer_in,
        huisnummer_isnull,
        huisnummer_lt,
        huisnummer_lte,
        huisnummer_not,
        huisnummertoevoeging,
        huisnummertoevoeging_in,
        huisnummertoevoeging_isempty,
        huisnummertoevoeging_isnull,
        huisnummertoevoeging_like,
        huisnummertoevoeging_not,
        id2,
        id_gt,
        id_gte,
        id_in,
        id_isnull,
        id_lt,
        id_lte,
        id_not,
        postcode,
        postcode_in,
        postcode_isempty,
        postcode_isnull,
        postcode_like,
        postcode_not,
        soort_container,
        soort_container_in,
        soort_container_isempty,
        soort_container_isnull,
        soort_container_like,
        soort_container_not,
        status,
        status_sinds,
        status_sinds_gt,
        status_sinds_gte,
        status_sinds_in,
        status_sinds_isnull,
        status_sinds_lt,
        status_sinds_lte,
        status_sinds_not,
        status_in,
        status_isempty,
        status_isnull,
        status_like,
        status_not,
        straatnaam,
        straatnaam_in,
        straatnaam_isempty,
        straatnaam_isnull,
        straatnaam_like,
        straatnaam_not,
        typeadresseerbaarobject,
        typeadresseerbaarobject_in,
        typeadresseerbaarobject_isempty,
        typeadresseerbaarobject_isnull,
        typeadresseerbaarobject_like,
        typeadresseerbaarobject_not,
        wijzigingsdatum,
        wijzigingsdatum_gt,
        wijzigingsdatum_gte,
        wijzigingsdatum_in,
        wijzigingsdatum_isnull,
        wijzigingsdatum_lt,
        wijzigingsdatum_lte,
        wijzigingsdatum_not,
        woonplaats_naam,
        woonplaats_naam_in,
        woonplaats_naam_isempty,
        woonplaats_naam_isnull,
        woonplaats_naam_like,
        woonplaats_naam_not,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'aanmaakdatum[in]': 'csv',
            'aanmaakdatum[not]': 'multi',
            'bagNummeraanduiding.identificatie[in]': 'csv',
            'bagNummeraanduiding.identificatie[not]': 'multi',
            'bagOpenbareruimte.identificatie[in]': 'csv',
            'bagOpenbareruimte.identificatie[not]': 'multi',
            'bagVerblijfsobject.identificatie[in]': 'csv',
            'bagVerblijfsobject.identificatie[not]': 'multi',
            'bagWoonplaats.identificatie[in]': 'csv',
            'bagWoonplaats.identificatie[not]': 'multi',
            'barcode[in]': 'csv',
            'barcode[not]': 'multi',
            'chipNummer[in]': 'csv',
            'chipNummer[not]': 'multi',
            'chipType[in]': 'csv',
            'chipType[not]': 'multi',
            'fractieOmschrijving[in]': 'csv',
            'fractieOmschrijving[not]': 'multi',
            'gebiedBuurt.identificatie[in]': 'csv',
            'gebiedBuurt.identificatie[not]': 'multi',
            'gebiedBuurtCode[in]': 'csv',
            'gebiedBuurtCode[not]': 'multi',
            'gebiedBuurtNaam[in]': 'csv',
            'gebiedBuurtNaam[not]': 'multi',
            'gebiedGgw.identificatie[in]': 'csv',
            'gebiedGgw.identificatie[not]': 'multi',
            'gebiedGgwCode[in]': 'csv',
            'gebiedGgwCode[not]': 'multi',
            'gebiedGgwNaam[in]': 'csv',
            'gebiedGgwNaam[not]': 'multi',
            'gebiedStadsdeel.identificatie[in]': 'csv',
            'gebiedStadsdeel.identificatie[not]': 'multi',
            'gebiedStadsdeelCode[in]': 'csv',
            'gebiedStadsdeelCode[not]': 'multi',
            'gebiedStadsdeelNaam[in]': 'csv',
            'gebiedStadsdeelNaam[not]': 'multi',
            'gebiedWijk.identificatie[in]': 'csv',
            'gebiedWijk.identificatie[not]': 'multi',
            'gebiedWijkCode[in]': 'csv',
            'gebiedWijkCode[not]': 'multi',
            'gebiedWijkNaam[in]': 'csv',
            'gebiedWijkNaam[not]': 'multi',
            'gebruiksdoel[in]': 'csv',
            'gebruiksdoel[not]': 'multi',
            'heeftBarcodeSinds[in]': 'csv',
            'heeftBarcodeSinds[not]': 'multi',
            'heeftChipSinds[in]': 'csv',
            'heeftChipSinds[not]': 'multi',
            'huisletter[in]': 'csv',
            'huisletter[not]': 'multi',
            'huisnummer[in]': 'csv',
            'huisnummer[not]': 'multi',
            'huisnummertoevoeging[in]': 'csv',
            'huisnummertoevoeging[not]': 'multi',
            'id[in]': 'csv',
            'id[not]': 'multi',
            'postcode[in]': 'csv',
            'postcode[not]': 'multi',
            'soortContainer[in]': 'csv',
            'soortContainer[not]': 'multi',
            'statusSinds[in]': 'csv',
            'statusSinds[not]': 'multi',
            'status[in]': 'csv',
            'status[not]': 'multi',
            'straatnaam[in]': 'csv',
            'straatnaam[not]': 'multi',
            'typeadresseerbaarobject[in]': 'csv',
            'typeadresseerbaarobject[not]': 'multi',
            'wijzigingsdatum[in]': 'csv',
            'wijzigingsdatum[not]': 'multi',
            'woonplaatsNaam[in]': 'csv',
            'woonplaatsNaam[not]': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if csv_header is not None:
            
            _query_params.append(('_csv_header', csv_header))
            
        if csv_separator is not None:
            
            _query_params.append(('_csv_separator', csv_separator))
            
        if expand is not None:
            
            _query_params.append(('_expand', expand))
            
        if expand_scope is not None:
            
            _query_params.append(('_expandScope', expand_scope))
            
        if fields is not None:
            
            _query_params.append(('_fields', fields))
            
        if format is not None:
            
            _query_params.append(('_format', format))
            
        if sort is not None:
            
            _query_params.append(('_sort', sort))
            
        if aanmaakdatum is not None:
            if isinstance(aanmaakdatum, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum',
                        aanmaakdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum', aanmaakdatum))
            
        if aanmaakdatum_gt is not None:
            if isinstance(aanmaakdatum_gt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gt]',
                        aanmaakdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gt]', aanmaakdatum_gt))
            
        if aanmaakdatum_gte is not None:
            if isinstance(aanmaakdatum_gte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[gte]',
                        aanmaakdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[gte]', aanmaakdatum_gte))
            
        if aanmaakdatum_in is not None:
            
            _query_params.append(('aanmaakdatum[in]', aanmaakdatum_in))
            
        if aanmaakdatum_isnull is not None:
            
            _query_params.append(('aanmaakdatum[isnull]', aanmaakdatum_isnull))
            
        if aanmaakdatum_lt is not None:
            if isinstance(aanmaakdatum_lt, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lt]',
                        aanmaakdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lt]', aanmaakdatum_lt))
            
        if aanmaakdatum_lte is not None:
            if isinstance(aanmaakdatum_lte, datetime):
                _query_params.append(
                    (
                        'aanmaakdatum[lte]',
                        aanmaakdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('aanmaakdatum[lte]', aanmaakdatum_lte))
            
        if aanmaakdatum_not is not None:
            
            _query_params.append(('aanmaakdatum[not]', aanmaakdatum_not))
            
        if bag_nummeraanduiding_identificatie is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie', bag_nummeraanduiding_identificatie))
            
        if bag_nummeraanduiding_identificatie_in is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[in]', bag_nummeraanduiding_identificatie_in))
            
        if bag_nummeraanduiding_identificatie_isempty is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isempty]', bag_nummeraanduiding_identificatie_isempty))
            
        if bag_nummeraanduiding_identificatie_isnull is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[isnull]', bag_nummeraanduiding_identificatie_isnull))
            
        if bag_nummeraanduiding_identificatie_like is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[like]', bag_nummeraanduiding_identificatie_like))
            
        if bag_nummeraanduiding_identificatie_not is not None:
            
            _query_params.append(('bagNummeraanduiding.identificatie[not]', bag_nummeraanduiding_identificatie_not))
            
        if bag_openbareruimte_identificatie is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie', bag_openbareruimte_identificatie))
            
        if bag_openbareruimte_identificatie_in is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[in]', bag_openbareruimte_identificatie_in))
            
        if bag_openbareruimte_identificatie_isempty is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isempty]', bag_openbareruimte_identificatie_isempty))
            
        if bag_openbareruimte_identificatie_isnull is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[isnull]', bag_openbareruimte_identificatie_isnull))
            
        if bag_openbareruimte_identificatie_like is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[like]', bag_openbareruimte_identificatie_like))
            
        if bag_openbareruimte_identificatie_not is not None:
            
            _query_params.append(('bagOpenbareruimte.identificatie[not]', bag_openbareruimte_identificatie_not))
            
        if bag_verblijfsobject_identificatie is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie', bag_verblijfsobject_identificatie))
            
        if bag_verblijfsobject_identificatie_in is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[in]', bag_verblijfsobject_identificatie_in))
            
        if bag_verblijfsobject_identificatie_isempty is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isempty]', bag_verblijfsobject_identificatie_isempty))
            
        if bag_verblijfsobject_identificatie_isnull is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[isnull]', bag_verblijfsobject_identificatie_isnull))
            
        if bag_verblijfsobject_identificatie_like is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[like]', bag_verblijfsobject_identificatie_like))
            
        if bag_verblijfsobject_identificatie_not is not None:
            
            _query_params.append(('bagVerblijfsobject.identificatie[not]', bag_verblijfsobject_identificatie_not))
            
        if bag_woonplaats_identificatie is not None:
            
            _query_params.append(('bagWoonplaats.identificatie', bag_woonplaats_identificatie))
            
        if bag_woonplaats_identificatie_in is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[in]', bag_woonplaats_identificatie_in))
            
        if bag_woonplaats_identificatie_isempty is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[isempty]', bag_woonplaats_identificatie_isempty))
            
        if bag_woonplaats_identificatie_isnull is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[isnull]', bag_woonplaats_identificatie_isnull))
            
        if bag_woonplaats_identificatie_like is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[like]', bag_woonplaats_identificatie_like))
            
        if bag_woonplaats_identificatie_not is not None:
            
            _query_params.append(('bagWoonplaats.identificatie[not]', bag_woonplaats_identificatie_not))
            
        if barcode is not None:
            
            _query_params.append(('barcode', barcode))
            
        if barcode_in is not None:
            
            _query_params.append(('barcode[in]', barcode_in))
            
        if barcode_isempty is not None:
            
            _query_params.append(('barcode[isempty]', barcode_isempty))
            
        if barcode_isnull is not None:
            
            _query_params.append(('barcode[isnull]', barcode_isnull))
            
        if barcode_like is not None:
            
            _query_params.append(('barcode[like]', barcode_like))
            
        if barcode_not is not None:
            
            _query_params.append(('barcode[not]', barcode_not))
            
        if chip_nummer is not None:
            
            _query_params.append(('chipNummer', chip_nummer))
            
        if chip_nummer_in is not None:
            
            _query_params.append(('chipNummer[in]', chip_nummer_in))
            
        if chip_nummer_isempty is not None:
            
            _query_params.append(('chipNummer[isempty]', chip_nummer_isempty))
            
        if chip_nummer_isnull is not None:
            
            _query_params.append(('chipNummer[isnull]', chip_nummer_isnull))
            
        if chip_nummer_like is not None:
            
            _query_params.append(('chipNummer[like]', chip_nummer_like))
            
        if chip_nummer_not is not None:
            
            _query_params.append(('chipNummer[not]', chip_nummer_not))
            
        if chip_type is not None:
            
            _query_params.append(('chipType', chip_type))
            
        if chip_type_in is not None:
            
            _query_params.append(('chipType[in]', chip_type_in))
            
        if chip_type_isempty is not None:
            
            _query_params.append(('chipType[isempty]', chip_type_isempty))
            
        if chip_type_isnull is not None:
            
            _query_params.append(('chipType[isnull]', chip_type_isnull))
            
        if chip_type_like is not None:
            
            _query_params.append(('chipType[like]', chip_type_like))
            
        if chip_type_not is not None:
            
            _query_params.append(('chipType[not]', chip_type_not))
            
        if fractie_omschrijving is not None:
            
            _query_params.append(('fractieOmschrijving', fractie_omschrijving))
            
        if fractie_omschrijving_in is not None:
            
            _query_params.append(('fractieOmschrijving[in]', fractie_omschrijving_in))
            
        if fractie_omschrijving_isempty is not None:
            
            _query_params.append(('fractieOmschrijving[isempty]', fractie_omschrijving_isempty))
            
        if fractie_omschrijving_isnull is not None:
            
            _query_params.append(('fractieOmschrijving[isnull]', fractie_omschrijving_isnull))
            
        if fractie_omschrijving_like is not None:
            
            _query_params.append(('fractieOmschrijving[like]', fractie_omschrijving_like))
            
        if fractie_omschrijving_not is not None:
            
            _query_params.append(('fractieOmschrijving[not]', fractie_omschrijving_not))
            
        if gebied_buurt_identificatie is not None:
            
            _query_params.append(('gebiedBuurt.identificatie', gebied_buurt_identificatie))
            
        if gebied_buurt_identificatie_in is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[in]', gebied_buurt_identificatie_in))
            
        if gebied_buurt_identificatie_isempty is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[isempty]', gebied_buurt_identificatie_isempty))
            
        if gebied_buurt_identificatie_isnull is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[isnull]', gebied_buurt_identificatie_isnull))
            
        if gebied_buurt_identificatie_like is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[like]', gebied_buurt_identificatie_like))
            
        if gebied_buurt_identificatie_not is not None:
            
            _query_params.append(('gebiedBuurt.identificatie[not]', gebied_buurt_identificatie_not))
            
        if gebied_buurt_code is not None:
            
            _query_params.append(('gebiedBuurtCode', gebied_buurt_code))
            
        if gebied_buurt_code_in is not None:
            
            _query_params.append(('gebiedBuurtCode[in]', gebied_buurt_code_in))
            
        if gebied_buurt_code_isempty is not None:
            
            _query_params.append(('gebiedBuurtCode[isempty]', gebied_buurt_code_isempty))
            
        if gebied_buurt_code_isnull is not None:
            
            _query_params.append(('gebiedBuurtCode[isnull]', gebied_buurt_code_isnull))
            
        if gebied_buurt_code_like is not None:
            
            _query_params.append(('gebiedBuurtCode[like]', gebied_buurt_code_like))
            
        if gebied_buurt_code_not is not None:
            
            _query_params.append(('gebiedBuurtCode[not]', gebied_buurt_code_not))
            
        if gebied_buurt_naam is not None:
            
            _query_params.append(('gebiedBuurtNaam', gebied_buurt_naam))
            
        if gebied_buurt_naam_in is not None:
            
            _query_params.append(('gebiedBuurtNaam[in]', gebied_buurt_naam_in))
            
        if gebied_buurt_naam_isempty is not None:
            
            _query_params.append(('gebiedBuurtNaam[isempty]', gebied_buurt_naam_isempty))
            
        if gebied_buurt_naam_isnull is not None:
            
            _query_params.append(('gebiedBuurtNaam[isnull]', gebied_buurt_naam_isnull))
            
        if gebied_buurt_naam_like is not None:
            
            _query_params.append(('gebiedBuurtNaam[like]', gebied_buurt_naam_like))
            
        if gebied_buurt_naam_not is not None:
            
            _query_params.append(('gebiedBuurtNaam[not]', gebied_buurt_naam_not))
            
        if gebied_ggw_identificatie is not None:
            
            _query_params.append(('gebiedGgw.identificatie', gebied_ggw_identificatie))
            
        if gebied_ggw_identificatie_in is not None:
            
            _query_params.append(('gebiedGgw.identificatie[in]', gebied_ggw_identificatie_in))
            
        if gebied_ggw_identificatie_isempty is not None:
            
            _query_params.append(('gebiedGgw.identificatie[isempty]', gebied_ggw_identificatie_isempty))
            
        if gebied_ggw_identificatie_isnull is not None:
            
            _query_params.append(('gebiedGgw.identificatie[isnull]', gebied_ggw_identificatie_isnull))
            
        if gebied_ggw_identificatie_like is not None:
            
            _query_params.append(('gebiedGgw.identificatie[like]', gebied_ggw_identificatie_like))
            
        if gebied_ggw_identificatie_not is not None:
            
            _query_params.append(('gebiedGgw.identificatie[not]', gebied_ggw_identificatie_not))
            
        if gebied_ggw_code is not None:
            
            _query_params.append(('gebiedGgwCode', gebied_ggw_code))
            
        if gebied_ggw_code_in is not None:
            
            _query_params.append(('gebiedGgwCode[in]', gebied_ggw_code_in))
            
        if gebied_ggw_code_isempty is not None:
            
            _query_params.append(('gebiedGgwCode[isempty]', gebied_ggw_code_isempty))
            
        if gebied_ggw_code_isnull is not None:
            
            _query_params.append(('gebiedGgwCode[isnull]', gebied_ggw_code_isnull))
            
        if gebied_ggw_code_like is not None:
            
            _query_params.append(('gebiedGgwCode[like]', gebied_ggw_code_like))
            
        if gebied_ggw_code_not is not None:
            
            _query_params.append(('gebiedGgwCode[not]', gebied_ggw_code_not))
            
        if gebied_ggw_naam is not None:
            
            _query_params.append(('gebiedGgwNaam', gebied_ggw_naam))
            
        if gebied_ggw_naam_in is not None:
            
            _query_params.append(('gebiedGgwNaam[in]', gebied_ggw_naam_in))
            
        if gebied_ggw_naam_isempty is not None:
            
            _query_params.append(('gebiedGgwNaam[isempty]', gebied_ggw_naam_isempty))
            
        if gebied_ggw_naam_isnull is not None:
            
            _query_params.append(('gebiedGgwNaam[isnull]', gebied_ggw_naam_isnull))
            
        if gebied_ggw_naam_like is not None:
            
            _query_params.append(('gebiedGgwNaam[like]', gebied_ggw_naam_like))
            
        if gebied_ggw_naam_not is not None:
            
            _query_params.append(('gebiedGgwNaam[not]', gebied_ggw_naam_not))
            
        if gebied_stadsdeel_identificatie is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie', gebied_stadsdeel_identificatie))
            
        if gebied_stadsdeel_identificatie_in is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[in]', gebied_stadsdeel_identificatie_in))
            
        if gebied_stadsdeel_identificatie_isempty is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[isempty]', gebied_stadsdeel_identificatie_isempty))
            
        if gebied_stadsdeel_identificatie_isnull is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[isnull]', gebied_stadsdeel_identificatie_isnull))
            
        if gebied_stadsdeel_identificatie_like is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[like]', gebied_stadsdeel_identificatie_like))
            
        if gebied_stadsdeel_identificatie_not is not None:
            
            _query_params.append(('gebiedStadsdeel.identificatie[not]', gebied_stadsdeel_identificatie_not))
            
        if gebied_stadsdeel_code is not None:
            
            _query_params.append(('gebiedStadsdeelCode', gebied_stadsdeel_code))
            
        if gebied_stadsdeel_code_in is not None:
            
            _query_params.append(('gebiedStadsdeelCode[in]', gebied_stadsdeel_code_in))
            
        if gebied_stadsdeel_code_isempty is not None:
            
            _query_params.append(('gebiedStadsdeelCode[isempty]', gebied_stadsdeel_code_isempty))
            
        if gebied_stadsdeel_code_isnull is not None:
            
            _query_params.append(('gebiedStadsdeelCode[isnull]', gebied_stadsdeel_code_isnull))
            
        if gebied_stadsdeel_code_like is not None:
            
            _query_params.append(('gebiedStadsdeelCode[like]', gebied_stadsdeel_code_like))
            
        if gebied_stadsdeel_code_not is not None:
            
            _query_params.append(('gebiedStadsdeelCode[not]', gebied_stadsdeel_code_not))
            
        if gebied_stadsdeel_naam is not None:
            
            _query_params.append(('gebiedStadsdeelNaam', gebied_stadsdeel_naam))
            
        if gebied_stadsdeel_naam_in is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[in]', gebied_stadsdeel_naam_in))
            
        if gebied_stadsdeel_naam_isempty is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[isempty]', gebied_stadsdeel_naam_isempty))
            
        if gebied_stadsdeel_naam_isnull is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[isnull]', gebied_stadsdeel_naam_isnull))
            
        if gebied_stadsdeel_naam_like is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[like]', gebied_stadsdeel_naam_like))
            
        if gebied_stadsdeel_naam_not is not None:
            
            _query_params.append(('gebiedStadsdeelNaam[not]', gebied_stadsdeel_naam_not))
            
        if gebied_wijk_identificatie is not None:
            
            _query_params.append(('gebiedWijk.identificatie', gebied_wijk_identificatie))
            
        if gebied_wijk_identificatie_in is not None:
            
            _query_params.append(('gebiedWijk.identificatie[in]', gebied_wijk_identificatie_in))
            
        if gebied_wijk_identificatie_isempty is not None:
            
            _query_params.append(('gebiedWijk.identificatie[isempty]', gebied_wijk_identificatie_isempty))
            
        if gebied_wijk_identificatie_isnull is not None:
            
            _query_params.append(('gebiedWijk.identificatie[isnull]', gebied_wijk_identificatie_isnull))
            
        if gebied_wijk_identificatie_like is not None:
            
            _query_params.append(('gebiedWijk.identificatie[like]', gebied_wijk_identificatie_like))
            
        if gebied_wijk_identificatie_not is not None:
            
            _query_params.append(('gebiedWijk.identificatie[not]', gebied_wijk_identificatie_not))
            
        if gebied_wijk_code is not None:
            
            _query_params.append(('gebiedWijkCode', gebied_wijk_code))
            
        if gebied_wijk_code_in is not None:
            
            _query_params.append(('gebiedWijkCode[in]', gebied_wijk_code_in))
            
        if gebied_wijk_code_isempty is not None:
            
            _query_params.append(('gebiedWijkCode[isempty]', gebied_wijk_code_isempty))
            
        if gebied_wijk_code_isnull is not None:
            
            _query_params.append(('gebiedWijkCode[isnull]', gebied_wijk_code_isnull))
            
        if gebied_wijk_code_like is not None:
            
            _query_params.append(('gebiedWijkCode[like]', gebied_wijk_code_like))
            
        if gebied_wijk_code_not is not None:
            
            _query_params.append(('gebiedWijkCode[not]', gebied_wijk_code_not))
            
        if gebied_wijk_naam is not None:
            
            _query_params.append(('gebiedWijkNaam', gebied_wijk_naam))
            
        if gebied_wijk_naam_in is not None:
            
            _query_params.append(('gebiedWijkNaam[in]', gebied_wijk_naam_in))
            
        if gebied_wijk_naam_isempty is not None:
            
            _query_params.append(('gebiedWijkNaam[isempty]', gebied_wijk_naam_isempty))
            
        if gebied_wijk_naam_isnull is not None:
            
            _query_params.append(('gebiedWijkNaam[isnull]', gebied_wijk_naam_isnull))
            
        if gebied_wijk_naam_like is not None:
            
            _query_params.append(('gebiedWijkNaam[like]', gebied_wijk_naam_like))
            
        if gebied_wijk_naam_not is not None:
            
            _query_params.append(('gebiedWijkNaam[not]', gebied_wijk_naam_not))
            
        if gebruiksdoel is not None:
            
            _query_params.append(('gebruiksdoel', gebruiksdoel))
            
        if gebruiksdoel_in is not None:
            
            _query_params.append(('gebruiksdoel[in]', gebruiksdoel_in))
            
        if gebruiksdoel_isempty is not None:
            
            _query_params.append(('gebruiksdoel[isempty]', gebruiksdoel_isempty))
            
        if gebruiksdoel_isnull is not None:
            
            _query_params.append(('gebruiksdoel[isnull]', gebruiksdoel_isnull))
            
        if gebruiksdoel_like is not None:
            
            _query_params.append(('gebruiksdoel[like]', gebruiksdoel_like))
            
        if gebruiksdoel_not is not None:
            
            _query_params.append(('gebruiksdoel[not]', gebruiksdoel_not))
            
        if geometrie is not None:
            
            _query_params.append(('geometrie', geometrie))
            
        if geometrie_intersects is not None:
            
            _query_params.append(('geometrie[intersects]', geometrie_intersects))
            
        if geometrie_isnull is not None:
            
            _query_params.append(('geometrie[isnull]', geometrie_isnull))
            
        if geometrie_not is not None:
            
            _query_params.append(('geometrie[not]', geometrie_not))
            
        if heeft_barcode_sinds is not None:
            if isinstance(heeft_barcode_sinds, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds',
                        heeft_barcode_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds', heeft_barcode_sinds))
            
        if heeft_barcode_sinds_gt is not None:
            if isinstance(heeft_barcode_sinds_gt, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[gt]',
                        heeft_barcode_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[gt]', heeft_barcode_sinds_gt))
            
        if heeft_barcode_sinds_gte is not None:
            if isinstance(heeft_barcode_sinds_gte, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[gte]',
                        heeft_barcode_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[gte]', heeft_barcode_sinds_gte))
            
        if heeft_barcode_sinds_in is not None:
            
            _query_params.append(('heeftBarcodeSinds[in]', heeft_barcode_sinds_in))
            
        if heeft_barcode_sinds_isnull is not None:
            
            _query_params.append(('heeftBarcodeSinds[isnull]', heeft_barcode_sinds_isnull))
            
        if heeft_barcode_sinds_lt is not None:
            if isinstance(heeft_barcode_sinds_lt, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[lt]',
                        heeft_barcode_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[lt]', heeft_barcode_sinds_lt))
            
        if heeft_barcode_sinds_lte is not None:
            if isinstance(heeft_barcode_sinds_lte, date):
                _query_params.append(
                    (
                        'heeftBarcodeSinds[lte]',
                        heeft_barcode_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftBarcodeSinds[lte]', heeft_barcode_sinds_lte))
            
        if heeft_barcode_sinds_not is not None:
            
            _query_params.append(('heeftBarcodeSinds[not]', heeft_barcode_sinds_not))
            
        if heeft_chip_sinds is not None:
            if isinstance(heeft_chip_sinds, date):
                _query_params.append(
                    (
                        'heeftChipSinds',
                        heeft_chip_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds', heeft_chip_sinds))
            
        if heeft_chip_sinds_gt is not None:
            if isinstance(heeft_chip_sinds_gt, date):
                _query_params.append(
                    (
                        'heeftChipSinds[gt]',
                        heeft_chip_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[gt]', heeft_chip_sinds_gt))
            
        if heeft_chip_sinds_gte is not None:
            if isinstance(heeft_chip_sinds_gte, date):
                _query_params.append(
                    (
                        'heeftChipSinds[gte]',
                        heeft_chip_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[gte]', heeft_chip_sinds_gte))
            
        if heeft_chip_sinds_in is not None:
            
            _query_params.append(('heeftChipSinds[in]', heeft_chip_sinds_in))
            
        if heeft_chip_sinds_isnull is not None:
            
            _query_params.append(('heeftChipSinds[isnull]', heeft_chip_sinds_isnull))
            
        if heeft_chip_sinds_lt is not None:
            if isinstance(heeft_chip_sinds_lt, date):
                _query_params.append(
                    (
                        'heeftChipSinds[lt]',
                        heeft_chip_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[lt]', heeft_chip_sinds_lt))
            
        if heeft_chip_sinds_lte is not None:
            if isinstance(heeft_chip_sinds_lte, date):
                _query_params.append(
                    (
                        'heeftChipSinds[lte]',
                        heeft_chip_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('heeftChipSinds[lte]', heeft_chip_sinds_lte))
            
        if heeft_chip_sinds_not is not None:
            
            _query_params.append(('heeftChipSinds[not]', heeft_chip_sinds_not))
            
        if huisletter is not None:
            
            _query_params.append(('huisletter', huisletter))
            
        if huisletter_in is not None:
            
            _query_params.append(('huisletter[in]', huisletter_in))
            
        if huisletter_isempty is not None:
            
            _query_params.append(('huisletter[isempty]', huisletter_isempty))
            
        if huisletter_isnull is not None:
            
            _query_params.append(('huisletter[isnull]', huisletter_isnull))
            
        if huisletter_like is not None:
            
            _query_params.append(('huisletter[like]', huisletter_like))
            
        if huisletter_not is not None:
            
            _query_params.append(('huisletter[not]', huisletter_not))
            
        if huisnummer is not None:
            
            _query_params.append(('huisnummer', huisnummer))
            
        if huisnummer_gt is not None:
            
            _query_params.append(('huisnummer[gt]', huisnummer_gt))
            
        if huisnummer_gte is not None:
            
            _query_params.append(('huisnummer[gte]', huisnummer_gte))
            
        if huisnummer_in is not None:
            
            _query_params.append(('huisnummer[in]', huisnummer_in))
            
        if huisnummer_isnull is not None:
            
            _query_params.append(('huisnummer[isnull]', huisnummer_isnull))
            
        if huisnummer_lt is not None:
            
            _query_params.append(('huisnummer[lt]', huisnummer_lt))
            
        if huisnummer_lte is not None:
            
            _query_params.append(('huisnummer[lte]', huisnummer_lte))
            
        if huisnummer_not is not None:
            
            _query_params.append(('huisnummer[not]', huisnummer_not))
            
        if huisnummertoevoeging is not None:
            
            _query_params.append(('huisnummertoevoeging', huisnummertoevoeging))
            
        if huisnummertoevoeging_in is not None:
            
            _query_params.append(('huisnummertoevoeging[in]', huisnummertoevoeging_in))
            
        if huisnummertoevoeging_isempty is not None:
            
            _query_params.append(('huisnummertoevoeging[isempty]', huisnummertoevoeging_isempty))
            
        if huisnummertoevoeging_isnull is not None:
            
            _query_params.append(('huisnummertoevoeging[isnull]', huisnummertoevoeging_isnull))
            
        if huisnummertoevoeging_like is not None:
            
            _query_params.append(('huisnummertoevoeging[like]', huisnummertoevoeging_like))
            
        if huisnummertoevoeging_not is not None:
            
            _query_params.append(('huisnummertoevoeging[not]', huisnummertoevoeging_not))
            
        if id2 is not None:
            
            _query_params.append(('id', id2))
            
        if id_gt is not None:
            
            _query_params.append(('id[gt]', id_gt))
            
        if id_gte is not None:
            
            _query_params.append(('id[gte]', id_gte))
            
        if id_in is not None:
            
            _query_params.append(('id[in]', id_in))
            
        if id_isnull is not None:
            
            _query_params.append(('id[isnull]', id_isnull))
            
        if id_lt is not None:
            
            _query_params.append(('id[lt]', id_lt))
            
        if id_lte is not None:
            
            _query_params.append(('id[lte]', id_lte))
            
        if id_not is not None:
            
            _query_params.append(('id[not]', id_not))
            
        if postcode is not None:
            
            _query_params.append(('postcode', postcode))
            
        if postcode_in is not None:
            
            _query_params.append(('postcode[in]', postcode_in))
            
        if postcode_isempty is not None:
            
            _query_params.append(('postcode[isempty]', postcode_isempty))
            
        if postcode_isnull is not None:
            
            _query_params.append(('postcode[isnull]', postcode_isnull))
            
        if postcode_like is not None:
            
            _query_params.append(('postcode[like]', postcode_like))
            
        if postcode_not is not None:
            
            _query_params.append(('postcode[not]', postcode_not))
            
        if soort_container is not None:
            
            _query_params.append(('soortContainer', soort_container))
            
        if soort_container_in is not None:
            
            _query_params.append(('soortContainer[in]', soort_container_in))
            
        if soort_container_isempty is not None:
            
            _query_params.append(('soortContainer[isempty]', soort_container_isempty))
            
        if soort_container_isnull is not None:
            
            _query_params.append(('soortContainer[isnull]', soort_container_isnull))
            
        if soort_container_like is not None:
            
            _query_params.append(('soortContainer[like]', soort_container_like))
            
        if soort_container_not is not None:
            
            _query_params.append(('soortContainer[not]', soort_container_not))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if status_sinds is not None:
            if isinstance(status_sinds, date):
                _query_params.append(
                    (
                        'statusSinds',
                        status_sinds.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds', status_sinds))
            
        if status_sinds_gt is not None:
            if isinstance(status_sinds_gt, date):
                _query_params.append(
                    (
                        'statusSinds[gt]',
                        status_sinds_gt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[gt]', status_sinds_gt))
            
        if status_sinds_gte is not None:
            if isinstance(status_sinds_gte, date):
                _query_params.append(
                    (
                        'statusSinds[gte]',
                        status_sinds_gte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[gte]', status_sinds_gte))
            
        if status_sinds_in is not None:
            
            _query_params.append(('statusSinds[in]', status_sinds_in))
            
        if status_sinds_isnull is not None:
            
            _query_params.append(('statusSinds[isnull]', status_sinds_isnull))
            
        if status_sinds_lt is not None:
            if isinstance(status_sinds_lt, date):
                _query_params.append(
                    (
                        'statusSinds[lt]',
                        status_sinds_lt.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[lt]', status_sinds_lt))
            
        if status_sinds_lte is not None:
            if isinstance(status_sinds_lte, date):
                _query_params.append(
                    (
                        'statusSinds[lte]',
                        status_sinds_lte.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('statusSinds[lte]', status_sinds_lte))
            
        if status_sinds_not is not None:
            
            _query_params.append(('statusSinds[not]', status_sinds_not))
            
        if status_in is not None:
            
            _query_params.append(('status[in]', status_in))
            
        if status_isempty is not None:
            
            _query_params.append(('status[isempty]', status_isempty))
            
        if status_isnull is not None:
            
            _query_params.append(('status[isnull]', status_isnull))
            
        if status_like is not None:
            
            _query_params.append(('status[like]', status_like))
            
        if status_not is not None:
            
            _query_params.append(('status[not]', status_not))
            
        if straatnaam is not None:
            
            _query_params.append(('straatnaam', straatnaam))
            
        if straatnaam_in is not None:
            
            _query_params.append(('straatnaam[in]', straatnaam_in))
            
        if straatnaam_isempty is not None:
            
            _query_params.append(('straatnaam[isempty]', straatnaam_isempty))
            
        if straatnaam_isnull is not None:
            
            _query_params.append(('straatnaam[isnull]', straatnaam_isnull))
            
        if straatnaam_like is not None:
            
            _query_params.append(('straatnaam[like]', straatnaam_like))
            
        if straatnaam_not is not None:
            
            _query_params.append(('straatnaam[not]', straatnaam_not))
            
        if typeadresseerbaarobject is not None:
            
            _query_params.append(('typeadresseerbaarobject', typeadresseerbaarobject))
            
        if typeadresseerbaarobject_in is not None:
            
            _query_params.append(('typeadresseerbaarobject[in]', typeadresseerbaarobject_in))
            
        if typeadresseerbaarobject_isempty is not None:
            
            _query_params.append(('typeadresseerbaarobject[isempty]', typeadresseerbaarobject_isempty))
            
        if typeadresseerbaarobject_isnull is not None:
            
            _query_params.append(('typeadresseerbaarobject[isnull]', typeadresseerbaarobject_isnull))
            
        if typeadresseerbaarobject_like is not None:
            
            _query_params.append(('typeadresseerbaarobject[like]', typeadresseerbaarobject_like))
            
        if typeadresseerbaarobject_not is not None:
            
            _query_params.append(('typeadresseerbaarobject[not]', typeadresseerbaarobject_not))
            
        if wijzigingsdatum is not None:
            if isinstance(wijzigingsdatum, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum',
                        wijzigingsdatum.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum', wijzigingsdatum))
            
        if wijzigingsdatum_gt is not None:
            if isinstance(wijzigingsdatum_gt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gt]',
                        wijzigingsdatum_gt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gt]', wijzigingsdatum_gt))
            
        if wijzigingsdatum_gte is not None:
            if isinstance(wijzigingsdatum_gte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[gte]',
                        wijzigingsdatum_gte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[gte]', wijzigingsdatum_gte))
            
        if wijzigingsdatum_in is not None:
            
            _query_params.append(('wijzigingsdatum[in]', wijzigingsdatum_in))
            
        if wijzigingsdatum_isnull is not None:
            
            _query_params.append(('wijzigingsdatum[isnull]', wijzigingsdatum_isnull))
            
        if wijzigingsdatum_lt is not None:
            if isinstance(wijzigingsdatum_lt, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lt]',
                        wijzigingsdatum_lt.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lt]', wijzigingsdatum_lt))
            
        if wijzigingsdatum_lte is not None:
            if isinstance(wijzigingsdatum_lte, datetime):
                _query_params.append(
                    (
                        'wijzigingsdatum[lte]',
                        wijzigingsdatum_lte.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('wijzigingsdatum[lte]', wijzigingsdatum_lte))
            
        if wijzigingsdatum_not is not None:
            
            _query_params.append(('wijzigingsdatum[not]', wijzigingsdatum_not))
            
        if woonplaats_naam is not None:
            
            _query_params.append(('woonplaatsNaam', woonplaats_naam))
            
        if woonplaats_naam_in is not None:
            
            _query_params.append(('woonplaatsNaam[in]', woonplaats_naam_in))
            
        if woonplaats_naam_isempty is not None:
            
            _query_params.append(('woonplaatsNaam[isempty]', woonplaats_naam_isempty))
            
        if woonplaats_naam_isnull is not None:
            
            _query_params.append(('woonplaatsNaam[isnull]', woonplaats_naam_isnull))
            
        if woonplaats_naam_like is not None:
            
            _query_params.append(('woonplaatsNaam[like]', woonplaats_naam_like))
            
        if woonplaats_naam_not is not None:
            
            _query_params.append(('woonplaatsNaam[not]', woonplaats_naam_not))
            
        # process the header parameters
        if accept_crs is not None:
            _header_params['Accept-Crs'] = accept_crs
        if content_crs is not None:
            _header_params['Content-Crs'] = content_crs
        if x_api_key is not None:
            _header_params['X-Api-Key'] = x_api_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/hal+json', 
                    'text/csv', 
                    'application/geo+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/rolcontainer/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


